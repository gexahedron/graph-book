todo:
	доказать, что
	3-uniform 3-regular linear hypergraphs:
	- bridgeless
		UPD: so this is easy then?
			in a sense that we always have a nz3-flow
		because this bipartite graph,
		which corresponds to hypergraph
		it has nz3-flow always, and it's always bridgeless
		TODO: or did i mean something different by bridgeless here?
	- have 3 hamiltonian cycles, которые образуют balanced triple cover
		прям сразу hamiltonian?
		TODO: Richmond-Cremona configuration


todo: nz-flows
	...


- what other generalizations possible, beyond matroids and signed graphs? maybe continuous analogs?
- ? hypergraphs, (Steiner) triple systems
	- Fano plane (? as analog of K4? Petersen graph?)
	- zero-sum flows
	- ? oriented? oriented Fano plane?
	- ? coloring
	- ? transversals; perfect matchings
	- ? o?c3c; ? 7c3c
	- ? other triple systems (Hall, …)
	- ? matroids (Sylvester matroid), polynomials


https://math.stackexchange.com/questions/1854525/is-there-a-winning-strategy-for-this-tic-tac-toe


хм
steiner triple system требует, что для любой пары вершин найдётся третья, с которой они образуют тройку
	это неправда для доски для игры в крестики-нолики
	которую я видел
	но её дизайн мне всё равно кажется уместным


я построил 7c3c для fano plane, гуд
	(дуальный граф - тоже fano plane
	и это решение и там, и там прокатывает одновременно)
	по ходу я не смогу определить ориентацию, потому что даже непонятно, как её вводить
	но
	у неё кажется есть аналог
	в том смысле, что можно попросить, чтоб
	на каждой прямой каждая из точек ровно 1 раз была в цикле покрыта 1 раз (а не 2)
		назовём это мидл-поинт
	хотя это условие я и так требую


так
- такие гиперграфы называются 3-uniform 3-regular
- я так понимаю число вершин равно числу рёбер
- тогда число слоёв минимум 5, потому что в одном слое максимум 2/3 e, а надо суммарно 3e
- если и есть аналог berge-fulkerson, то он будет чётный (4-cover, 6-cover, ...)
	и понадобится какое-то условие, в духе, что
	каждое ребро лежит на каком-нибудь perfect matching'е
	я за 6-cover, кстати
- у такого графа есть дуальный, где вершины заменяются на рёбра, и наоборот
	по-моему у него то же самое решение будет?
	не, выясняется, что в дуальном графе цикл может испортиться
	и одна и та же свободная вершина будет на 2 прямых лежать одновременно
	тут получается надо:
	- или наложить ограничение на циклы в исходном графе (и тогда понятно, что такой класс замкнут)
	- или расширить понятие цикла, чтоб включало и такие кейсы (и вроде тогда класс будет замкнут)
	- или продолжать жить ни так, ни так
	мне больше всего нравится вариант с расширением, но я попробую оба
		если брать вариант с расширением,
		то такое ощущение, что я могу взять в плоскости фано тупо все рёбра
		не, не могу, только если свободные вершины будут также иногда совпадать с двойными
		но в любом случае появятся циклы длины 4
      .

   .     .
     4.
 1    3
.  2  .     .
		вот такой цикл
- Fact 2.1. For any 3-uniform hypergraph H the following two inequalities hold: ∆(H) ≤ χ′(H) ≤ 3∆(H) − 2
	7 цветов хватит

- так что в теории можно было бы даже усилить требование на циклы
	типа чтобы и в дуальном графе это тоже были циклы

- когда буду писать acknowledgement
	надо будем упомянуть /r/math - за пост про топологические крестики-нолики, который у меня так и не открылся
	за гугл, который по этому запросу показал пост с доской про крестики-нолики на math.stackexchange
	и ещё тут участвует логика самой игры
	чтоб выиграть в ней или не проиграть
	там бывает серия цугцвангов
	и типа она немного напоминает цикл, если всё в ничью скатывается
	фактически - спасибо роскомнадзору

от 3 до 7 цветов в рёберной раскраске
а в вершинной? тоже
надо поизучать будет зависимость числа слоёв в [b]c3c от этих двух параметров
	b - balanced

v\e 3 4 5 6 7
3 :
4 :
5 :
6 :
7 :


как имплементить?
- базовый код перебора графов можно взять из graham-haggkvist гипотезы
- дальше нужно сгенерить все циклы - тут нужна модификация кода из cycles.h
	заодно посчитаю число циклов
	вдруг тут степень тройки вылезет, например
	и я смогу понять - какое из определений для цикла надо брать

	как генерить цикл?
	в графах я перебирал следующую вершину кажется, и брал нужное ребро
	а теперь у каждой вершины будет до 6 соседей
	и впрочем это неизбежно
	возьму за формальное определение такое:
		- на каждом ребре из цикла - 2 двойных вершины, 1 свободная
		- подграф из двойных вершин - цикл как в обычном графе (не обязательно связный)
		- множество свободных вершин и множество двойных - не пересекаются
- дальше проверяю, что каждое из рёбер лежит хотя бы на одном цикле
- дальше уже строю покрытие

21=4+4+4+3+3+3
значит fano plane меньше чем в 6 циклов не покроешь энивей




гиперграфы, код
assert: m == n
- рёбра
	edge_index
	third
		буду считать, что по паре вершин можно восстановить не более одной другой третьей
- вершины
	deg
		должно быть везде 3
	v2v: n, 3, 2
- рёбра/вершины
	v2e: n, 3
	e2v: m, 3
- циклы
	храню список рёбер
	и список свободных вершин


план
- пишу сбалансированное тройное накрытие
	separate_circuits_length_in_bc3c[layer][circuit_in_layer]
	vertex_in_bc3c[layer][v]
	edge_in_bc3c[e][j]
	edge_in_layer[layer][e]
	edge_free_vertex[layer][e]
	number_of_circuits_in_bc3c[layer]
	vertex_count_in_bc3c[v]
	multiset<int> free_vertices[layer]
	edge_count_in_bc3c[e]
	edge_pair_count_in_bc3c[e1][e2]
	total_edge_count_in_bc3c
вроде бы код показывает, что всегда есть накрытия
надо теперь порисовать эти накрытия, наверняка там бага
	(потому что мне часто показывается, что есть накрытия в 3 слоя, на 7 вершинах)


нашлись графы на 10 вершинах без решений
Printing graph:
0:	2_7 (e0)	3_5 (e1)	4_6 (e2)
1:	2_5 (e3)	4_9 (e4)	6_8 (e5)
2:	0_7 (e0)	1_5 (e3)	8_9 (e6)
3:	0_5 (e1)	4_8 (e7)	7_9 (e8)
4:	0_6 (e2)	1_9 (e4)	3_8 (e7)
5:	0_3 (e1)	1_2 (e3)	6_7 (e9)
6:	0_4 (e2)	1_8 (e5)	5_7 (e9)
7:	0_2 (e0)	3_9 (e8)	5_6 (e9)
8:	1_6 (e5)	2_9 (e6)	3_4 (e7)
9:	1_4 (e4)	2_8 (e6)	3_7 (e8)

Printing graph:
0:	1_5 (e0)	3_4 (e1)	7_8 (e2)
1:	0_5 (e0)	2_4 (e3)	6_9 (e4)
2:	1_4 (e3)	5_9 (e5)	6_7 (e6)
3:	0_4 (e1)	6_8 (e7)	7_9 (e8)
4:	0_3 (e1)	1_2 (e3)	5_8 (e9)
5:	0_1 (e0)	2_9 (e5)	4_8 (e9)
6:	1_9 (e4)	2_7 (e6)	3_8 (e7)
7:	0_8 (e2)	2_6 (e6)	3_9 (e8)
8:	0_7 (e2)	3_6 (e7)	4_5 (e9)
9:	1_6 (e4)	2_5 (e5)	3_7 (e8)

на 9 вершинах я такого не наблюдаю



0:  2_9 (e0)  3_4 (e1)  5_7 (e2)
1:  3_5 (e3)  6_7 (e4)  8_9 (e5)
2:  0_9 (e0)  3_8 (e6)  4_7 (e7)
3:  0_4 (e1)  1_5 (e3)  2_8 (e6)
4:  0_3 (e1)  2_7 (e7)  6_9 (e8)
5:  0_7 (e2)  1_3 (e3)  6_8 (e9)
6:  1_7 (e4)  4_9 (e8)  5_8 (e9)
7:  0_5 (e2)  1_6 (e4)  2_4 (e7)
8:  1_9 (e5)  2_3 (e6)  5_6 (e9)
9:  0_2 (e0)  1_8 (e5)  4_6 (e8)
тут и 15 слоёв не хватает вроде как



можно убрать, конечно, требование, что свободные вершины на входят в цикл
	наверно тогда это всё решается и интересно тогда найти наименьшее число слоёв
так
пока что всегда хватает 3 слоёв
i wonder - на скольки вершинах я найду сложный гиперграф
для начала надо найти негамильтоновый граф
не нашёл
ладно, забью
вообще я вручную могу построить граф, который с мостом, и который негамильтонов
0 1 2
0 3 4
0 5 6
1 7 8
1 9 10
2 11 12
2 13 14
теперь, вершины 3,4,5,6:
3 5 15
3 6 16
4 5 16
3 6 15
15 16 .

хм
давай так
раз число рёбер совпадает с числом вершин
то по идее есть matching
	ребро - вершина
так или нет?



cubic graph with bridge:
	0-1, 0-...
		0 and 1 are center vertices
		so no need to describe what happens in the other 0 edges
	1-2, 1-3
	2-4, 2-5
	3-4, 3-5
	4-5

okay, now how we convert it to a bipartite graph?
		let's label partitions by oddness of vertex values
	1-2, 1-4
	2-3, 2-5
	4-7, 4-9
	3-6, 

	wait
	every cubic graph has a Tait coloring
		<=> 3-edge-coloring
		=> at worst nz4-flow, right?
		because we have 2-colored cycles then
		so we don't have bridges then
