============================
============================

todo:
	доказать, что
	3-uniform 3-regular linear hypergraphs:
	- bridgeless
	- have 3 hamiltonian cycles, которые образуют balanced triple cover
		прям сразу hamiltonian?
		TODO: Richmond-Cremona configuration


блог стартовал
о чём написать?
- про то, что можно построить nz7 многими способами
- про то, что если и есть связь o6c4c с o244-flows, то она какая-то неочевидная
	есть ли граф, у которого ни для какого "6c4c с o6c4c" нельзя построить o244-flows?


todo summary:

graph6:
	https://github.com/jkarabas/csnarkx/blob/master/snarkx/src/io_graph6.cpp
	(удалено)

done:
	бывают функции Морса с ровно 1 критической точкой
	https://ac.els-cdn.com/S0001870897916509/1-s2.0-S0001870897916509-main.pdf?_tid=3860ee81-7daa-4dd5-9c65-a9f55e9adee6&acdnat=1536248661_8a48e227c177b1de673fb10f5fac3680
	Morse Theory for Cell Complexes*
	Robin Forman

	хотя я не понимаю пока без контекста - такое ощущение, что речь только про точки,
		типа что там ещё и будут критические грани какие
	а не, вроде действительно
	только 1 критическая точка (Lemma 4.3)

done:
	6c4c, has 2cdc, parity == 0
	почему? (потому что s0 нечётный)
	на o6c4c такого не бывает (потому что там почему-то всегда s0 чётный)

	просто было любопытно
	24.04, o6c4c, длины цепей:
		-1, 0, 1, 4, 5, 6, 10, 11

done:
	has 2cdcs, o6c4c
	правда ли, что все длины цепей дублируются?
	неправда

	24.04g67: another 6c4c: profile: pprprrprprrrrprrprrrrrrprrrrrrrrrppr; s0= 16; s1= 26; s2= 3; par: 1 vs 1; odds: 0; comps: 4 2; circuit lens: l0 (1 0 5 ) l1 (11 5 ) l2 (1 5 0 ) l3 (1 0 5 ) l4 (5 6 5 ) l5 (11 5 ); has 2 cdcs with 1; NEW 6C4C with o6c4c

todo (only rich edges):
	во всех примерах parity == 1 (до 30.05g307)
	в том числе s0 всегда чётный
	(потому что так случается, что число вершин не делится на 4
	s1 нечётный
	s2 равен 0)

done (only rich edges):
	глянуть не только на снарки
	на o6c4c решения
	возможно там всегда нечётное число oriented вершин
	нет
	на 30.05 вершинах есть g307, где or=10

done:
	winding number
	посчитать хотя бы статистики надо какие-нибудь
	может есть какое-то свойство, которое добавляет или не позволяет добавить другие winding числа

done: 	
	winding number
	для o5cdc с dominating circuit
	отдебажил, ура
	18.05: 3-6
	20.05: 2-6
	22.05: 1-8
	а, во, интересное наблюдение!
	winding number зависит от самой цепи, не зависит от решения
		проверил до 20.05
	на 22.05g5 это не так
		и там у одной dominating цепи бывают winding 6 и 7
	ну ок

wontdo: Problem 3.8. Is the Petersen graph the only snark which does not have an even cycle double cover?
(чуваки проверили это утверждение до 28 вершин)
	UPD: проверили до 36 вершин
	Cycle double covers of this type are called even cycle double covers. In [43] it is shown that
		a possible smallest example of another graph than the Petersen graph would be a snark. We have
		verified this property for all snarks on 36 vertices and less.
	Corollary 5.16. All cyclically 4-edge connected cubic graphs on n  36 vertices, except the Petersen graph,
		have an even cycle double cover.
	Note that this does not hold in general if the graph has cyclic 3-edge-cuts. The smallest example
		of a 3-connected cubic graph, except the Petersen graph, without a CDC with only even cycles has 12
		vertices. It is also easy to show that there are cubic graphs in which not all even cycles are part of an
		even cycle double cover. Hence there is no “strong” version of this problem.
	UPD2: нашли контрпримеры тут
	Odd 2-factored snarks
	https://www.sciencedirect.com/science/article/pii/S0195669813002321#br000020

done:
	в разбиении на 2-6cdc
	бывает, что берёшь 3 слоя - а остальные немного меняешь
	и получаешь 5cdc
	так вот
	там бывают вершины, которые покрыты полностью в этих трёх слоях
	правда ли, что они не пересекаются с oriented вершинами?

	неправда (то есть не всегда так)

todo:
->	что есть:
	- число разложений - это степени двойки (то есть скорее всего разложение всегда единственно)
->		надо проверить - связано это как-нибудь с совпадением 5cdc из разных petersen colouring'ов?	
->		нужно доказать, что разбиение на 2 6cdc, если существует,
			то оно essentially единственно
			с точность до того, что мы переставляем цепи, которые полностью poor


	тут получило развитие история про разложение в 2 6cdc
	есть 5cdc с тремя совпадающими слоями-циклами
	10.05, 18.05, 20.05, 22.05, 24.05 - всегда такое есть
	до 20.05 - всегда только 1 разложение в 6cdc
	на 22.05 есть решение с 2 разложениями в 6cdc
	на 24.04g133 - таких разложений бывает много, и это степени двойки


	done: заодно посчитал, сколько таких разложений в 6cdc
		пока что кажется, что это будут степени двойки
		и будет это зависеть от poor рёбер всё

		надо проверить - связано это как-нибудь с совпадением 5cdc из разных petersen colouring'ов?
		хотя пока не пойму как это могло бы произойти
		но там тоже степени двойки
		а, там же тоже есть poor рёбра

	более того
	насколько я вижу эта штука напрямую связана ещё и с циклом
	который в 244-flows
	то есть как раз берём вот эти три слоя, только теперь из 6c4c
	и строим по ним цикл из 244-flows - это будет четвёртый цикл в 5cdc
	а последний пятый цикл возможно проходит через все oriented вершины
		но не факт, что я получу тут что-либо dominating в одном из слоёв
	кстати, получается, что во втором 5cdc в четвёртом слое совпадает цикл
	с циклом из 244-flows
	однако не всегда, есть контрпример, интересно что там
		но там контрпример идёт в дополнение к пятёрке с циклом из 244-flows
	а не, бывает и так
	some1: (nop nop )(nop )(nop )(yep )(nop )(nop )(nop nop )(nop nop )(nop )(nop )total: 10
	так
	интересно попробовать найти 6c4c, который разлагается в 2 разных 6cdc,
		которые упаковываются в 2 разных 5cdc,
		где в одном из них нельзя добавить цикл из 244-flows

		до 20.05 такого нет
		есть такое на 22.05g4
		some1: (nop )(nop )(nop )(nop nop )(nop )(nop nop )(nop )total: 7
		но я проверил
		тут цикл из 244-flows является частью одного из новых слоёв
		some1: (nop )(nop )(nop )(nop nop )(nop )(ins ins )(nop )total: 7
		some1: (nop )(ins ins )(nop )(nop )(nop nop )(nop )(nop )(nop )total: 8
	
	после исправления баги в 5cdc:
	24.05g12: some1: (nop 1: 0 1 3); (nop 1: 0 2 4); (nop 1: 1 4 5); (nop 1: 2 3 5); total: 4
	total >= 4 в 24.05

->	26.05 и выше:
	цель: найти граф, где total == 0
	я думаю, что это реально

	так, я разобрался в механике nop'ов
		походу 244-flow добавляется без проблем,
		но в конце останутся рёбра, которые не накрыты

		nah: они rich? poor? про них можно что-то сказать? или это может быть любое ребро в графе?
			в данном примере - это rich ребро:
			22 2 11 9
			10 11 2 15
			22 2 11 10
			9 11 2 15
			но мне лень это кодить

		layer: 0; vertices: 1: 9 8 3 20 23 22 2 11 10 12 13 4 5 1 9
		layer: 1; vertices: 3: 14 4 5 3 8 16 0 14
		layer: 1; vertices: 5: 21 23 20 7 6 21
		layer: 3; vertices: 9: 12 10 6 21 18 1 9 11 2 15 14 0 12

		остались рёбра: 2: 11(2)
		244-flows:
		23-21-6-10-12-0-14-4-5-1-9-8-3-20-23
		так, хорошо, этот цикл не впихнёшь в первые 3
		теперь надо понять, почему не строится пятый цикл
			наверно проблема будет в том, что надо вершину 2 ещё покрыть?
			да, именно в этом проблема оказалась
			ребро 2-11 висит и никем не покрыто
		fifth cycle:
		2-15-14-4-13-12-0-16-8-9-11-10-6-7-20-3-5-1-18-21-23-22-2

		можно было бы разбить на 2 цепи:
			2-15-14-4-13-12-0-16-8-9-11-2
			2-11-10-6-7-20-3-5-1-18-21-23-22-2
			но куда их добросить?
		done: можно ли перетасовать цепи?
			нельзя
			
			эти шесть цепей несовместимы друг с другом
			2-11-10-6-7-20-3-5-1-18-21-23-22-2
			9 8 3 20 23 22 2 11 10 12 13 4 5 1 9
			12 10 6 21 18 1 9 11 2 15 14 0 12
			23-21-6-10-12-0-14-4-5-1-9-8-3-20-23
			14 4 5 3 8 16 0 14
			2-15-14-4-13-12-0-16-8-9-11-2
			несмотря на то, что эта цепь совмещаема с последними двумя
			21 23 20 7 6 21

done:
	кстати
	у o5cdc можно дополнительно изучить winding number
	нужно правда как-то вершины на плоскости накидать, но я бы мог рандомом посемплить
		или расположить как в dominating circuit
	у графа петерсена, например:
		9 -> 2, 6 -> -1, 5,5,5 -> 0,0,0
		 => 1
		9 -> 1, 6 -> -2, 5,5,5 -> -1,-1,-1
		 => -4
	ну фиг знает, вроде не константа


в неориентированных кейсах
бывает нечётный s0 и при этом есть 2 cdcs
	odd_poor_full_cycles == 0 всё ещё


odd_poor_full_cycles == 0
	бывает ли в таких условиях
	or == 0 или or == 2?
	бывает

has 2cdcs == 1:
	or == 0 или or == 2 бывает?
	на 24.05, 26.05 - нет
		бывает 3-9 (из 0,2-13)

26.05, 28.05:
	(s1 + s2 + odd_poor_full_cycles) по модулю 2 всегда даёт 1
	это легко доказать
	поэтому odd_poor_full_cycles не нужен
	поэтому вопрос про parity сводится скорее к совпадению чётностей
	s0 и odd_poor_full_cycles


прикольно, до 24.04+26.05:
	если глянуть o6c4c
	которые раскладываются на 2 6cdc
	то parity == 1
	также проверил ещё (до 24.04 только), что:
	из petersen 6c4c следует разложение 6c4c в 2 cdc
		что вроде как и так очевидно

	что ещё:
	s0 - чётно
	s2 - 0 или 3
	or vs s2:
	3; 0;
	4; 3;
	5; 0;
	6; 3;
	7; 0;
	8; 3;
	9; 0;
	or совпадает по чётности с s1

done:
	глянуть другие o6c4c решения, где такая же связь между oriented, s1, s2
	типа
	or совпадает с s1 по чётности
	s2 == 0 или 3 и противоположно по чётности с or или s1

	да, есть проблема в 24.05g24
	or  s0  s1  s2
	05; 15; 25; 0;

	тогда ещё надо s0 чётно - но тогда parity автоматом будет 1

done:
	хотя можно попробовать вот чего глянуть:
	есть ли кейсы, когда s0 чётно, s2 == 0 или 3
	а вот or или s1 выходят из строя
	точнее:
	- кейсы, где parity == 1, or не совпадает по чётности с s1
		24.05: s0=14; or=04; s1=25; s2=0;
	- кейсы, где parity == 0, or не совпадает по чётности с s1 (и тогда parity с or вместо s1 прокатило бы)
		24.05: s0=14; or=07; s1=26; s2=0;
done:
	так, вскрылись новые подробности
	оказывается t4 ещё полезно выводить, оно делится на 2
	а t3 совпадает по чётности с s1
	надо дальше исследовать кейсы!
	про t1 и t2 видимо ничего не скажешь


done:
	поискать 6c4c, которые раскладываются на 5cdc+6cdc
	на 24.05,26.05 таких нет

Claim 6.2. Dominating circuit conjecture has no counterexamples on 36 or fewer vertices.
Claim 6.5. Petersen colouring conjecture has no counterexamples on 36 or fewer vertices.


снарки контрпримеры:
- проблемы мелких снарков:
	- total chromatic number: == 4 for all cyclically 4-edge-connected snarks with at most 36 vertices
	- hist: все снарки до 36 вершин
	- oddness: == 2 for all snarks on <= 28 vertices
	- oddness 4 and cyclic connectivity 4: 44 вершины (girth of each such snark is at least 5)


- есть мои снарки контрпримеры
	надо их сохранить что ли в отдельный файлик
	24.05g17: yepinsnopdiffs

- non-hist snarks (2 примера)
	файл готов
- Snarks with circular flow number 5
	28	1, 30	2, 32	9, 34	25, 36	98
	сохранил
- girth ≥ 6
	28	1, 30	1, 36	1, 38	39, 40	>=25
	сохранил
- girth >= 7
	переборных примеров нет (число вершин > 42)
	а вообще есть конструкция в статье
	Snarks without Small Cycles
- large oddness
	Small snarks with large oddness
	конструкций нет
	а не, вру, есть
	The first infinite class of cyclically 6-connected snarks with arbitrarily large oddness was described by Kochol [13]
	Superposition and Constructions of Graphs Without Nowhere-zero k-flows
    - cyclically 6-edge-connected snark of order 6n + 120
		G4'', сохранил картинкой
	- Snarks with large reluctance
		figure 10.15, сохранил картинкой
	- Snarks with large oddness
		LEMMA 10.4. The oddness of a cubic graph is greater than or equal to its 4-reluctance.

- total chromatic number == 5
	Theorem 5 There exist Type 2 snarks for each even order n ≥ 40.
	сохранил картинкой (type 2)
	A computer search gave that all snarks on up to 34 vertices are Type 1,
	so the only possible orders for which the existence is not yet known are 36 and 38.
- а можно и по семействам пройтись заодно
	todo
- oddness 4, cyclic connectivity 4
	есть пример на 44 вершинах (сохранил картинкой)
- smallest currently known cyclically 5-edge-connected snark
	with oddness at least 4 has 76 vertices
	todo:
- есть пример графа от hoffman-ostenhof
	сохранил картинкой
- grunbaum conjecture counterexamples
	сохранил картинкой (G74)
- пример из статьи On measures of edge-uncolorability of cubic graphs: A brief survey and some new results
	сохранил картинкой (w = 8, w' = 6)
- есть контрпримеры в статьях Brinkmann

	format: Each list corresponds to an adjacency list for the graph
	where only higher numbered neighbours are listed.
	That is, first comes the neighbours of vertex 1,
	next the higher numbered neighbours of vertex 2 and so on.
	bghm формат, назову это так

	The 12 cyclically 5-edge connected permutation snarks on 34 vertices
	The 44 cyclically 5-edge connected snarks on n = 36 vertices with 2-regular subgraphs which are part of a CDC but not part of any 5-CDC:
	The 68 snarks on n = 30 vertices with 2-regular subgraphs which are part of a CDC but not part of any 5-CDC:

	There are 7 strong snarks on 34 vertices and 25 strong snarks on 36 vertices. There are no strong snarks of smaller order.
	Observation 23. There are at least 298 strong snarks with 38 vertices.
	34 и 36 ещё отдельно в bghm
	38 в multicode

	8.2. Cyclically 5-connected snarks with stable cycles.
	The four cyclically 5-connected stable snarks on 32 vertices

	8.1. A cubic graph where all 2-factors only consist of odd cycles.
	This graph is the smallest counterexample to Conjecture 4.11
	Refuted Conjecture 4.11 (Abreu, Labbate, Sheehan [1] ). The only snarks where all 2-factors consist of only odd cycles are the Petersen graph, the Blanuˇsa-2 snark and the Flower snarks.



кстати, моя программа явно не зайдёт на больших снарках,
	нужно будет какие-то жёсткие эвристики придумать

Smallest snarks with oddness 4 and cyclic connectivity 4 have order 44
	(girth of each such snark is at least 5)
	надо эти снарки в явно виде себе сохранить и потестить на них все интересные мне гипотезы

Cycle double covers and non-separating cycles
	Which 2-regular subgraph R of a cubic graph G can be extended to a cycle dou- ble cover of G? We provide a condition which ensures that every R satisfying this condition is part of a cycle double cover of G. As one consequence, we prove that every cubic graph which has a decomposition into a spanning tree and a 2-regular subgraph C consisting of k circuits with k ≤ 3, has a cycle double cover containing C. Moreover, we generalize these results and we state some new conjectures.

	In this paper the following concept is essential: a subgraph C of a connected graph H is called non-separating if H−E(C) is connected, and separating if H−E(C) is disconnected.

	кстати, цикл из 244-flows всегда non-separating

	The cdc can be reduced to snarks, i.e
	cyclically 4-edge connected cubic graphs
	of girth 5 admitting no 3-edge coloring

	Theorem 1 Every snark with less than 38 vertices is a Hist-snark.

	вот бы мне все гипотезы проверить до 38 вершин

	Observe that not every snark has a Hist. There are at least two snarks with 38 vertices which do not have a Hist, see X1 and X2 in Appendix A3
	а вот это внезапно сейчас было для меня

	It was conjectured in [3] that the non-separating cycle G − E(T) of every Hist-snark G with Hist T is contained in a CDC of G

	Conjecture 3.1 Every hist-snark has a cycle double cover which contains all outer cycles.

	Observation 3.2 [9] Let G be a snark with a hist T. Suppose there is a matching M of G satisfying M ⊆ E(G) − E(T ), and suppose the cubic graph homeomorphic to G − M is 3-edge colorable. Then G has a cycle double cover containing all outer cycles of G.

	Conjecture 25 Let C be a non-separating cycle of a snark G. Then G has a CDC S with C ∈ S.
	это забавно, потому что это лёгкий намёк на то, что
		конструкция 6c4c-244-flows-33-pp имеет право на жизнь
	upd: кажется я перепутал тут что-то
		потому что я позже проверил и 244-flows цикл совсем не обязательно non-separating

	todo: изучить это понятие
	Conjecture 27 Every snark is separable.
	Corollary 19 Every separable cubic graph has a cycle double cover.

	Conjecture 28 Every cyclically 4-edge connected cubic graph has an O-frame.

	A3. The adjacency lists of the Hist-free snarks X1, X2 with 38 vertices.
	X1∶ 0(8,12,18)1(5,9,13)2(4,14,20)3(5,7,8)4(5,12)6(7,10,13)7(14)8(15)9(19,22) 10(18, 24)11(26, 34, 36)12(16)13(16)14(17)15(17, 19)16(17)18(21)19(21)20(25, 36)21(27) 22(30, 34)23(25, 28, 31)24(26, 37)25(35)26(32)27(29, 31)28(29, 30)29(32)30(33)31(33)32(33) 34(35)35(37)36(37)

	X2∶ 0(8,12,18)1(5,9,13)2(4,14,20)3(5,7,8)4(5,12)6(7,10,13)7(14)8(15)9(19,22) 10(18, 24)11(26, 34, 36)12(16)13(16)14(17)15(17, 19)16(17)18(21)19(21)20(28, 34)21(27) 22(26, 37)23(27, 30, 32)24(25, 36)25(30, 35)26(33)27(29)28(31, 32)29(31, 33)30(31)32(33) 34(35)35(37)36(37)

цикл из 244-flows - он может участвовать в этом же 6c4c решении в одном из оставшихся слоёв?
	или вообще в других 6c4c решениях?
	или вообще быть частью full cycle?
	если нет, то как доказать?
	

We prove that the Petersen colouring conjecture implies
a conjecture of Markström saying that
the line graph of every bridgeless cubic graph is
decomposable into cycles of even length.

o6c4c vs nz5 vs 2bm; vs nz-mod5; vs nz-mod6
topological crystals
6c4c и 6cdc
petersen colourings и совпадение по 5cdc (там какое-то диковинное паросочетание)
G ---Z3--> H (333-flows)
это уже всё изучать буду перед написанием статьи
и можно закрываться.

построить dominating circuits для каких-нибудь семейств снарков
построить o6c4c для каких-нибудь семейств снарков

история про graham-haggkvist conjecture (альтернированные по цвету цепочки рёбер для k=3)

собрать все места, где появляется граф Петерсена
по каждой гипотезе написать минимальный контрпример
страничка про диковинные снарки

как посчитать чётность числа oriented вершин, используя только числа из неориентированного решения?
oriented vs dominating
	тут тогда вообще интересно понять - какие маленькие подмножества вершин бывают запрещёнными для dominating circuit?
psl 2 z
ядро оператора лапласа
6c4c с 17 и 18 rich рёбрами, которые непетерсеновы
инвариант для 6c4c решений
не бывает ровно 1 oriented вершины
как далеко или близко друг от друга могут располагаться oriented vertices?
? {0 oriented vertices} < {? RP2, wat}
категорификация - integral flow polynomial, tension polynomial, tension flow polynomial
stable dominating circuit в снарках
cubic cyclically 4-edge-connected graph - что про них можно сказать?
dominating circuit и fox colouring
nz-k polynomial для решений, где не выбросить ни одной цепи
снарки (а мб cyclically 4-edge-connected) vs спектр графа
dominating circuit vs спектр графа
производящая функция графов без мостов
In Example 5.5.1 the set of bridgeless graphs Pbl was introduced. This set of graphs is of importance as it will form the foundation for the Hopf algebra of Feynman diagrams in the next chapter.
bridgeless class 2 графы
1 слой o6c4c и nz5 - можно ли восстановить o6c4c?
ppdc (закодить)
cayley graphs (хочется примеров)
4-term relation (изучаю)
tree packing (gyarfas-lehel conjecture)
edge-graceful (нужен write up)
In [4] Papadimitriou proposed to study the complexity of search problems for total functions, in which the existence of a solution is guaranteed via simple combinatorial arguments, but no efficient algorithmic solutions are known. See also [3, 5, 1] for other related works.

connected chord diagrams and bridgeless maps
o6c4c vs multiloop chord diagrams
	Delta-matroids were introduced by A. Bouchet [4] for the purpose of studying embedded graphs, whence their relationship with (multiloop) chord diagrams is by no means unexpected one can define both the first and the second Vassiliev moves for binary delta-matroids and introduce a 4-term relation for them in such a way that the mapping taking a chord diagram to its delta-matroid respects the corresponding 4-term relations
	Some evidence for the existence of such a relationship can be found, for example, in [2], where the Tutte polynomial for embedded graphs has been introduced. The authors show that this polynomial depends on the delta-matroid of the embedded graph rather than the graph itself and satisfies the Vassilev 4-term relation.

разные определения coset graph'ов (Sabidussi double coset graph'ы)

It is known that a (q + 1 )-regular undirected graph X is the quotient 
graph of the tree associated to PGL_2(L) by the fundamental group of X, 
where L is a nonarchimedean local field with q elements in its residue field 
(cf. [Serre - Trees]).

Theorem 3.1. A graph G has a 5-cycle double cover if and only if G has two sub-graphs A and B such that...
контрпримеры к гипотезе Jaeger'а про Circular Flow
o244-flows vs o6c4c
любая ли цепь бывает в 5cdc как целый слой
правильно ли я понимаю, что 33-pp, которые не 333-pp, то они же и не 334-pp?
нужно узнать бы - любое ли ребро сидит на каком-нибудь dominating circuit
статистики по nz5 и статистики вообще


	- посчитать длину shortest 3-cycle cover, shortest (4-)cycle cover
	- у меня была процедура для некоторых 5cdc, как из них получить ещё 5cdc
		в петерсене вроде можно так o5cdc словить, может быть это даже связано с тем,
		что цикл, где все рёбра накрыты 2 раза в одну и ту же сторону - с ним мы и делаем симметрическую разность
		нет, не связано
		а как оно в других графах?
	- как в графе Петерсена из какого-нибудь 5cdc решения (86655) получить
		какое-нибудь o5cdc решение (96555)?
	- стоит изучить, как из 5cdc получается nz6, может можно вытащить o6cdc?
	- проверить, что все nz5, nz-mod5 можно получить из 33-pp
	- может сравнить
		6c4c-244-flows-33-pp-nz5 с dominating-circuit-33-pp-nz5?
		ну или 33-pp и там, и там
		ну может тут dominating circuit, dominating cycle вообще не причём
		может тут вообще речь про любой o5cdc, 5cdc,
		у которого есть слой с oriented вершинами,
		и у которого есть соответствующий nz5 из 33-pp, совпадающий с nz5 из o6c4c или из 6c4c-244-flows-33-pp-nz5
	- изучить 333-pp и o5cdc (в данный момент я плохо понимаю, почему из 333-pp я однозначно вроде как могу построить o5cdc,
		при этом из 33-pp нельзя вытащить ориентацию на циклах, но сами циклы вытаскиваются
		то есть
		откуда берутся противоречия в ориентациях в 33-pp и почему их нет в 333-pp?)
	- strong petersen colouring - глянуть хотя бы 1 пример и вообще понять - как он сохраняет ориентацию
	- протестировать весь свой код, провалидировать, попрофилировать
	- поправить перебор 5cdc (и ещё сейчас там есть дубликаты
		скажем, надо точно ещё проверить, что gen_33pp_from_5cdc попадает во все возможные 33pp)
	- сравнить nz5 из o244-flows, (а мб и из 244-flows) и из 33-pp
		так
		первое, что стало понятно - ребро 4 в o244-flows-nz5 будет сидеть на цикле,
		ребро 4 в 6c4c-244-flows-33-pp-nz5 будет сидеть вне цикла
		но можно сравнить nz-mod5
	- кстати, надо обобщить конструкцию 6c4c-244-flows-33-pp на некубические графы
	- зарелизить код
	- написать отчёт обо всех экспериментах
	- написать визуализатор
	- поднять веб-сервер с инфой про каждый снарк
	- добавить поддержку формата graph6
		в nauty есть файл showg.c, в нём есть функция
		stringtograph(char *s, graph *g, int m)
		/* Convert string (graph6, digraph6 or sparse6 format) to graph. */
	- глянуть несколько больших графов, закодированных в graph6
	- добавить возможность потестить несколько рандомных графов из файла
    - можно ли dominating circuit как-то собрать из циклов в o6c4c?
        и если да, то какие получаются веса?
        вроде нельзя уже на графе петерсена (противоречие на 3 рёбрах, которые выходят из oriented вершин и идут по
        	dominating circuit)
    - можно ли из 333-pp вытащить остальные nz5, которые вытаскиваются из o5cdc?
    	да, можно
    	правда при условии, что я знаю f5
    	а я его знаю? скажем, что делать, если несколько цепей в цикле?

    - удивительно, что в nz5 - 4 типа вершин, и в nz-mod5 тоже
    	но сомневаюсь, что есть какое-то преобразование одного в другой (даже если не очень каноническое)
    	(судя по nz4, nz-mod4 и 3-edge-colorability - логично было бы предположить,
    		что nz5 как-то связан с petersen colouring, или с каким-нибудь ещё colouring)
    	хотя в nz4 и nz-mod4 та же ситуация
    		зато тут есть какого-то вида преобразование:
    		2 соответствует 2;
    		оно образует perfect matching, и вообще
    		есть покраска графа в 3 цвета, один из которых совпадает с 2, а другие два чуть хитрее, но известно как вычисляются
    	а вот в nz3 один тип, в nz-mod3 два типа, но зато точно чередующихся (двудольный граф)


T-joins
выписать все интересные известные семейства снарков
schreier representation
	Example 4.1. The Petersen graph is 3-regular and hence can be seen as a Schreier graph
		Γ = ⟨x, a | a**2⟩ ≃ Sch(Z ∗ Z/2Z, H, X ± ), see Figure 1. 
graceful labeling для снарков
- закодить разложения снарков на простые
- на самом деле всё это упирается ещё и в то, что тут везде очень мелкий girth
- написать визуализатор графов
- внедрить парсер graph6 формата
nz6 -> (3,4)-pp -> nz6
пространства циклов
	кажется, что каждое решение порождает какое-то своё (линейное) подпространство циклов
	хочется их попересекать
	nz5, 33-pp, 5cdc, o5cdc, 6c4c, o6c4c, 2bm, o244-flows, 333-flows, o334-flows
может можно найти комбинаторные описания других снарков?



============================
============================

todo:
	https://arxiv.org/pdf/1602.00283.pdf
	http://mysite.science.uottawa.ca/asebbar/publi/mfcs.pdf
	http://mysite.science.uottawa.ca/asebbar/publi/mcse.pdf
	http://doc.sagemath.org/pdf/en/reference/arithgroup/arithgroup.pdf
	https://arxiv.org/pdf/1201.3633.pdf

	psl 2 z, finite index subgroups of the modular group
	"psl" 2 z trivalent graphs
	quiver gauge theories trivalent graphs
	"psl" 2 z subgroups of finite index coset graph
	finite index torsion free subgroup of "PSL"(2;Z)
	Congruence subgroups, coset graphs
	cubic graphs modular subgroup

	https://mathoverflow.net/questions/181098/connection-between-strebel-differentials-ribbon-graphs-and-belyi-maps

todo:
	есть красивые мысли про потоки на графах
	что они сидят в ядре оператора лапласа
	тут же фактически ведь какая-то теория ходжа сидит?

todo:
	собрать все места, где появляется граф Петерсена, например
	https://arxiv.org/pdf/0909.3685.pdf

todo:
	topological crystals
	https://johncarlosbaez.wordpress.com/2016/08/06/topological-crystals-part-3/
	
todo:
	Polynomial graph invariants and the KP hierarchy

todo:
	RIBBON GRAPHS, QUADRATIC DIFFERENTIALS ON RIEMANN SURFACES, AND ALGEBRAIC CURVES DEFINED OVER Q

todo, prove!:
->	утверждение - не бывает ровно 1 oriented вершины
	почему?
	проверил до 30.05 включительно

	попробую построить доказательство
	от противного
	беру o6c4c
	беру вершину какую-нибудь
	допустим она ориентирована, а остальные нет
	берём все цепи, которые проходят через эту вершину
	ориентирую их
	дальше смотрю на соседей этой вершины
		а наверно даже так
		смотрю на рёбра, рядом с данной вершиной
		они либо rich, либо poor
	но рядом могут быть только rich рёбра
		иначе один из соседов тоже oriented
		это понятно, хорошо
	значит рядом сидят unoriented вершины и дальше вообще во всём графе unoriented
		и про остальные рёбра я ничего сказать не могу
		poor или rich они
	непонятно

	возможно это аналог теоремы про
	compact riemann surfaces
		и если это не сфера
	meromorphic function
	cannot have one simple pole and one simple zero
	точнее
	если ровно one simple pole
		то это риманова сфера
	так, я более-менее понял это доказательство,
		но к графам оно непонятно как могло бы быть применимо
		нужно ввести отображение графов (хотя это есть),
		и ещё степень отображения (а вот этого у нас)

nah:
	24.04g120 и 24.04g133 очень похожи
	с точки зрения 6c4c

done:
	беру o6c4c
	изучаю цепи, где все рёбра rich
	пускай в графе есть poor рёбра
	вот эти цепи
	правда ли, что они всегда накрывают граф не более 2 раз,
		причём с ориентацией всё ок?

	то что "не более 2 раз" ломается уже на 18.05g1 (ребро 8-12)
	ориентация ломается там же (ребро 14-0)

	rich edges: 0(0, 12) 1(0, 14) 2(0, 3) 3(1, 9) 4(1, 16) 6(2, 17) 8(2, 9) 9(3, 5) 10(3, 7) 13(5, 16) 16(7, 17) 17(8, 12) 18(8, 15) 19(8, 11) 20(9, 11) 21(10, 14) 22(10, 13) 23(10, 11) 24(12, 13) 25(14, 15)
	poor edges: 5(1, 6) 7(2, 4) 11(4, 13) 12(4, 5) 14(6, 15) 15(6, 7) 26(16, 17)
	oriented vertices: 3 9 10 12
	circuits:
	layer: 0; vertices: 12 13 10 11 8 12
	layer: 1; vertices: 12 0 14 10 13 12
	layer: 2; vertices: 15 8 11 10 14 15
	layer: 3; vertices: 14 0 3 7 17 2 9 11 10 14
	layer: 4; vertices: 12 8 15 14 0 12
	layer: 5; vertices: 12 8 11 9 1 16 5 3 0 12

nah:
	графы, где с чётностью уже всё хорошо (где хватает s0+s1+s2)
	o6c4c:
	10.05: g1
	18.05: g1
	20.05: g1, g6
	22.05: g8, g12, g18
	24.05: g12, g17, g28, g30, g31, g37

	6c4c:
	10.05: g1
	18.05: g1
	20.05: g1
	22.05: g8
	24.05: пусто
	26.05: пусто

done:
	посчитать такую штуку
	фиксирую 6c4c
	смотрю на oriented vertices
	дальше для каждого набора смотрю на dominating circuits,
	которые проходят через этот набор oriented vertices
	и считаю - сколько вершин в правильную сторону повёрнуты, а сколько нет
	посчитал, кажется ничего интересного
	есть графы, где в o6c4c parity == 0? при этом есть подходящий dominating circuit

done:
	для каждого ли o6c4c можно найти circuit, чтоб он прошёл через oriented вершины в правильной ориентации?
	(не обязательно dominating circuit)
	нет, не для каждого

todo:
	тут всплыло очень интересное наблюдение (только для снарков):
	меньше 15 rich рёбер не бывает (хотя если граф не Петерсена,
		то я и на них не могу найти решение с 15 рёбрами, до 28.05)
	а также не бывает 16 rich рёбер
	somehow это очень похоже на petersen colouring, но им не является
	а что это тогда?

	глянул 18.05g1
		o6c4c, непетерсеново решение
		получаю граф Петерсена, если рёбра склеить так, чтоб не было циклов длины < 4

done:
	поискать связи между o6c4c и o5cdc решениями
	а именно
	беру o6c4c
	у него есть oriented vertices (мб даже пустое множество)
	дальше хочется (найти o5cdc, где решение проходит
					через эти вершины в правильной ориентации)
		хочется понять
		всегда ли найдётся o5cdc,
		который проходит через oriented vertices в тех же ориентациях?
	закодил
	есть o6c4c, где нет подходящего o5cdc по oriented vertices
	есть o6c4c, где parity получаю 0, но при этом есть подходящий o5cdc
		хм
		до 20.05 - я не могу найти обратного примера, когда parity == 0,
		при этом подходящего o5cdc не находится
		на 22.05 такие примеры появляются, хотя их очень мало (7; g6, g13, g15)
			везде в них s0 = 14; or+t3 чётно;
			circuits_odd_poor = 2 при нечётном or, = 6 при чётном or
			poor_breaking_orientation + odd_poor_comps_full_cycles == 2
			circuits_without_oriented_vertices == 0
g6 : new o6c4c: or: 09; t1+t3: 24; s0: 14; s1: 28; s2: 2; hist: 21; s': 5 1 10 1 2 0 1 10 0; PAR: 0 (0);
g6 : new o6c4c: or: 11; t1+t3: 28; s0: 14; s1: 26; s2: 2; hist: 23; s': 6 2 14 1 2 0 0 13 0; PAR: 0 (0);
g6 : new o6c4c: or: 09; t1+t3: 24; s0: 14; s1: 28; s2: 2; hist: 21; s': 5 1 10 1 2 0 1 10 0; PAR: 0 (0);
g13: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 28; s2: 2; hist: 18; s': 4 1 10 1 6 4 1 9  0; PAR: 0 (0);
g13: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 28; s2: 2; hist: 18; s': 4 1 10 1 6 4 1 9  0; PAR: 0 (0);
g15: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 28; s2: 2; hist: 18; s': 4 1 10 1 6 4 1 9  0; PAR: 0 (0);
g15: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 28; s2: 2; hist: 18; s': 4 1 10 1 6 4 1 9  0; PAR: 0 (0);
		24.05: g5, g26, g34, g35 (12)
g5 : new o6c4c: or: 10; t1+t3: 27; s0: 14; s1: 31; s2: 1; hist: 24; s': 5 1 5  1 6 2 1 10 0; PAR: 0 (0);
g26: new o6c4c: or: 07; t1+t3: 19; s0: 15; s1: 29; s2: 2; hist: 17; s': 7 5 14 2 6 3 2 14 3; PAR: 0 (0);
g26: new o6c4c: or: 07; t1+t3: 19; s0: 15; s1: 32; s2: 1; hist: 17; s': 4 2 8 2 6 3 2 8 3; PAR: 0 (0);
g29: new o6c4c: or: 07; t1+t3: 19; s0: 15; s1: 29; s2: 2; hist: 17; s': 6 4 12 2 4 1 2 13 3; PAR: 0 (0);
g34: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 29; s2: 1; hist: 18; s': 6 1 12 1 6 3 2 13 0; PAR: 0 (0);
g34: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 31; s2: 1; hist: 18; s': 4 1 8 1 6 4 2 9 0; PAR: 0 (0);
g34: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 31; s2: 1; hist: 18; s': 4 1 8 1 6 4 2 9 0; PAR: 0 (0);
g34: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 29; s2: 1; hist: 18; s': 6 1 12 1 6 3 2 13 0; PAR: 0 (0);
g35: new o6c4c: or: 06; t1+t3: 16; s0: 15; s1: 30; s2: 1; hist: 14; s': 5 4 12 2 4 2 2 11 4; PAR: 0 (0);
g35: new o6c4c: or: 06; t1+t3: 16; s0: 15; s1: 30; s2: 1; hist: 14; s': 5 4 12 2 4 2 2 11 4; PAR: 0 (0);
g35: new o6c4c: or: 06; t1+t3: 16; s0: 15; s1: 29; s2: 2; hist: 14; s': 5 4 14 2 4 1 1 12 4; PAR: 0 (0);
g35: new o6c4c: or: 06; t1+t3: 16; s0: 15; s1: 29; s2: 2; hist: 14; s': 6 4 14 2 4 1 1 13 4; PAR: 0 (0);

		а как выглядят другие o6c4c, где parity == 1, но нету подходящего o5cdc:
		22.05:
g3: new o6c4c: or: 09; t1+t3: 25; s0: 14; s1: 25; s2: 2; hist: 23; s': 5 4 16 2 8 4 2 13 0; PAR: 1 (1);
g3: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 26; s2: 1; hist: 18; s': 5 3 12 2 8 2 1 12 0; PAR: 1 (1);
g3: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 26; s2: 1; hist: 18; s': 5 3 12 2 8 2 1 12 0; PAR: 1 (1);
g3: new o6c4c: or: 09; t1+t3: 25; s0: 14; s1: 25; s2: 2; hist: 23; s': 5 4 16 2 8 4 2 13 0; PAR: 1 (1);
g3: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 26; s2: 1; hist: 18; s': 5 3 12 2 8 2 1 12 0; PAR: 1 (1);
g3: new o6c4c: or: 09; t1+t3: 25; s0: 14; s1: 25; s2: 2; hist: 23; s': 5 4 16 2 8 4 2 13 0; PAR: 1 (1);
g3: new o6c4c: or: 09; t1+t3: 25; s0: 14; s1: 25; s2: 2; hist: 23; s': 5 4 16 2 8 4 2 13 0; PAR: 1 (1);
g3: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 26; s2: 1; hist: 18; s': 5 3 12 2 8 2 1 12 0; PAR: 1 (1);
g3: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 26; s2: 1; hist: 18; s': 5 3 12 2 8 2 1 12 0; PAR: 1 (1);
g3: new o6c4c: or: 09; t1+t3: 25; s0: 14; s1: 25; s2: 2; hist: 23; s': 5 4 16 2 8 4 2 13 0; PAR: 1 (1);
g3: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 26; s2: 1; hist: 18; s': 5 3 12 2 8 2 1 12 0; PAR: 1 (1);
g3: new o6c4c: or: 09; t1+t3: 25; s0: 14; s1: 25; s2: 2; hist: 23; s': 5 4 16 2 8 4 2 13 0; PAR: 1 (1);
g13: new o6c4c: or: 10; t1+t3: 26; s0: 14; s1: 27; s2: 2; hist: 22; s': 4 2 12 2 4 2 1 10 0; PAR: 1 (1);
g13: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 29; s2: 2; hist: 18; s': 3 1 8 2 6 4 1 7 0; PAR: 1 (1);
g13: new o6c4c: or: 10; t1+t3: 26; s0: 14; s1: 26; s2: 1; hist: 22; s': 5 2 14 2 4 2 1 12 0; PAR: 1 (1);
g13: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 29; s2: 2; hist: 18; s': 3 1 8 2 6 4 1 7 0; PAR: 1 (1);
g13: new o6c4c: or: 10; t1+t3: 26; s0: 14; s1: 27; s2: 2; hist: 22; s': 4 2 10 2 4 0 1 10 0; PAR: 1 (1);
g13: new o6c4c: or: 10; t1+t3: 26; s0: 14; s1: 26; s2: 3; hist: 22; s': 5 2 12 0 0 0 3 12 0; PAR: 1 (1);
g15: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 29; s2: 2; hist: 18; s': 3 1 8 2 6 5 1 7 0; PAR: 1 (1);
g15: new o6c4c: or: 10; t1+t3: 27; s0: 14; s1: 28; s2: 3; hist: 24; s': 3 2 8 0 4 2 1 8 0; PAR: 1 (1);
g15: new o6c4c: or: 10; t1+t3: 27; s0: 14; s1: 28; s2: 3; hist: 24; s': 3 2 8 0 0 0 1 8 0; PAR: 1 (1);
g15: new o6c4c: or: 10; t1+t3: 27; s0: 14; s1: 28; s2: 1; hist: 24; s': 3 2 10 2 4 2 1 8 0; PAR: 1 (1);
g15: new o6c4c: or: 10; t1+t3: 27; s0: 14; s1: 28; s2: 1; hist: 24; s': 3 2 10 2 8 4 1 8 0; PAR: 1 (1);
g15: new o6c4c: or: 08; t1+t3: 21; s0: 14; s1: 29; s2: 2; hist: 18; s': 3 1 8 2 6 5 1 7 0; PAR: 1 (1);
			везде в них s0 = 14; везде or+t3 чётно
			or=9: s2=2; or=8: s2=1; or=10: s2=1,3
			circuits_without_oriented_vertices == 0

то есть до 22.05g25 по-крайней мере, общее тут везде:
			везде в них s0 = 14; везде or+t3 чётно;
			circuits_without_oriented_vertices == 0
на 22.05g26 ломается
	s0=15
	circuits_without_oriented_vertices != 0
но or+t3 всё ещё чётно!
но тогда ничего интересного, они всегда совпадают по чётности (легко доказать)


done:
	взять петерсенов 6c4c
	и посокращать в нём poor рёбра
	что я получу в итоге
	22.05, circuits count: 6,8,9,10,11,12,14,16,18
	а если петерсенов 6c4c - только 12
	ну тогда ок
	24.05: 6,8,9,10,11,12,13,14,16,18,20
		а если петерсенов 6c4c - только 12
	26.05: 6-18,20,22,24
		а если петерсенов 6c4c - только 12

nah:
	я ошибся тут
	чётность числа oriented вершин зависит не только от профиля
	оно кажется не зависит от o6c4c
	но зависит от 6c4c

	найти формулу для чётности числа oriented вершин
	в зависимости от профиля решения
	по-крайней мере во всех случаях, где нет poor рёбер (до 26.04)
		число oriented вершин нечётно
		(при этом число рёбер в графе тоже нечётно)
	в остальных случаях сложнее:
		например
		на 26.05 есть 2 кейса, где 1 poor ребро, 38 rich рёбер
		в одном случае 6 oriented, в другом 7
		но это в целом по всем 26.05
		а вот на 26.04 есть такое же в пределах одного графа
		g1026: another 6c4c: profile: rrrrrrrrrrrrrrrrrrrrrrrrrrrrprrrrrrrrrr; s1= 38; comps: 1 1; or: 7;
		g1026: another 6c4c: profile: rrrrrrrrrrrrrrrprrrrrrrrrrrrrrrrrrrrrrr; s1= 38; comps: 1 1; or: 8;

	нужно более тонкие инварианты считать
		например, мб, сколько цепей проходит через это единственное poor ребро (нет, не прокатывает)

	изучаю кейсы с одним poor ребром, хочу понять - есть ли зависимость от всего графа в целом
	тут дальше:
		26.04
		28.05


todo:
	что это за графы, не-снарки, где все рёбра rich?
		мб есть гомоморфизмы в эти графы, сохраняющие циклы?
		а может и нет, с чего вдруг?
		вообще кажется, что если есть хоть одна цепь с нечётным числом poor рёбер,
		то уже гомоморфизма не будет

	чё-т до меня только сейчас дошло, что
	вот даже если есть неснарк, и если я беру его 3cdc решение
	и удваиваю его, то все рёбра будут слабые
		(а oriented вершины - либо весь граф, либо пусто
		о, интересный вопрос возник
		done: бывают ли не снарки, где
		нет гамильтонового цикла, но при этом есть dominating цепь?
		да, бывают
		https://en.wikipedia.org/wiki/Hypohamiltonian_graph
		есть и planar hypohamiltonian graphs
		ну вот тогда интересно, что в графе нет dominating circuits через все oriented вершины)
	ну то есть этот вопрос даже интересный сам по себе

todo (only rich edges):
	что это за снарки, где все рёбра rich? который не граф петерсена
	22.05, 26.05, мб в 30.05 такие тоже есть
	6c4c:
		10.05: g1
			or: 3
		(14.05, 18.05)
		22.05 (22.04): g1
			or: 3 или 7
		26.05: g172, g173, g226, g243, g253-g255, g257, g280
			26.04: g1139, g1180, g1232-g1234, g1236, g1297, g327, g815, g816
				or: 7 или 9
		30.05: g307, > g456
			or: 10

	o6c4c:
		10.05, 22.05, 26.05: везде нечётное число oriented вершин
		на 30.05 сломал

todo:
	поискать в 30.05, "s1= 45"

almost done:
	беру 6c4c решение
	выбрасываю poor ребро (или сразу связными компонентами надо выкидывать на самом деле)
	склеиваю как-то пары рёбер
	и слежу за инвариантом
		s0: хитро, не знаю, как-то связано с антихордами должно быть
			во, интересно, возможно s0 неправильно определён
		s1: вроде бы не меняет чётность, уменьшается на чётное число;
			хотя надо ж ещё сохранить rich'овость
		s2: тоже не изменяет чётности, прям по каждому слою
			и см. ремарку в s1
		ещё вопрос - как меняются oriented vertices?
		и сохранится ли dominating circuit? (вряд ли, но я поначалу думал, что сохранится)
	todo: взять пример на 18 вершинах, где чётность неправильна, и посмотреть, что происходит
		как именно склеивать - подскажет само poor ребро, там без вариантов
			я подозреваю, что:
				- я получу граф на 12 вершинах
				- где все рёбра будут rich (лол как)
				- oriented vertices вообще не меняются (хотя вообще-то они исчезнуть могут, не?)
					а я точно ориентацию вообще смогу сохранить?
					а не факт, вроде
					ну тогда не знаю что с ними происходит
				- dominating circuit переходит в dominating circuit (уже не подозреваю)
			вообще звучит странно, скорее всего будет так:
				- в какой-то момент появится ещё poor ребро
				- и тогда уже я смогу стянуть к графу Петерсена, например
		если удалить ребро 6-8:
			появится новое poor ребро 1-15
			так-то
	так, что я понял:
		s2 меняет чётность достаточно непредсказуемо

	в общем кажется, что:
		- dominating circuit сохраняется (уже так не думаю)
		- oriented вершины все находятся на dominating circuit (а вот это интересный вопрос)
	другое дело, что - эта операция мне ещё интереснее будет,
		если я такое в обратную сторону смогу проделать
	например, стартуя с графа Петерсена
		я б тогда сразу 2 гипотезы доказал бы просто
	я забью

	done:
		если мы будем сокращать poor рёбра в разных порядках
			в конечном итоге мы будем получать разные 6c4c решения
			или одно и то же?
		разные

	вопрос:
		если мы стартуем с графа с 0 oriented vertices - что происходит при сокращении
			poor ребра, не ломающего ориентацию?

	у меня было деление на 2 разных вида poor рёбер в o6c4c решениях
		кажется это очень полезное понятие, и всё-таки стоит посчитать это число
	я посчитал

done:
	если total_poor_comps == 1, (до 26.05)
    то parity == 1
    todo: выписать какие здесь вариации or, t1+t3
    s0 чётный
    на 28.05 всё сломалось
    todo: интересно - как
    вроде g611
    скорее всего total_rich_comps тоже надо будет попросить быть == 1

done:
	o6c4c
	если цепь вся poor - правда ли, что
	она встретится 2 раза в разных направлениях?
	(если да, то я не знаю как это доказывать)
	20.05, 22.05, 24.05, 26.05: да
	28.05: о, есть цепь в одной и той же ориентации

done:
	если несколько poor цепей
	есть ли рёбра, которые попадают в 2 таких цепи?
	да, есть, уже в 22.05g3 есть такое

done:
	6c4c
	если цепь вся poor - правда ли, что
	она встретится 2 раза?
	да, тут очевидно может быть только повторяемость в 2 раза
		если цепь повторилась 2 раза - то возьмём любое ребро в ней
		третий и четвёртый раз это ребро должно в другой комбинации встретиться

	до 26.05 - больше 3 таких цепей не бывает
	на 28.05 бывает 4 цепи

	правда ли, что все цепи, которые встречаются 2 раза и больше - полностью poor?
	ну да, это очевидно
	если цепь встречается 2 раза - то у каждого ребра соседи повторятся в той же комбинации
	то есть они все poor

	так же понятно, что
		не бывает цепей, где только 1 rich ребро

probably todo:
	у меня из-за повторяющихся циклов - неправильная оценка числа решений o6c4c
		они у меня дублируются
	и 6c4c дублируются

todo:
	как далеко или близко
		друг от друга могут располагаться oriented vertices?
	(например если их 2 или 3 всего)


big list:
	выписать все гипотезы про o6c4c сюда

-> всё ещё нет формулы для всех снарков

   [но если odd_poor_full_cycles == 0 и s0 чётно
		то s0+s1+s2 == 1
		проверил на 24.05, 26.05, 28.05
		эта штука включает в себя petersen colouring и существование 2 cdc
		но вообще это перефразирование того, что
		(s1+s2+odd_poor_full_cycles) % 2 == 0
		единственно, что тут интересно,
		что кейсов с нечётным s0 непропорционально мало тут
		что-то порядка одной тысячной
			и то же, если odd_poor_full_cycles == 2
	]

->  24.04, 26.05
 	если
 	nzmod5: 1; nzmod6: 0
 	то 
 		s0 - чётно
 		or >= 3


-> (чётность числа паросочетаний с чётным числом oriented-unoriented рёбер) / 2
		even_ou
	или 0, или 3 (24.04, 26.05)
		наверно это тоже очевидно, и надо аккуратно расписать
		(типа для or=0,1 очевидно)
	(or + even_ou) % 2 == 1 (22.04, 26.05)
		наверно это очевидно, но надо аккуратно расписать
		(типа для or=0,1 очевидно)

		считаю сколько oo, сколько ou, сколько uu рёбер
	    если число чётно - увеличиваю соответствующий счётчики
	    (то есть числа от 0 до 6)

	    #or = 1/3 (2#oo + #ou)

	    or == 0:
	    	even_ou_matchings = 3
	    	всё ок

	    если бы or == 1, то
	    в каждом паросочетании ровно одно ou ребро
	    то есть even_ou_matchings = 0

	    мне кажется по индукции эти 2 todo легко доказать
	    типа добрасываем ещё одну or вершину
	    тогда меняется чётность во всех 6 паросочетаниях
	    да, легко
	

	todo: (oo+uu) % 2 == 1
		это следует из чего?
		и надо эту штуку перепроверить
		что я хотел этим сказать? у меня ничего в коде не находится


!	чётность числа ориентированных вершин не зависит от ориентации решения
		а только от самого решения 6c4c
	(кажется я умею это доказывать
	через переход от одного o6c4c решения к другому)
		проверил до 28.05

		но точно не хватит зависимости только от профиля
		28.05g2869
		prof: prprrrrrrrrprrrrrrprrrrrrrrprrrrrrrrrrrrrr

		todo: а что на .04 графах? может есть меньше контрпример?

	чётность t3 совпадает с or (легко доказать)
		=> t4 тоже сохраняет чётность (t3+t4 == число rich рёбер)
	t1 и t2 не сохраняют чётность
	

->	odd_poor_comps_full_cycles == 0, 2, 4, 6 (до 26.04+28.05):
		типа берём все poor рёбра, разбиваем на компоненты связности,
		и теперь считаем число full cycles с нечётным числом poor компонент на нём
		(то есть poor рёбра из одной компоненты связности учитываем за 1)

		6c4c:
		done: 18.05, 20.05, 22.05 - всё ок


!	rich_unoriented_vertices_frequency[0] + rich_unoriented_vertices_frequency[2]) % 2 == 0
	(26.04+28.05 вроде)
	(хотя я тут много не думал
	вроде если убрать unoriented, то эта штука становится очевидной)
	а, это походу тоже очевидно
	если ребро соединяет две oriented вершины, то оно poor и в этих суммах не участвует
	
	иначе мы фактически вычитаем все oriented вершины, то есть кажется, что
	имеем инвариант
	or + ruv[0] + ruv[1] + ruv[2] + ruv[3] == graph.number_of_vertices
		не, ну это очевидно, (ruv[0] + ruv[1] + ruv[2] + ruv[3]) == число неориентированных вершин

	сначала перепишем как
	rich_oriented_vertices_frequency[0] + rich_oriented_vertices_frequency[2]) % 2 == 0
	да, это несложно, легко, очевидно
	надо рассмотреть 2 раза рёбра o--p--o
	o - oriented, p - poor
	и снимем пары рёбер из rich_oriented_vertices_frequency[1]
	ну и вот
	всё ещё чётно

->	меньше 15 rich рёбер не бывает,
		15 только у графа Петерсена,
		а также не бывает 16 rich рёбер:
			для o6c4c проверил до 28.05
			для  6c4c проверил до 26.04

->	если s1 = 17, то
		в o6c4c, parity = 1, проверил до 28.05+26.04
			до 28.05:
				s0 чётно
				s2 = 0, 2
				or = 3, t1+t3 = 9
				or = 5, t1+t3 = 13
				or = 13, t1+t3 = 25
			до 26.04 ещё есть варианты:
				or = 7, t1+t3 = 16
				or = 9, t1+t3 = 19
				or = 11, t1+t3 = 22
		(в  6с4c есть примеры, где parity=0)

->	если s1 = 18, то
		в 6c4c, parity = 1, проверил до 28.05+26.04
			до 28.05:
				s0 чётно
				s2 = 1, 3
				or = 3, t1+t3 = 9
				or = 5, t1+t3 = 14
				or = 13, t1+t3 = 25
			до 26.04 ещё есть варианты:
				or = 4, t1+t3 = 12
				or = 5, t1+t3 = 13
				or = 7, t1+t3 = 16, 17
				or = 9, t1+t3 = 19, 20
				or = 11, t1+t3 = 22, 23

	если t1+t3 <= 8 (до 28.05+26.04):
->		parity == 1

		s2 не бывает 0
			сломалось на 30.05 на t1+t3==6

->		s2 не бывает 0 при t1+t3<=8, != 6 тогда

		0 - это 0 oriented вершин
->			s2 == 3
		1, 2 и 4 - физически невозможно
->		3 - 1 oriented вершина; нет примеров
		5 - 2 cоседние oriented вершины
		6 - 2 несоседние oriented вершины
->		7 - 3 oriented вершины по пути; нет примеров
		8:
->			если or = 3, то нет примеров
			если or = 4, то есть примеры в 26.04 и в 28.04

->	если s2 = 0, то (до 28.05+26.04):
		для t1+t3 == 9, 10, 11, 13: parity == 1
		 9, or = 3 (сюда входит граф Петерсена)
		 9, 10, 11, or = 4
		13, or = 5
		14, or = 6
		16, 17, or = 7
		17, 18, or = 8
		19, 20, 21, or = 9
		or = 10 - пусто
		22, 23, 24, 25, or = 11
		or = 12 - пусто

->	если s2 = 6, то (до 28.05+26.04):
		 9, or = 3
		10, 11, or = 4
		13, or = 5
		12, 13, 14, or = 6 (точно не 15)
		16, or = 7
		or = 8, or = 9 - пусто
		22, or = 10
		or = 11 - пусто
		24, 25, 26, 27, 28, or = 12


->	если 6c4c - получается из Petersen colouring, то (до 24.04+26.05):
		parity == 1
		s0 == 0 (mod 2)
		or == s1 (mod 2)
		odd_poor_full_cycles == 0
			(число слоёв full cycles,
			где нечётное число poor рёбер на цикле / 2
			потенциально 0, 1, 2, 3)
			это я понял почему
			тут даже более сильная штука:
				на каждой цепи чётное число poor рёбер
			а длина со знаком (rich даёт +-1, poor даёт смену знака) делится на 5
		(соответственно s2 = 0 или 3)
		TODO: перепроверить на 6c4c
->	на самом деле как выясняется,
	ровно все эти же выводы обобщаются на кейсы, когда
	6c4c решение разлагаемо в 2 cdc решения
	(только parity ломается)
	has 2cdcs
	odd_poor_full_cycles == 0
	(соответственно s2 = 0 или 3)
	проверил до 28.05 (ориентированные кейсы),
		до 26.05 (неориентированные кейсы)
	ТУТ ЭТО САМОЕ
->	на 18.05g2 есть has 2cdcs для 6c4c, а par == 0


->	про графы, у которых есть nz5 из o6c4c (не знаю до скольки проверял):
		в o6c4c есть oriented, он бывает всех видов: 112, 123, 134, 224
		в 2/3bms есть ignored, они бывают такие: 123, 134
		в 33-pp: есть вершины на цикле (вроде как это 112, 123, 224) и вершины вне цикла (123, 134)
		в nz5, которые общие для o6c4c и 2/3bms:
			- не встречается 134 вообще
			- oriented также не бывает никогда 123
				(из-за чего в итоге oriented не пересекается с ignored)
			- веса бывают только такие:
				(-1,-1,0,0,1,1)
				(-2,-1,0,0,1,2)
		(в 2/3bm каждый из партишнов связан напрямую с nz5:
			0 несёт потоки в 2 или 4
			1 несёт поток в 1
			2 несёт поток в 3
			на dominating circuit'е есть рёбра весом 1 или 2, которые тоже можно отнести к партишнам)

->	TODO:
		то же, но про nz-mod5 надо сделать
		то же, но про nz-mod6

->	для любого набора oriented вершин всегда находится dominating circuit
		проверил вроде бы до 28.05
		TODO: надо это утверждение как-то усилить на самом деле

done:
	при t1+t3 == 9 уже точно плохо всё с чётностью s0+s1+s2
		(число oriented вершин == 3 в обеих чётностях
			s2 бывает вообще говоря тут 0,
			в случаях, когда неправильная чётность - на 24.05 не было)

done:
	изучить петерсеновы 6c4c решения
	на 24.05 с ними всё ок!
		s0 везде чётный
		s2 бывает 0 и 3
		odd_poor_full_cycles везде нулевой
		or совпадает по чётности с s1
		poor_vertices чётный
		9, or = 3
		12, or = 4
		13, 14, 15, or = 5
		15, 17, or = 6
		18, 19, or = 7
		25, or = 9
	24.04: parity - ок!
		а вот тут уже poor_vertices бывает нечётный
		s0 везде чётный
		or и s1 = то же, что и в 24.05
		odd_poor_full_cycles везде нулевой
	26.05: parity - ок!
		poor_vertices бывает всякий
		s0 везде чётный
		or и s1 = то же, что и в 24.05
		odd_poor_full_cycles везде нулевой

done:
	нужно найти аналог вот этой теоремы в o6c4c
	это теорема из теории Морса для тропических кривых
	Theorem 1. Let s0, s1 and s2 be respectively the number of (topological) minima, saddle points and maxima of the distance functions d or g. We have:
	s0 − s1 + s2 = 1

	====================
	пусть
	s0 = число цепей
	s1 = число rich рёбер
	s2 = число паросочетаний с чётным числом rich рёбер / 2 (потенциально 0, 1, 2, 3)
	
	s3 = число цепей с чётным числом poor рёбер
		(s3 немного лишне)

	s0 и s3 всегда совпадают по чётности
		потому что если взять все цепи - получим 6 раз все рёбра
		если бы цепей с нечётным числом poor рёбер было нечётно
		то 6 * # poor оказалось бы нечётным числом
	в общем кажется, что надо из s0 и s3 выбрать что-то одно

	somewhat done:
	в случае, когда 0 oriented vertices - что-то вырисовывается
	вплоть до 28.05 включительно
	а именно
->	- s0, s1 (и s3) - все совпадают по чётности
		это вообще внезапно
->	- s2 всегда равно 3 (тут ниже в примерах s2 - удвоено)
	20.05:
		s0: 14; s1: 22; s2: 6
	22.05:
		s0: 12; s1: 24; s2: 6

		s0: 14; s1: 24; s2: 6
		s0: 14; s1: 26; s2: 6
		s0: 14; s1: 28; s2: 6
	24.05:
		s0: 13; s1: 25; s2: 6
		s0: 13; s1: 27; s2: 6
		s0: 13; s1: 29; s2: 6

		s0: 15; s1: 27; s2: 6
		s0: 15; s1: 29; s2: 6
		s0: 15; s1: 31; s2: 6

		s0: 16; s1: 24; s2: 6
		s0: 16; s1: 28; s2: 6
	26.05:
		s0: 13; s1: 31; s2: 6

		s0: 14; s1: 22; s2: 6
		s0: 14; s1: 24; s2: 6
		s0: 14; s1: 26; s2: 6
		s0: 14; s1: 30; s2: 6

		s0: 15; s1: 31; s2: 6
		s0: 15; s1: 33; s2: 6

		s0: 16; s1: 26; s2: 6
		s0: 16; s1: 28; s2: 6
		s0: 16; s1: 30; s2: 6
		s0: 16; s1: 32; s2: 6

		s0: 17; s1: 29; s2: 6
		s0: 17; s1: 31; s2: 6
		s0: 17; s1: 33; s2: 6
	28.05:
		s0: 12; s1: 24; s2: 6
		s0: 12; s1: 26; s2: 6
		s0: 12; s1: 28; s2: 6
		s0: 12; s1: 30; s2: 6
		s0: 12; s1: 32; s2: 6

		s0: 13; s1: 27; s2: 6
		s0: 13; s1: 29; s2: 6
		s0: 13; s1: 31; s2: 6
		s0: 13; s1: 33; s2: 6

		s0: 14; s1: 22; s2: 6
		s0: 14; s1: 24; s2: 6
		s0: 14; s1: 26; s2: 6
		s0: 14; s1: 28; s2: 6
		s0: 14; s1: 30; s2: 6
		s0: 14; s1: 32; s2: 6
		s0: 14; s1: 34; s2: 6

		s0: 15; s1: 27; s2: 6
		s0: 15; s1: 29; s2: 6
		s0: 15; s1: 31; s2: 6
		s0: 15; s1: 33; s2: 6
		s0: 15; s1: 35; s2: 6

		s0: 16; s1: 22; s2: 6
		s0: 16; s1: 24; s2: 6
		s0: 16; s1: 26; s2: 6
		s0: 16; s1: 28; s2: 6
		s0: 16; s1: 30; s2: 6
		s0: 16; s1: 32; s2: 6
		s0: 16; s1: 34; s2: 6
		s0: 16; s1: 36; s2: 6
		s0: 16; s1: 38; s2: 6

		s0: 17; s1: 27; s2: 6
		s0: 17; s1: 29; s2: 6
		s0: 17; s1: 31; s2: 6
		s0: 17; s1: 33; s2: 6
		s0: 17; s1: 35; s2: 6
		s0: 17; s1: 37; s2: 6

		s0: 18; s1: 30; s2: 6
		s0: 18; s1: 32; s2: 6
		s0: 18; s1: 34; s2: 6
		s0: 18; s1: 36; s2: 6
		

	судя по картинкам:
		s0 - minima in the centers of the Voronoi cells
			это что-то типа числа цепей или циклов
		s1 - saddle points on the interior of edges
			пускай это будет число rich рёбер
		s2 - это должно быть число oriented вершин

	ну типа, я такой, беру грани, рёбра, вершины
	и считаю s0 - s1 + s2
	в таком виде - получается всякое
	10.05g1: 0
	18.05g1: -2 .. -6
	18.05g2: -2, -6, -7, -8, -10

	18.05g1

	12 17 3
	12 20 4
	12 22 5
	12 22 7
	12 23 5
	------
	18.05g2

	12 22 2
	12 22 4
	12 22 8

	12 24 2
	12 24 6

	13 23 3
	13 24 3

	классификация рёбер вообще была такой:
t1		-1- ребро poor, обе вершины oriented
t2		-2- ребро poor, обе вершины unoriented
t3		-3- ребро rich, одна вершина oriented, одна unoriented
			(у петерсена таких 9, это дерево)
t4		-4- ребро rich, обе вершины unoriented
			(у петерсена таких 6, это цепь)
		вроде больше нет
			то есть нету случаев, когда:
				-5- ребро poor, вершины разные
				-6- ребро rich, обе вершины oriented

		кубический граф: 3*v = 2*e
		e = (1, 1, 1, 1)
		v = (2, 2, 2, 2) / 3
		oriented = (2, 0, 1, 0) / 3
		rich = (0, 0, 1, 1)
		число цепей не выражается

	а может s0 - это число цепей с каким-нибудь хитрым свойством?
		типа число poor рёбер - чётно
		вроде нет

nah:
	-3- ребро rich, одна вершина oriented, одна unoriented
		(у петерсена таких 9, это дерево)
	можно ли в других снарках так получить HIST из o6c4c?
	забью
	на 20 вершинах только в g4 только в 2 решениях t3 == 19

done:
	посчитать эйлерову характеристику всяких разных 6c4c решений
		типа
		\chi = 2*v - 2*e + f
	для петерсена: 20-30+12=2
	10.05: 2
	(12    0)
	(14   -2)
	(16   -4)
	18.05: -5, -6
	20.05: -4..-8 включительно
	22.05: -4..-10 включительно
		22.04: то же
	24.05: -4, -6..-12 включительно
		24.04: -4..-12 включительно
	26.05: -4..-14 включительно
	28.05: -4..-16 включительно

done:
	есть ли снарки,
	у которых в (o)6c4c в разных слоях есть
	совпадающие цепи?
	есть (24.04g133; хотя цепи направлены в разные стороны, может это важно)
	первые примеры - в 20.05g3

	есть ли снарки,
	у которых в o6c4c в разных слоях есть
	совпадающие цепи, направленные в одну и ту же сторону?
	есть на 22.04g14
	layer: 3; vertices: 11 1 20 21 11
	layer: 4; vertices: 11 1 20 21 11
	если же в графе нету циклов длины 4 - то до 26.05 нету примеров графов
	на 28.05g19 есть такое:
	layer: 3; vertices: 14 4 5 17 16 26 14
	layer: 4; vertices: 14 4 5 17 16 26 14

done:
	программа говорит,
	что есть 6c4c
	у которого есть 2 разных o6c4c
	у которых совпадают oriented verticees
	это как вообще? там типа разная ориентация в вершинах?
	есть ли 2 разных решения o6c4c для одного и того же 6c4c,
		где и там и там пустые oriented vertices?
		есть: 26.04: g258, g259 и другие
	как минимум бывают ситуации, где есть совпадающие цепи
	которые можно в противоположные стороны направлять

nope:
	хм
	а ведь 6c4c или o6c4c для графа Петерсена - это же типа додекаэдр?
	12 граней длины 5
	что тогда означают oriented vertices на нём?
	не, не работает такая склейка, нет её

nah:
	мб есть связь между elliptic curves
	и bridgeless cubic graphs?
	не, вряд ли
	скорее abelian varieties тогда
	и то надо это ещё всё изучить, чтоб была интуиция
	скорее так
todo:
	должна быть какая-то связь
	между cubic graphs (не всеми, наверно; и скорее всего уже вложенными)
	и congruence subgroups
	и между modular forms

done:
	как устроено отображение G---F2-->P10, когда у G меньше 10 вершин?
	вроде дошло
	если у графа есть nz4 (или раскраска рёбер в 3 цвета)
	то просто отправим все вершины в одну
	а цвета - в свои цвета
	и всё ок тогда - тогда у нас в прообразе всего 3 различных цикла будет

nah:
	странно, я никогда не замечал
	но в petersen colouring нечётное число rich рёбер
	почему?
	а вот и неправда, не всегда
	контрпример: 24.05g8
	(а вообще я ещё тут подумал, вроде ж ещё полностью rich графы потом будут эту штуку ломать)
->	какие есть ещё контрпримеры? много ли их?

done:
	есть гипотеза, что через любой набор oriented вершин
	проходит dominating circuit
	это значит, что вершина и 3 её соседа никогда не бывают все вместе ориентированы
	нет, не значит	
	просто надо пройти через эту вершину, а через оставшегося соседа пройти через его 2 соседа, которые у него есть

done:
	посмотреть на oriented вершины, где дофига вершин
	типа около половины и больше
	скажем, много ли вообще цепей проходит через них
	ну хватает
	на 20 вершинах - от 40 до 60
	на 22 - 104 цепи
	вообще их много, для любого набора oriented вершин
	подозреваю там какая-то комбинаторика сидит

а вообще кажется, что oriented вершина - это что-то типа критической точки
	которых или нет, или больше 1
и типа мб можно посчитать какой-нибудь индекс из этого

done:
	бывает ли меньше 3 oriented вершин?
	бывает (2 и 0 бывает, 1 не видел ни разу)

todo:
	правда ли, что
	если взять прообраз Petersen 6c4c,
	то я получу 6c4c, который раскладывается на 2 решения 6cdc?
	вроде да
	вопрос такой
	todo: есть ли в графе другие 6c4c с таким свойством? (наверняка)
	и ещё todo: как насчёт o6c4c? что из него можно вытащить?
		можно ли вытащить o6cdc? (вряд ли)
		можно ли вытащить 6cdc, где у всех рёбер ориентация правильная,
		кроме одного цикла, который есть в решении, на котором
		все рёбра неправильны?

nah:
	что ещё хочу поизучать про o6c4c
	правда ли, что зная 6c4c и набор oriented вершин - я могу восстановить
		ориентацию на всех рёбрах? неправда
	ой не, вопрос даже скорее такой
		необязательно даже все oriented вершины знать
		хм
		но почему-то 1 никогда не получится
		непонятно

	сколько разных наборов oriented vertices может соответствовать одному 6c4c решению?
		и что эти наборы образуют? (мб группу, например?)

done:
	из 0 oriented vertices не следует nz-mod5

	где бывает 2 oriented вершины
	18.05: g2
	20.05: g4-g5
	22.05: g1, g6-g8, g11, g14, g16-g17
	24.05: g2-g3, g5, g8, g10, g13-g14, g16, g21, g24, g28, g30-g31, g33, g35-g36

	где бывает 0 oriented вершин
	20.05: g5
	22.05: g13, g15-g16
		у g16 есть 2 o6c4c, где только пустое множество oriented вершин прокатывает
	24.05: g14, g24-g26, g29, g33
	26.05: g13, g30, g38-g39, g43, g79, g82, g131, g149-g151, g154-g155, g157,
	g162, g164, g169, g204, g211, g277
	28.05: g13, g23, g53-g54, g81, g86, g116, g118, g124-g126, g133-g134, g136-g138, g145, g147, g158, g171, g175, g185-g186, g189, g191, g206, g210, g223, g225, g233, g238-g239, g265-g266, g281, g285, g344, g351, g382, g388, g400-g401, g404, g437, g442-g443, g450, g453, g459, g465, g488, g494-g495, g502, g523-g526, g536, g539-g540, g591, g601, g623, g635, g639-g640, g650, g661, g680, g692, g697, g734, g738, g748, g755-g756, g760, g812, g843, g857, g871, g879, g922, g972, g989, g1007-g1008, g1016, g1032, g1044, g1052, g1058, g1064, g1068, g1092, g1103, g1160, g1164, g1181, g1187, g1194, g1198, g1205, g1236, g1271-g1272, g1317, g1349, g1351-g1353, g1379, g1383-g1384, g1418, g1426, g1439, g1472, g1489, g1501, g1507, g1541-g1542, g1618, g1668, g1683, g1685, g1691, g1711-g1712, g1718, g1720-g1722, g1729, g1780, g1787, g1798, g1803, g1810, g1820, g1829, g1833, g1843, g1846, g1860, g1869, g1871-g1872, g1874, g1876-g1877, g1879, g1916, g1918, g1948-g1949, g1956-g1957, g1968, g1973, g1980, g1987, g1989, g2002-g2003, g2037-g2038, g2042-g2043, g2045, g2051, g2117, g2121, g2137, g2140, g2146, g2148, g2150, g2168, g2171, g2210-g2211, g2216, g2221, g2233, g2248, g2250-g2251, g2268, g2271, g2279, g2281, g2283, g2289, g2299-g2300, g2303, g2305, g2313, g2323, g2331, g2336, g2351, g2360-g2361, g2371-g2372, g2391, g2394, g2398, g2414, g2470, g2516, g2533, g2569-g2573, g2576-g2577, g2582, g2584, g2635, g2664-g2665, g2670-g2671, g2705, g2711-g2714, g2724, g2736, g2743, g2770, g2774, g2782, g2788, g2799, g2811-g2812, g2821, g2839-g2840
		(197+40+7+3+1 = 248 графов - примерно 8.5% графов)
	30.05: 3152 графа (примерно 11% графов)


->	maybe todo
	выглядит, как подмножество вот этой странной штуки,
		которую я когда-то изучал
		зачем я это изучал, интересно
		(хоть это и романтично)
		частично я вижу мотивацию - хочется собрать из o6c4c или 6с4с
		какую-то геометрическую конструкцию
		для этого мне надо склеивать циклы как-то
			точнее даже цепи
		а дальше? ...

		как я это вообще кодил?
	хотел попробовать ещё одну идею для (o)6c4c
	возьмём граф петерсена
	возьмём его вложение в RP2 (проективную плоскость)
	где он двойственный графу K6
	в этом вложении у него все грани - это циклы длины 5
	хочется чего-то такого же от других решений в других снарках
	чтоб берём цикл из слоя - и его рёбра можно накрыть ровно 1 раз другими циклами
	и так для каждого цикла
	где же такое нашлось:
	10.05: g1
	18.05: нет
	20.05: g1, g4, g5, g6
	22.05: g3, g4, g7, g9-g18, g20
	24.05: g2, g4, g5, g7-g14, g16-g20, g22, g24-g26, g28-g36, g38
	? здесь o6c4c, или 6c4c? и где лежит этот код?
	надо обязательно посчитать 26.05


	ещё одна классификация
	o6c4c
	10.05: g1
	18.05: ничего
	20.05: g1, g4, g5
	22.05: g3-g4, g7, g9-g18, g20
	24.05: g2, g5, g8-g10, g13-g14, g16, g18-g20, g22, g24-g26, g28-g36, g38
	26.05: g5, g17, g20, g24, g27, g30, g32-g34, g36-g39, g45-g48, g50-g51,
		g53-g57, g59-g62, g66-g67, g74-g78, g82-g83, g86-g88, g90, g93-g94,
		g96-g99, g108, g111, g120, g122-g123, g125, g127-g129, g132, g136,
		g138-g141, g143, g146, g148-g166, g168-g171, g174, g176-g178,
		g180-g181, g183-g192, g198-g205, g212, g239-g240, g242, g244-g248,
		g250, g255, g277, g280
	что это?
	вроде бы это что-то типа
		графы, где у petersen colouring совпадают наборы poor и rich рёбер
		да, это оно
		я нашёл код этой штуки - o6c4c_and_petersen_colouring

	то есть я нашёл 3 разных конструкции вокруг o6c4c,
	до 24.05 - одна вкладывается в другую
	{0 oriented vertices} < {rich o6c4c == rich petersen} < {? RP2, wat == has_2cdcs}

	o6c4c, without has_2cdcs:
	- 18.05: g1, g2
	- 20.05: g2, g3
	- 22.05: g1, g2, g5, g6, g8, g19
	- 24.05: g1, g3, g6, g15, g21, g23, g27, g37
	
	на 26 вершинах сломалось
	26.05: g13 - has or0, no_2cdcs

	TODO: {rich o6c4c == rich petersen} < {? RP2, wat == has_2cdcs}
		works for 26.05 also
		

todo:
	WARNING
		надо перепроверить код про 5cdc и 33p,
		вполне возможно, что там баги, и все выводы
		здесь неверные

	посмотреть ещё по приколу
	petersen 5cdc
	бывает ли, что одно и то же 5cdc
	приходит из нескольких раскрасок?
	да, бывает (причём сразу несколько 5cdc; TODO: интересно почему;
		вот почему
		я не проверил, но гипотеза
		что они просто одно и то же выдают
		то есть ещё
		берём 2 разные раскраски петерсена, у которых совпадает профиль
			(и видимо ещё что-то, что я ещё не знаю)
			и у них полностью совпадут наборы 5cdc)
		А ВОТ И НЕТ
		я так понял наоборот
		совпадения бывают между разными профилями
		но в каждой паре - эти пары профилей
		они одни и те же наборы образуют
		не, неправда
		к числу rich рёбер тоже не получается привязать
		зато!
->		есть консистентное наблюдение
		что можно разбить расраски на 2 лагеря
		что в этих парах (и четвёрках?) раскраски всегда из разных лагерей
		поди ещё и размеры лагерей совпадут
			вроде нет
				pet_5cdc_to_col_idx size: 2: 2 4
				pet_5cdc_to_col_idx size: 2: 2 4
				pet_5cdc_to_col_idx size: 2: 2 5
				pet_5cdc_to_col_idx size: 2: 2 5
				pet_5cdc_to_col_idx size: 2: 1 4
				pet_5cdc_to_col_idx size: 2: 1 4
				pet_5cdc_to_col_idx size: 2: 1 5
				pet_5cdc_to_col_idx size: 2: 1 5
				pet_5cdc_to_col_idx size: 2: 1 4
				pet_5cdc_to_col_idx size: 2: 1 4
				pet_5cdc_to_col_idx size: 2: 2 5
				pet_5cdc_to_col_idx size: 2: 2 5
				pet_5cdc_to_col_idx size: 2: 1 5
				pet_5cdc_to_col_idx size: 2: 1 5
				pet_5cdc_to_col_idx size: 2: 2 4
				pet_5cdc_to_col_idx size: 2: 2 4
		тут что-то более хитрое
		какие-то хитрые симметрии мб? или перестановки циклов в 5cdc?
		кстати лол, глянул 6с4с, чего-то ожидал тех же строчек
			но нет! на 22.05 пусто
			прикольно! 6c4c не хочет повторяться, даже до 26.05 включительно
->			TODO: можно ли это доказать?
			я немного неумный
			у графа Петерсена единственное 6c4c решение
			с другой стороны, всё равно хочется понять, почему здесь инъекция
			кстати, если это так, то
			#petersen colouring <= #6c4c решений
			TODO: неужели по 6c4c можно восстановить petersen colouring?

->			done: или возможно тут 5cdc и 6c4c вообще ни при чём,
			а это правда для любого построимого цикла из прообраза?
			неправда, ломается на 18.05g2
			то же, если смотреть на full cycle'ы
			если смотреть на dominating circuits, то ломается на 20.05g4
		так, на самом деле
		в 5cdc тоже образ в графе Петерсена совпадает
			то есть, если зафиксировать 5cdc в G, то в него попадает максимум
			1 решение 5cdc из графа Петерсена (само это решение ещё много куда попадает,
				часто с кратностями;
				TODO: совпадают ли эти кратности? вроде нет)
->		TODO: а это можно доказать?
		а вот кстати чтоб 3 и больше раскрасок выдало одно и то же 5cdc
			пока что не вижу примеров
			проверил до 24.05 включительно
			на 26.05 нашлось по 4 раскраски:
				g84
				number of petersen colourings: 26; number of profiles: 10
				pet_5cdc_to_col_idx size: 4: 12 13 16 17
				pet_5cdc_to_col_idx size: 4: 2 3 6 7
				pet_5cdc_to_col_idx size: 4: 2 3 6 7
				pet_5cdc_to_col_idx size: 4: 2 3 6 7
				pet_5cdc_to_col_idx size: 4: 12 13 16 17
				pet_5cdc_to_col_idx size: 4: 12 13 16 17
				pet_5cdc_to_col_idx size: 4: 4 5 8 9
				pet_5cdc_to_col_idx size: 4: 10 11 14 15
				pet_5cdc_to_col_idx size: 4: 10 11 14 15
				pet_5cdc_to_col_idx size: 4: 10 11 14 15
				pet_5cdc_to_col_idx size: 4: 4 5 8 9
				pet_5cdc_to_col_idx size: 4: 4 5 8 9
				pet_5cdc_to_col_idx size: 4: 2 4 10 12
				pet_5cdc_to_col_idx size: 4: 2 4 10 12
				pet_5cdc_to_col_idx size: 4: 2 4 10 12
				pet_5cdc_to_col_idx size: 4: 7 9 15 17
				pet_5cdc_to_col_idx size: 4: 7 9 15 17
				pet_5cdc_to_col_idx size: 4: 7 9 15 17
				pet_5cdc_to_col_idx size: 4: 6 8 14 16
				pet_5cdc_to_col_idx size: 4: 6 8 14 16
				pet_5cdc_to_col_idx size: 4: 6 8 14 16
				pet_5cdc_to_col_idx size: 4: 3 5 11 13
				pet_5cdc_to_col_idx size: 4: 3 5 11 13
				pet_5cdc_to_col_idx size: 4: 3 5 11 13
				pet_5cdc_to_col_idx size: 4: 12 13 16 17
				pet_5cdc_to_col_idx size: 4: 2 4 10 12
				pet_5cdc_to_col_idx size: 4: 2 3 6 7
				pet_5cdc_to_col_idx size: 4: 7 9 15 17
				pet_5cdc_to_col_idx size: 4: 4 5 8 9
				pet_5cdc_to_col_idx size: 4: 6 8 14 16
				pet_5cdc_to_col_idx size: 4: 10 11 14 15
				pet_5cdc_to_col_idx size: 4: 3 5 11 13
				 2  3  6  7
				 5  4  9  8
				15 14 11 13
				16 17 12 10
				квадратик
				20  18
				23  19
				(2) 22
				    21

				g139
				number of petersen colourings: 44; number of profiles: 10
				pet_5cdc_to_col_idx size: 4: 10 12 29 31
				pet_5cdc_to_col_idx size: 4: 4 6 25 27
				pet_5cdc_to_col_idx size: 4: 10 11 19 20
				pet_5cdc_to_col_idx size: 4: 4 5 15 16
				pet_5cdc_to_col_idx size: 4: 31 32 38 39
				pet_5cdc_to_col_idx size: 4: 27 28 42 43
				pet_5cdc_to_col_idx size: 4: 20 22 37 39
				pet_5cdc_to_col_idx size: 4: 16 18 41 43
				pet_5cdc_to_col_idx size: 4: 15 17 40 42
				pet_5cdc_to_col_idx size: 4: 25 26 40 41
				pet_5cdc_to_col_idx size: 4: 6 7 17 18
				pet_5cdc_to_col_idx size: 4: 5 7 26 28
				pet_5cdc_to_col_idx size: 4: 11 13 30 32
				pet_5cdc_to_col_idx size: 4: 12 13 21 22
				pet_5cdc_to_col_idx size: 4: 29 30 36 37
				pet_5cdc_to_col_idx size: 4: 19 21 36 38
				pet_5cdc_to_col_idx size: 4: 10 11 19 20
				pet_5cdc_to_col_idx size: 4: 10 11 19 20
				pet_5cdc_to_col_idx size: 4: 4 5 15 16
				pet_5cdc_to_col_idx size: 4: 4 5 15 16
				pet_5cdc_to_col_idx size: 4: 10 11 19 20
				pet_5cdc_to_col_idx size: 4: 4 5 15 16
				pet_5cdc_to_col_idx size: 4: 31 32 38 39
				pet_5cdc_to_col_idx size: 4: 27 28 42 43
				pet_5cdc_to_col_idx size: 4: 31 32 38 39
				pet_5cdc_to_col_idx size: 4: 31 32 38 39
				pet_5cdc_to_col_idx size: 4: 27 28 42 43
				pet_5cdc_to_col_idx size: 4: 27 28 42 43
				pet_5cdc_to_col_idx size: 4: 25 26 40 41
				pet_5cdc_to_col_idx size: 4: 25 26 40 41
				pet_5cdc_to_col_idx size: 4: 25 26 40 41
				pet_5cdc_to_col_idx size: 4: 6 7 17 18
				pet_5cdc_to_col_idx size: 4: 6 7 17 18
				pet_5cdc_to_col_idx size: 4: 6 7 17 18
				pet_5cdc_to_col_idx size: 4: 12 13 21 22
				pet_5cdc_to_col_idx size: 4: 12 13 21 22
				pet_5cdc_to_col_idx size: 4: 12 13 21 22
				pet_5cdc_to_col_idx size: 4: 29 30 36 37
				pet_5cdc_to_col_idx size: 4: 29 30 36 37
				pet_5cdc_to_col_idx size: 4: 29 30 36 37
				pet_5cdc_to_col_idx size: 4: 10 12 29 31
				pet_5cdc_to_col_idx size: 4: 10 12 29 31
				pet_5cdc_to_col_idx size: 4: 4 6 25 27
				pet_5cdc_to_col_idx size: 4: 4 6 25 27
				pet_5cdc_to_col_idx size: 4: 10 12 29 31
				pet_5cdc_to_col_idx size: 4: 4 6 25 27
				pet_5cdc_to_col_idx size: 4: 20 22 37 39
				pet_5cdc_to_col_idx size: 4: 16 18 41 43
				pet_5cdc_to_col_idx size: 4: 20 22 37 39
				pet_5cdc_to_col_idx size: 4: 20 22 37 39
				pet_5cdc_to_col_idx size: 4: 16 18 41 43
				pet_5cdc_to_col_idx size: 4: 16 18 41 43
				pet_5cdc_to_col_idx size: 4: 15 17 40 42
				pet_5cdc_to_col_idx size: 4: 15 17 40 42
				pet_5cdc_to_col_idx size: 4: 15 17 40 42
				pet_5cdc_to_col_idx size: 4: 5 7 26 28
				pet_5cdc_to_col_idx size: 4: 5 7 26 28
				pet_5cdc_to_col_idx size: 4: 5 7 26 28
				pet_5cdc_to_col_idx size: 4: 11 13 30 32
				pet_5cdc_to_col_idx size: 4: 11 13 30 32
				pet_5cdc_to_col_idx size: 4: 11 13 30 32
				pet_5cdc_to_col_idx size: 4: 19 21 36 38
				pet_5cdc_to_col_idx size: 4: 19 21 36 38
				pet_5cdc_to_col_idx size: 4: 19 21 36 38
	22.05: g2, g5, g8, g12, g17, g20
		по-моему это подножество графов, где number_of_profiles < number_of_colourings
		надо это доказать! что это обязательное условие
			забавно, что это недостаточное условие
		(profile - это я так помню, мы забываем цвет рёбер
		и просто помним про рёбра, что они poor или rich
		и 2 разных petersen colouring могут привести к одному профилю)
	24.05: g3-g5, g9-g10, g14-g17, g20-g23, g25, g28, g30-g32, g34-g35, g38

todo:
	в коде 33pp кажется бага
	WATAFAQ сработал
	правда не на petersen 5cdc,
	а на обычном 5cdc
	хотя кажется это нормально, поставил там return

допроверить:
	done:
		каждый ли petersen colouring порождает 5cdc с dominating circuit?
			до 22.05 включительно - да
			на 24.05 есть контрпримеры: 24.05g2, 24.05g34, 24.05g36
			g2
			number of petersen colourings: 15; number of profiles: 15
			dominating petersens: 14

			g34
			number of petersen colourings: 32; number of profiles: 11
			dominating petersens: 28
			pet_5cdc_to_col_idx size: 2

			g36
			number of petersen colourings: 16; number of profiles: 16
			dominating petersens: 15

		каждый ли circuit так можно получить?
			нет, уже на 18.05g1 и g2 сильно не все circuits
			dominating: 124 vs 32
			dominating: 121 vs 52

	todo:
		из каких циклов графа Петерсена получается этот circuit?

		можно ли по раскраске его как-то вычислить?
			или сказать, что это невозможно
			можно ли по профилю это сказать?

	попробовал такую штуку
	беру G --Z2--> P10
	petersen colouring
	по нему восстанавливаю все петерсеновы 5cdc
	по ним ищу подходящие 33pp
	в них я ищу те, у которых есть dominating circuit
	так
	гуд
	такие примеры находятся (почему-то число таких 33pp делится на 4 всегда,
		на 2 я ещё понимаю кажется, на 4 не очень,
		скорее всего где-то какой-то redundancy
		и я по 4 раза получаю один и тот же 33pp)
		да, так и есть, по 4 раза дублируется каждое решение
		TODO: убрать дублирования надо бы
		хотя я не понимаю, откуда они взялись вообще
		возможно это побочный эффект того как я накидываю ориентацию
		на циклы из 5cdc

	проверил до 24.05 вершин включительно - вроде ок
	
	этот circuit - часть 5cdc решения будет всегда (один целый слой)
		потому что так устроен 33pp просто

todo:
	G ---Z3--> H,
	G, H - cubic (обязательно; или subcubic)
	если Z2, то это Petersen colouring
	а вот Z3 интересно, это мы 33pp получается сохраним при переносе?
		если так,
		то мы ж отсюда и nz5 вытащим?

	действительно
	надо поискать эту аналогию
	Z2 = Petersen colouring
	Z3 = ? = мб соответствие между 333-flows у обоих графов?
		ну типа
		беру H
		беру его 3 вот этих 3-flows
		превращаю их в 3-потоки в G
		и получаю 333-flows на G
			точнее если у всех атомов есть 333-flows
			то у всех bridgeless графов они тоже будут

todo:
	есть статья Hopf algebras and Tutte polynomials
	по идее можно прям напрямую их брать
	и категорифицировать
		почему-то категорификация многочлена татта для матроидов
		проделана, но не опубликована
		интересно, почему
	а ещё есть статья про Hopf monoids and generalized permutahedra
	вот бы объедить все эти 3-4 штуки

	1. hopf monoid (не алгебра же?)
	2. generalized permutahedra
	3. Tutte polynomials
	4. Categorification
	а потом написать книгу и назвать её deletion-contraction
	а ещё есть knots и quivers, по идее
	они здесь тоже сидят
	(и feynman motives, что бы это ни значило)

	насколько это вообще реально

	то есть ещё раз
	0. сам объект, который изучаем
	1. что-то hopf'о-подобное для deletion-contraction
	2. возможно какая-то геометрия многогранников или комплексов
	3. аналог многочлена Татта
	4. его категорификация
	и ещё где-то рядом
	5. log-concavity коэффициентов вдоль каких-нибудь прямых (кривых) и вообще
	6. сопутствующие poincare duality, hodge-riemann и hard lefschetz
	7. мб по идее даже что-то более клёвое, чем log-concavity, и такого рода гипотезы есть

done:
	поизучать категорификацию
	flow polynomial

todo:
	есть ли категорификация для
	integral flow polynomial?
	и для tension polynomial?
	и для flow-tension polynomial?

	и как себя ведёт категорификация при flow-continuous mappings?

todo:
	посчитать категорификацию
	flow polynomial
	для различных графов
	мб попробовать другие graded алгебры,
	а не только Z[x]/x^2

nope:
	про связь с узлами
	есть статья jaeger, из которой следует, что
	с точностью до множителей
	flow polynomial(4) ~= tutte(0, 1 - 4) = tutte(0, -3)
	homfly(x, y, z) ~= tutte(-x/y, 1 - (xy+y^2)/z^2)
	=>
	x=0, 1-y^2/z^2=-3
	y^2/z^2=4
	y/z = ±2
	вроде у узлов y = -x^-1

todo:
	потоки
	это аналоги harmonic 1-forms
	надо поизучать эту аналогию

todo:
	поизучать совпадения числа nz-mod5 решений
		например, ещё вывести - сколько решений с заданными число пар чисел 1 и 4
		сгруппировать решения
	и посчитать nz-mod6 решения

	может есть какой-то способ 2 графа одно размера
	сопоставлять иногда друг с другом?

	почему-то число nz-mod5 потоков делится на 240 всегда
		а не!
		20.05g1 - на 120 только делится
		прикольно
		но это вообще довольно смешной граф сам по себе
	а по факту я намекаю, что можно nz-mod5 на любом снарке свести как-нибудь к
		nz-mod5 на графе Петерсена
		вот только как
	а вообще пример снарка 20.05g1 показывает, что всё чуточку сложнее будет,
		если есть соответствие
	в nz-mod6 дроби чаще вылезают, бывают 1/4, 3/8, 5/8

todo:
	nz6 или nz-mod6 получается из геометрических построений
	а также из 34pp
	хочется понять
	можно ли по nz6 или nz-mod6 восстановить какую-нибудь из этих структур явно?
		34pp восстанавливается, да

todo:
	выписать сюда ещё раз результат
	про
	есть 2bms
	есть 5cdc, которые я могу из него построить
	а есть 5cdc, которые я могу построить из petersen colouring

	глянуть - это разные 5cdc?

todo:
	существует ли 6cdc
	где все слои - циклы длины V/2?

todo:
	а ещё есть
	оказывается милая штука
	stable dominating circuit
	типа, если их как минимум 2 больших на одном и том же наборе вершин
	то можно построить cdc

	так что интересно ещё пометить по снаркам - какие из них со stable dominating circuit'ом


todo:
	построены ли dominating circuits для каких-нибудь семейств снарков?
	вроде нет

TODO:
	надо завершить проект
	про dominating circuits vs oriented vertices
	или там правильно не dominating circuits, а какой-то другой вид циклов
		пока что думаю, что правильно именно circuit

	беру все возможные o6c4c
	у них есть множество oriented вершин
	запоминаю эти множества
	
	дальше возьму класс циклов - dominating cycle
		это как dominating circuit, только не факт что связный
	у них есть вершины, которые вне цикла
	проверяю, что:
		1) ...
		2) про nz5 (или про nz-mod5?)

	так, значит

	0) если граф не снарк, то дублируя слои - получаем, что все вершины - oriented
		(а в принципе можно и наоборот - если слои дублировать с переворачиванием всех стрелок)
		но тут интересно - не факт, что есть dominating circuit, который пройдёт через все вершины
			не факт, что есть гамильтонов цикл
		но зато есть циклы через все вершины, которые совместимы с o6c4c, o5cdc==333pp и прочим
	1) у графа Петерсена - 3 oriented vertices
	2) я кажется не вижу контрпримеров, когда есть снарк, при этом
		нашёлся бы o6c4c, у которого есть oriented vertices,
		через которые не проходит dominating circuit
		(проверил до 26 вершин включительно)
	но вообще условие не кажется супер сильным, хоть и интересно

	todo:
		вопрос!
		возьмём o5cdc (или o6c4c) решение
		мы можем из них сформировать ещё циклов разных,
			если будем брать циклы с весами 0 или 1
			хотя для o6c4c это сильно под вопросом,
			скорее даже точно нет
				хотя можно из o6c4c попробовать сформировать 33pp
				хотя вряд ли 33pp можно сделать всегда
				иначе я бы и nz5 спокойно делал (3f1/2 + f2/2), где (f1, f2) - 33pp
		вопрос
			сможем ли мы сформировать dominating circuit?
			всегда ли?
			и сколько


- доказать наблюдение про oriented vs ignored (o6c4c, o5cdc, nz5 или возможно nz-mod6)
	предыстория
	я смотрел на 2bm (там цикл обязательно - это dominating circuit)
		ну или это 33pp с dominating circuit
	и все вершины, которые не попали в 2bm - назвал ignored
	и я по 2bm порождал nz5
	с другой стороны, я брал o6c4c, и по ним тоже строил nz5
		(что не всегда возможно, но когда это возможно)
		у o6c4c есть oriented (и не oriented) вершины,
		а ещё есть деление на poor и rich рёбра
	а дальше смотрел на свойства
		возможно nz5 тут ни причём? может тут и nz6 прокатит?
	а в последний раз я просто пробовал
		беру o6c4c
		и проверяю, что есть какой-нибудь dominating circuit,
		который проходит через oriented вершины
		и да, такое находится, кажется до 28 вершин включительно проверил
			до 26 точно

	какие ещё интересные наблюдения:
		oriented не пересекается с ignored (судя по всему это очень интересная гипотеза)
		есть идея, что
			ignored - это подмножество вершин, где потоки (1, 2, 3)
			oriented: (1, 1, 2) или (2, 2, 4)
		(1, 3, 4) не встречается (потому что в 2/3bms нельзя получить такую тройку)
			можно ли получить такое в, хм
			хм
			3bms - это вроде o5cdc
			2bms - это 33pp
		не, я тут подумал и понял, что не понимаю, почему нет такой тройки
		такие тройки можно сделать в 3bms
		но почему-то они не возникают при построении nz5 из o6c4c
		но вообще: из-за 2/3bms - в ignored не могут быть ни (1,1,2) ни (2,2,4)
		другое дело, что в просто o6c4c в oriented бывают все вариации
			те же (1,2,3)

	какие я видел веса:
		что интересно - везде в весах есть 2 переменные, которые совпадают
		например
		(-1, -1, 0, 0, 1, 1)
		(-2, -1, 0, 0, 1, 2)
	а других и не видел
	тоже интересное наблюдение
	ну это кстати: -c,-1,0,0,1,c

	todo: а если nz-mod6? или nz6
		какие веса?
		и есть ли снарк, где по o6c4c (6c4c?) не строится nz-mod6?

		и вообще выписать
		прям по каждому o6c4c решению
		сколько nz-mod5 и сколько nz-mod6 решений он порождает
		ну то есть, любое ли o6c4c порождает nz-mod6?

	ещё раз, что имею:
		в o6c4c есть oriented, он бывает всех видов: 112, 123, 134, 224
		в 2/3bms есть ignored, они бывают такие: 123, 134
		почему в nz5, которые общие для o6c4c и 2/3bms:
			- не встречается 134 вообще
			- oriented также не бывает никогда 123
		из-за чего в итоге oriented не пересекается с ignored

	графы, где нет nz-mod5, который можно было бы построить из o6c4c:
		18.05: g2
		24.05: g30
			(в 24.05g28 - всего одно o6c4c с nz-mod5)
		26.05: g6, g7, g29, g98, g100, g126, g134, g139, g167, g177, g181, g206, g208, g236,
			g261, g279
			(g44, g102, g104, g106, g197, g251, g260, g264, g265, g270 - 1)
		в общем их много
	а вот nz-mod6 есть всегда (до 26 вершин включительно проверил)
		при этом существуют o6c4c, по которым не строятся nz-mod6
			(ну то есть
			у каждого графа находится несколько o6c4c, где строится
			и не по всякому o6c4c можно построить nz-mod6)
		я так смотрю, часто хватает весов 0 0 0 1 2 4
		для nz-mod6

todo:
	abel-jacobi map для графов без мостов - injective
		или bijective?
	изучить это

maybe not, see below:
	мб, что
	правильный сеттинг - это
	кубические графы, в которых есть dominating circuit?
	не снарки, а вот такой подрасширенный (это гипотеза) класс графов
	мб у него полиномиальная проверка? на принадлежность ему
		Conjecture 2.7.4 Every cubic cyclically 4-edge-connected graph G has at
		least one dominating circuit D such that (G, D) has 2dBMs.
		ну или возможно нужен такой класс графов
		здесь K4 не будет вроде
		да, у этого класса графов
		полиномиальная детекция!
		классно же

	done:
		мб у такого графа всегда есть 6c4c/o6c4c,
		где все 6 слоёв - разные?
		хотя не, K4 же здесь сидит
		а у него всего 3 perfect matching'а

	а с другой стороны,
	мы в любом случае можем просто всегда стартовать с такого графа, потому что у него
	просто приятное описание

	и тогда здесь уже действительно кажется естественной постановка гипотезы
	про 2 bipartizing matchings
		хоть при этом возможно придётся переделывать circuit в другой
		потому что на исходном их может не найтись

	тогда первый важный вопрос здесь это
	todo:
		как имея граф с dominating circuit,
		как в нём найти ещё один dominating circuit?

todo:
	забью на графы с dominating circuit
	а лучше глянем на cubic cyclically 4-edge-connected graphы
	todo:
		мб у такого графа всегда есть 6c4c/o6c4c,
		где все 6 слоёв - разные?
	todo:
		мб это неправильный вопрос, но всё же
		как имея в таком графе dominating circuit,
		найти в нём ещё один dominating circuit?


в чём суть док-ва существования nz6 потоков?
там на самом деле несколько конструкций есть
	есть через spanning tree + 2-base
	есть через цикл-по-всем-вершинам (aka perfect matching) + набор циклов, у которых максимум 2 новых ребра
		я так понимаю, для любого perfect matching есть такой набор циклов?

	а ещё обычно эти доказательства сразу сильнее
	по сути они про Z6-connectivity

todo:
	почему построение nz6 не переделываемо в построение o6cdc?
	из-за перехода nz-mod6 => nz6?

done:
	дан граф без мостов
	мы перебираем все возможные signed варианты
	вопрос
	какого минимума мы может достичь?
	можем ли мы всегда достичь nz4?
		может сразу nz3 получить,
		если все рёбра взять отрицательными

maybe todo?:
	попробовать найти dominating circuit,
	что мы будем пересекать рёбра внутри,
	разбивая их на кусочки,
	и раскрашивая все сегменты в 3 цвета
	чтоб типа fox colouring
	непонятно, что это даст, но может это красиво
	и мб это какой-то инвариант для dominating circuit, например?
	просто для Петерсена - это довольно красиво
	и даже каждое ребро всего 1 раз подразбивается
		вряд ли такое возможно для больших снарков

	откуда такой вопрос у меня (сверху, про nz4):
	есть вот такая раскраска у графа петерсена:
	https://mathoverflow.net/questions/249137/coloring-snarks
	похоже на fox coloring, только тут для графов

	и есть ещё вот такое утверждение:
	(G, Σ) has a nowhere-zero Z2 × Z2-flow if and only if G is 3-edge-colourable

	кажется, что из вот этого аналога fox colouring можно было бы вытащить
	этот Z2xZ2 flow на соответствующем signed графе
	где пополамные рёбра - bidirected

	там ещё есть коммент от Ian Agol'а про the sort of vertex colorings of cubic graphs seem to relate to colorings by the non-trivial elements of the Klein 4 group

	(G, Σ) has a nowhere-zero Z3-flow if and only if it is antibalanced
	так, походу ситуация гораздо интереснее
	в смысле, что я могу всё рёбра взять отрицательными
	и тогда я получу nz3-flow

	на самом деле не похоже, чтоб это было интересным свойством, хоть и прикольно
		ну потому что пересечение рёбер довольно рандомно, кажется

somewhat done:
	а что, если заюзать комплексные числа?
	1, i, (-1, -i),
	1+i, 1-i, (-1-i, -1+i),
	2, 2i, (-2, -2i),
	1+2i, 1-2i, 2+i, 2-i, (-1-2i, -1+2i, -2-i, -2+i),
	...
	например: 1+(1+i)-(2-i)=0, 1+i-(1+i)=0
	то есть
	4 числа, потом 8, потом 12, потом 20
	N = 1: всё равно что nz2 - циклы
	N = 2: это уже интересно
		если говорить, про кубические графы - лежит ли здесь весь nz3?
		неочевидно просто
			(хочется заменить 2 на 1+i, но как заменять выборочно единицы?
			а с другой стороны, есть ещё и -i и 1-i)
		1, i, 1+i,
		1, -i, 1-i,
		K4 здесь есть :)
		может здесь вообще ровно все графы, где есть
		3-edge-colouring?
		прям c1 = 1, c2 = i, c3 = 1+i или 1-i
			если есть c1,c2,c3, то
			непонятно
			хочется взять цикл c1c2c1c2...
			и ориентировать как-то рёбра непротиворечиво
		но постой
		это же Z2xZ2?
			не, тут -i и +i - разные числа
		в общем, не понятно мне
		кажется я получаю подмножество 3-edge-coloured графов
		и вроде я ни одного снарка не могу получить
			проверил до 20 вершин ещё включительно
	N = 4:
		тут точно весь nz4

		здесь может и снарки какие-то есть?
		может тут вообще все графы есть?
		1+1=2=(1-i)+(1+i), i+i=2i=(1+i)+(-1+i)
		1+i=(1+i)
		1+(-i)=(1-i)

		здесь есть снарки, до 24 вершин включительно
		у Петерсена - 2880 решений
		18.05g1 - 149408
		18.05g2 - 161984
	N = 5:
		наверняка здесь всё?
		2+i=(2+i)
		1+2i=(1+2i)
		(1+i)+i=(1+2i)
		...

nah:
	eisenstein integers вдогонку
	a+bw
	N(a+bw) = a^2-ab+b^2
	N=1: 1, 1+w, w, -1, -1-w, -w
		уже здесь есть 1+w=(1+w)
		все ли графы с nz3 здесь есть?
		или тут похожая история на гауссовы целые?
	N=3: 2+w,1-2w,-1+w,-2-w,-1+2w,1-w
		здесь появится K4
		но снарков наверно не будет
			до 18 вершин включительно - нету
	N=4: 2, ...
		здесь наверняка появятся снарки
		да, так и есть (проверил до 24 вершин включительно)

nah:
	а ещё можно кватернионы попробовать

nah:
	так-то можно ещё всяких решёток перепробовать
	https://en.wikipedia.org/wiki/Lattice_(group)
	с разными длинами сторон
	зафигачить какой-нибудь золотой прямоугольник, например,
	хотя вряд ли там чего нового будет
	(решётку пенроуза я не предлагаю)

nah:
	в этих всех случаях (gaussian, eisenstein, quaternion, octonion, мб вообще
		произвольное кольцо целых? но вряд ли, они вроде часто бывают dense)
		рост числа решений в зависимости от максимальной нормы чисел
		это полином?
	
	проще забить, если честно

TODO:
	есть nz-k polynomial
	есть вероятность, что в nzk решении есть цикл ориентированный,
		где все числа > 1
		тогда можно выкинуть этот цикл и мы снова получим nzk решение
	давайте посчитаем отдельно - число решений где этих циклов нет,
		и где они есть
	и посмотрим - это polynomial или нет

	а ещё можно todo: ввести градуировку решений
		по сумме чисел на всех рёбрах

todo:
	взять граф Петерсена
		(а потом более общо - любой снарк)
	и глянуть на nz5
	и глянуть - что это за сумма из 4 циклов
	что это за циклы?
	например, это 5 + 5 + 8 + 9 для петерсена

nah:
	tension
	я глянул K4 - очень похоже на flow
	правда ли, что у 3-vertex-colored графов
	всегда есть nz4-tension?
	а nz3-tension для кубических графов - это то же, что
		быть двудольным?
	не, можно забить
	во-первых, эта штука нелокальна
		у нас нет вершин
	а во-вторых, есть оценка сверху на flow-tension polynomial
	оценка через tutte polynomial
	ну и вроде получаем, что tension больше, чем число красок

	tension - это аналог раскраски вершин
	только для рёбер
	это не поток

done:
	совпадает ли число для nowhere-zero k-tension с числом красок на вершинах?
	по раскраске можно получить tension?
		типа число на ребре - это разность красок
		да, можно!
	наоборот вроде тоже работает
	тогда понятно
	
TODO:
	расписать в энциклопедии
	варианты пространств решений
	например
	33pp-решения - это подпространство решений
	например кажется, что все nz-mod5 на графе Петерсена - это
		какая-то алгебраическая структура

done (somewhat):
	правда же, что любой perfect matching сидит в каком-нибудь 6c4c?
	правда же, что не любой perfect matching сидит в каком-нибудь o6c4c?

	todo:
		если не любой perfect matching в первом ответе, то
		интересно их глянуть в перспективе других вопросов и построений
		в которых есть perfect matching'и
		например:
			...

	- оказывается у графов бывают perfect matching'и или full-циклы,
	которые вообще ни в одном решении 6c4c не появляются:
		22.05g2, g5, g10, g11
		24.05g5, g9, g10, g11, g12, g14, g15, g17, g19, g20, g21, g22, g24, g26, g27, g28, g29, g31, g32, g33, g34, g35, g38
	то есть не бывает strong 6c4c гипотезы

TODO:
	o6c4c
	и dominating circuit сюда же
	- treelike snarks - док-во в Matching covers of cubic graphs, вроде бы строются явно
	- flower snarks, Goldberg snarks - ON FULKERSON CONJECTURE: строятся какие-то FR-triples; A note on Berge–Fulkerson coloring - док-во через 244-flow-covers, где он и вводится
	- cubic graphs with a circuit missing only one vertex (incl. hypohamiltonian cubic graphs), bridgeless cubic graphs with a 2-factor consisting of two circuits - Covering a cubic graph by 5 perfect matchings
	- infinite families of snarks - Berge-Fulkerson coloring for infinite families of snarks; Hagglund constructed two graphs Blowup(K4, C) and Blowup(Prism, C4). Based on these two graphs, Chen constructed infinite families of bridgeless cubic graphs M0,1,2,...,k−2,k−1 which is obtained from cyclically 4-edge-connected and having a Fulkerson-cover cubic graphs G0, G1, . . . , Gk−1 by recursive process. Доказывают через 244-flow-covers. Furthermore the counterexample presented has the interesting property that no 2-factor can be part of a cycle double cover
	- Loupekine snarks, Loupekine snarks constructed from the generalised Blanuša snarks - Fulkerson’s Conjecture and Loupekine snarks; примерно о тех же графах - Loupekhine snarks of first and second kind and the Watkins snark - Berge–Fulkerson Conjecture on Certain Snarks
	- а вот ещё мило, тоже про Hagglung графы - Semi blowup and blowup snarks and Berge-Fulkerson Conjecture - там прям нарисованы решения
	- ещё можно просто строить снарки через Isaacs dot product

типа done:
	можно пока что закончить думать про cographic матроиды
	типа есть статья
	P. N. Walton and D. J. A. Welsh, On the chromatic number of binary matroids, Mathematika 27 (1980)
	THEOREM 3. Tutte's 5-flow conjecture is equivalent to each of the following statements:
	(a) pi(EX(F7, K5)) = 5
	(b) pi(EX(F7*, K5)) = 5
	(c) pi(EX(F7, K3,3)) = 5
	(d) pi(EX(F7*, K3,3)) = 5
	а ещё возможно
	pi(EX(K5)) <= 8

	забавно, получается,
	что и без M(K5), на одном только M(K3,3) всё ломается
	чего я не пойму, так это
		каким образом в (c) оценка в 5? почему не 6? почему не достигается 6?
		что, если взять K5?
			но я знаю, что K5 - не кографический
	я наверно плохо паршу эти эквивалентности
	скорее всего K5 нету ни в (c), ни в (d)

Theorem 3.2. The unique minimal tropical basis of a cographic matroid M on graph G consists of the
edge cuts that split G into two 2-edge-connected subgraphs.


Cographic/cocycle matroid M∗(G): Let G = (V, E) be an arbitrary undirected graph. A subset I ⊆ E is independent if the complementary subgraph (V, E \ I ) of G is connected. A basis in this matroid is the complement of a spanning tree; a circuit in this matroid is a cocycle—a minimal set of edges that disconnects the graph.

Similarly, if M is the cocycle matroid for G, the matroid optimization problem seeks (the complement of) the minimum spanning tree.

We now immediately have a correct greedy optimization algorithm for any matroid. Returning to our examples:
• Cocycle matroid: Given a graph with weighted edges, compute its minimum spanning tree.

Lemma 2.1 [5]. A binary matroid is cographic if and only if it has no minor
isomorphic to F7, F7∗, M(K5), or M(K{3,3}).
[5] J.G. Oxley, Matroid Theory (Oxford University Press, Oxford, 1992).

TODO:
	всего у графа Петерсена
	240 nz-mod5 решений
		типа - 4 симметрии по умножению на 1,2,3,4
		и 60 симметрий по графу
	у решётки E8
	The E8 root system is a rank 8 root system containing 240 root vectors spanning R8. It is irreducible in the sense that it cannot be built from root systems of smaller rank. All the root vectors in E8 have the same length. It is convenient for a number of purposes to normalize them to have length √2. These 240 vectors are the vertices of a semi-regular polytope discovered by Thorold Gosset in 1900, sometimes known as the 421 polytope.
	240 векторов
	The vertices of this polytope can also be obtained by taking the 240 integral octonions of norm 1. Because the octonions are a nonassociative normed division algebra, these 240 points have a multiplication operation making them not into a group but rather a loop, in fact a Moufang loop.
	The subset of unit norm integral octonions is a finite Moufang loop of order 240.


TODO (чисто поржать):
	попробовать глянуть spectral graph theory
	придумать условие на спектр, чтоб покрыть все снарки
		(типа это же полиномиальная история должна быть, значит обязательно будут и не снарки,
		причём с вероятностью 1)
	и проверить, что все графы с таким спектром имеют dominating circuit

TODO:
	но на самом деле кажется, что
	chip-firing game на cographic matroid'е
	это что-то типа потока
	скажем так
	берём граф
	берём разрез
	он делит граф на 2 части
	chip-firing в одной из частей выводит фишки в другую часть, при некоторых условиях
	тогда вопрос, сначала
	TODO: берём граф
		берём circuit
		берём cographic матроид
		делит ли circuit что-нибудь на 2 части? и что именно
		по идее если граф планарный, то надо играть на гранях

TODO (ещё немного безумия):
	придумать связь между nz5 и chip-firing game
	типа хочу, чтоб любой critial configuration соответствовал nz5 потоку
	например
	выбираю q \in V(G)
	модифицирую правила так, чтоб что-нибудь, не знаю
	дальше по nz5 строю fancy 4-vertex-colouring
	и это типа должно быть числом чипов в каждой вершине
	что-то тут не сходится
	например, что nz5 независит немного от степеней вершин

nah:
	беру cographic matroid
	беру слайды Каца
	http://www.math.uwaterloo.ca/~eekatz/slides/KatzMatroidsSimonsNotes.pdf
	строю V
	V - linear subspace
	потом P(V)
	потом пересечение P(V) \cap (k*)^n
	потом Trop() от этого
	и дальше я пытаюсь понять - что такое characteristic polynomial
	для данного многообразия

	есть ответ у Huh:
	https://web.math.princeton.edu/~huh/TropicalMatroids.pdf
	The characteristic polynomial is the anticanonical image
	для permutohedral variety

TODO:
	#totally-cyclic-orientations vs #nz-mod5 vs #o6c4c решений
	делится ли одно на другое?

TODO:
	рассмотрим totally cyclic orientations
	->v1->v2->v3->
	-/  -/  -/
	тогда после v3 уже будет ребро с потоком 4 и больше
	а если и дальше так будет, то nz5 не построишь
	значит ориентаций из nz5 - их меньше

а чё, типа
для dominating circuit conjecture
фактически надо доказать, что
если в кубическом графе нет dominating circuit'а никакого,
то у него есть nz4? или 3-vertex-colouring
интересно, какая могла бы быть тут интуиция


TODO:
	#5cdc, #6cdc, #7cdc, #8cdc, ...
	это многочлен?
	то же про
	#o5cdc, #o6cdc, #o7cdc, ...
	#6c4c, #7c4c, #8c4c, #9c4c, ...
	#o6c4c, #o7c4c, ...
	хотя не, в какой-то момент типа слоёв слишком много - я учитываю пустые слои?
		если нет, то это не многочлен,
		но может эти числа log-concave?
		хотя с чего вдруг
	а если учитываю, то в какой-то момент это уже будут факториалы
		кажется это тоже не будет многочленом

	когда буду составлять ценз всех графов
	надо будет указать - есть ли гамильнотов цикл или нет
	у графа Петерсена - 240 гамильтоновых путей
		столько же, сколько и nz5 потоков
		это ни о чём не говорит,
		но просто
		у многих снарков нет гамильтонова пути
		а у петерсена их много

TODO:
	можно ли 5-поток связать с какой-нибудь раскраской на вершинах?
		3-поток - это 2 цвета
		4-поток - это 3 цвета
		5-поток - наверно 4 или 5 цветов, только каких?

TODO:
	поизучать инварианты embedded graphs
	и посравнивать эти инварианты в случаях, когда мы вложили граф
	как надо для cycle double cover и в общем случае

TODO (очень интересная история!):
	mod5nz vs 4-coloring

	имеем вершины типа (и её возможные соседи):
	1: 2+2+1=0 => рёбра 3,3,4 => соседи 2,3,4
	2: 4+4+2=0 => рёбра 1,1,3 => соседи 1,2,4
	3: 1+1+3=0 => рёбра 4,4,2 => соседи 1,2,4
	4: 3+3+4=0 => рёбра 2,2,1 => соседи 1,2,3
	из nz-mod5 мы получаем vertex 4-coloring
	специфический 4-coloring
	какой? непонятно пока что
	а ещё - если кубический граф не K4 - то нам всегда хватит 3 цветов для вершин
	но ок
	что если у ребра соседи 1 и 2
	не, ничего не даёт
	а, ещё я вроде узнавал, и это халявно, что
	число вершин типа 1 = число вершин типа 4
	число вершин типа 2 = число вершин типа 3
	хватит ли этих условий?
	наверно нет
	что, если попробовать сюда присобачить dominating circuit?
	интересно
	возьмём K4
	нужны все 4 цвета по одному разу
	что я хочу попробовать сделать: может что-то индуктивно протащить?
	от K4 до P10
	точно не хватит, ещё одно условие:
		у каждой 1 максимум один сосед 2
		у каждой 2 максимум один сосед 4
		у каждой 3 максимум один сосед 1
		у каждой 4 максимум один сосед 3
	потому что рёбра 1-2, 2-4, 3-1 и 4-3 восстанавливают однозначно
		вершины 1, 2, 3 или 4 соответственно:
		1 >-1-4-< 2
		2 >-2-3-< 4
		3 >-3-2-< 1
	    4 >-4-1-< 3
	и я думаю тогда, что это все условия, что нам нужны
	и ещё нужно условие, что среди соседей есть противоположный или вот этот единственный

	втупую наверно не получится

	        .1

	        .4
	.2
	                .3
	    .4
	           .2

	      .1
	         .1

	   .3
	            .4


	нашёл 4-coloring для P10, где нет nz5
		понял, здесь бага в том, что
		есть вершина 4 с двумя соседями 3
		а так нельзя
	почему так вышло:
		интуиция такая
		возьмём эти две вершины справа, которые 2-3
		и уберём
		дальше стянем рёбра, чтоб граф снова стал кубическим
		получим всё ещё правильную раскраску
		не должно быть такого эффекта
		теперь вопрос - как это формализовать,
		и хватит ли нам этого требования
	! возможно надо потребовать, чтоб все возможные цепочки из
	2-3 и 1-4 были нечётной длины
		хотя для K4 это неправда, но в нём и правда можно переставить всё что угодно
		может потому что в нём есть nz4? но вряд ли
	мб в этом фокус?
	то есть мб надо ещё наложить ограничение, что
	в этом 4-coloring нельзя будет поменять любую из пар вершин 1-4 или 2-3
	друг с другом?
	по-крайней мере выглядит так, действительно
		в той раскраске, кстати, обе пары 2-3 такие
	а может быть здесь плохо то, что есть вершина 1, соседняя с тремя 4?
	а мб нужно просить, что компонента из вершин 1-4 и компонента 2-3 - обе связны?
		или наоборот обе не связны, если это вообще возможно?
	в общем, надо глянуть на то, что получается из mod5nz

	кстати, Petersen colouring не сохранит раскраску на вершинах
		потому что слабое ребро будет соединять две вершины одного цвета

	done:
		кстати, чё будет, если все 2-3 поменять местами?
		и то же про 1-4
		ничего хорошего - можно нарушить единственность соседей
		но вот такие перестановки норм (в одном классе эквивалентности они все):
			1<->4, 2<->3
			1->2->4->3->1
			1->3->4->2->1

	TODO: глянуть, когда в одну и ту же 4-раскраску попадают
	2 совершенно разных mod5nz решения
	кажется это нереально

	всего каждой вершины - 6 разных вариантов:
	1(444), 1(244), 1(234), 1(233), 1(344), 1(334)

	в общем
	для графа Петерсена оба определения совпадают:
		- проверяем, что это раскраска
		- проверяем, что у 1 максимум один сосед 2 и т. п.
		- проверяем, что у 1 не бывает трёх соседей 3 и т. п.
		- проверяем, что число вершин 1 == 4 и 2 == 3
	для блануша снарков это не так, раскрасок больше
		скорее всего слишком много рёбер определяется однозначно и противоречиво
		по графу петерсена ещё вижу,
		что есть неучтённые штуки, типа
		есть вершины типа 1(444) или 3(222)
		и если все 3 соседа у них - определены (то есть с единичным вот этим хитрым соседом)
			то эти вершины сами - не поточатся
	так,
	помимо этого,
	в тебя не могут указывать 3 стрелки
	и
	есть ещё одно свойство, для закодить, которое запрещено
	значит
	для каждой вершины вычисляем, если можем,
	куда повёрнута стрелка этой вершины
	дальше в графе ищем вершины, в которые указывает 2 стрелки, но
	у которых у самих нет стрелки
	так вот - на них стрелка форсится
	и всё может сломаться
		например, если пойти по этой стрелке, а там противоположная вершина по значению,
		причём то же со стрелкой
	и ещё есть вариант, когда плохо

	ну в общем, у nz-mod5 конфигурация этих стрелок
	очень чёткая

	ну или хрен знает
	можно просто попробовать по раскраске построить nz-mod5
	и если он не строится - то считать такую раскраску плохой
	ну кажется, что мы наверняка так сразу сравняем два числа

TODO:
	взять nz-mod5 поток
	для каждой вершины - глянуть, куда направлено основное ребро
	и посмотреть, что за подграф получится
	в одном из вариантов получилось остовное дерево

nah:
	очень важно подумать вот над чем попробовать
	cographic matroids
	circuit double cover
	для них он банальный, потому что
	A set is a circuit of M* if and only if its complement is a coatom in M.
	In a matroid of rank r, a flat of rank r-1 is called a hyperplane. (Hyperplanes are also called coatoms or copoints.)
	то есть circuit в cographic матроиде - это звёзды вокруг вершин.
		не только!
		A bond of a graph G is a minimal cut, i.e., an edge cut none of whose proper subset is an edge cut
		то есть помимо звёзд ещё и всякие другие разрезы есть
		но для double cover нам вполне хватает и звёзд
		а ещё интересно, что
		нам хватит 4 цикла на всё про всё
	кажется, что
	graham-haggkvist conjecture как-то может быть связан тут
		но напрямую не прокатит, скажем так
	не совсем, конечно, но всё же
	вопрос такой, скажем

	есть ли класс матроидов, который тоже основан на графах,
		но при этом connected circuits в нём, это, например, все пути (зафиксированной длины)?

	что если взять регулярный граф (направленный?)
	что если зафиксировать дерево (с антиориентацией?)
	что если объявить connected circuit'ом любое подмножество в данном графе,
		изоморфное данному дереву? (с учётом ориентации?)
		а потом породить все оставшиеся circuits
		вот тут нетривиально немного, я не умею порождать
		то есть
		мне надо взять 2 дерева, взять их объединение минус одно ребро из пересечения,
		и глянуть - если там нет нужного мне дерева - то какое подмножество логично добавить?
	- появятся ли ещё новые connected circuits?
	- это будет матроид?
	- это regular matroid?
	- это binary matroid?
	- какой у него lattice of flats?
	- какой у него characterictic polynomial? или у его dual

	не, тут вроде не получится - берём пути длины 3, пересечём
	---
	/
	тогда по идее
	--
	/
	тоже придётся назвать circuit'ом, а мне не очень хочется это делать
		потому что если так поступить, то я опять могу просто накрыть граф звёздами

!!!
TODO:
	поизучать Penrose polynomial
	для вложенных графов
	и для кографовых матроидов
	оказывается P(-2) примерно равно числу nz4 потоков на графе (матроиде)

	ещё сравнить Penrose polynomial на матроидах
	с теоремой про matroids with circuit cover property
		M - binary matroid
		has this property <=> mo minor isomorphic to F7*, R10, M*(K5), M(P10)

есть ещё Avalance polynomial, но выглядит довольно безнадёжным попытка его вычислить

!!!
TODO:
	Polynomial algorithms for canonical forms of orientations

TODO:
	Hilbert series
	of Chow ring
	of cographic matroids
	надо построить \gamma-vector

!!
TODO:
	берём снарк
	берём все nz5 потоки
	убираем числа, смотрим просто - куда повёрнуты рёбра
	дальше считаем с учётом Eulerian equivalence - сколько останется конфигураций
	интересно - все ли останутся?
	то же для nz6 интересно
	я ориентирую только в положительную сторону
		TODO: правда ли, что в интернете считают также?
		иначе же неинтересно будет? типа - я ж могу любое ребро перевернуть и знак поменять

	то же интересно в случае, когда берём не снарк и смотрим на nz4 и nz5

	а ещё TODO - можно ли на этом пространстве ввести какую-нибудь операцию?

TODO:
	flow(0) = number of Eulerian equivalence classes of totally cyclic orientations
		Chen and R. Stanley, Orientations, lattice polytopes, and group arrangements II: Modular and integral flow polynomials of graphs

		TG (0, 1) equals the number of spanning trees without internally active edges

		The main objective of this paper is to give a bijective proof of the result that TG(0,1) counts the Eulerian-equivalence classes of totally cyclic orientations of G based on the reformulation of the equivalence relation as described in [5,13].

		It was also known that TG (0, 2) enumerates the number of totally cyclic orientations of G

	как будто бы -1 = \infty или -2 = \infty
	не, странно, не прокатывает аналогия

	flow(-n) - что он считает?

MEGA TODO:
	- в instiki нету регистрации
		мне это немного неудобно в том плане,
		что хотелось бы уметь за юзером приклеплять инфу всякую, типа
		прочитал он статью или нет
		и вычислять - какие статьи он может прочитать дальше

	энциклопедия
	grafts
	cones
	lattices (2 вида)
	bricks
	braces

	а заодно ещё часто бывают обскурные всякие синонимы, типа
	bridgeless = 2-edge-connected = one-particle irreducible graph (в TQFT)
		у матроидов это вроде тоже bridgeless (или loopless и simple?)
	cubic = regular degree 3 = (не совсем) 3-graph = 3-valent ещё вроде бы
	circuit vs cycle
	polymatroid = generalized permutahedra = submodular functions
		Hopf monoid of generalized permutahedra
		generalized permutahedra are the only family of polytopes which supports such a Hopf structure

	нужно будет обязательно прояснить момент с тем, что
		есть Tietze snark
		но я на нём не тестил гипотезы, лол, потому что в нём есть цикл длины 3

а вот мб интересно
	6 слоёв в o6c4c - это типа 6 всяких chord diagrams,
		если снарк - все не connected
		здесь ещё правда нужен кубический граф
	а o5cdc даёт нам bridgeless map
		а есть статья, что
		rooted bridgeless map = rooted connected chord diagram


:/ TODO:
	закодить tight cut decomposition
	для снарков я ничего не узнаю
	Thus, as per Corollary 1.6, a snark is an essentially 4-edge-connected cubic brick with chromatic index equal to 4.

TODO:
	заценить Kazhdan-Lusztig polynomial

TODO:
	у графов без мостов есть производящая функция
	можно поизучать

TODO:
	The matching polyhedron, i.e., the convex hull of (incidence vectors of)
	perfect matchings of a graph was characterized by Edmonds;
	this result is the key to a large part of polyhedral combinatorics and
	is used in many combinatorial algorithms. The linear hull of perfect matchings
	was characterized by Naddef, and by Edmonds, Lovasz and Pulleyblank. In ths paper
	we describe the lattice
	generated by these vectors. i.e., the set of all integer linear combinations of perfect matchings. It turns out that the Petersen graph is, in a sense, the only difftcult example. Our results also imply a characterization of the linear hull of perfect matchings over fields of characteristic different from 0. The main method is a decomposition theory developed by Kotzig, Lovasz, and Plummer, which breaks down every graph into a number of graphs called bricks with very good matching properties. The number of Petersen graphs among these bricks will turn out to be an essential parameter of the matching lattice. Some refinements of the decom- position theory are also given. Among others. we show that the list of bricks obtained during the decomposition procedure is independent of the special choices made during the procedure.

	1. что за bricks и braces
		а ещё я так понимаю braces возникают в теории cdc тоже
		статья Jimenez
	2. что за decomposition
	3. посчитать это число для различных снарков
	4. может ли эта декомпозиция помочь в построении cdc, nz5 или 6c4c?

TODO:
	почитать статью
	Cones, Lattices and Hilbert Bases of Circuits and Perfect Matchings
	там куча всяких гипотез
	всякой разной обобщённости
	одну интересную, правда,
	уже опровергли
	http://people.math.sfu.ca/~goddyn/Theses/deshpandeMScThesis.pdf

TODO:
	посчитать Kazhdan-Lusztig многочлен
	в целых точках

TODO:
	quantum mobius algebra

poset -> lattice -> semi-modular lattice -> geometric lattice (= matroid) -> graph
coxeter matroid -> matroid
matroid over hyperfield -> matroid

TODO:
	projective
	Strong semimodular lattice
	transversal?

	is_simple
		глянуть на графах без мостов и без точек сочленения
		пока что эта штука всегда даёт True
		для таких графов
		я смотрю на RandomGNP(8, 0.4) или RandomGNP(7, 0.4)
		впрочем и graphic matroid тоже на таких графах даёт True
		ну ладно, тогда эта штука мне интересна только пока что в разрезе графов без мостов и точек сочленения

more or less done:
	какие глянуть lattice
	projective lattice
		https://pdfs.semanticscholar.org/2139/29168f6c5701fc38f6233b143b62b0f0145c.pdf
	Strong semimodular lattice

	lower semimodular lattice
	distributive lattice
		оба отметаем, для Петерсена не прокатывает
	а ещё
	не is_stone
		тут вообще надо быть distributive сначала
	не is_modular
	не is_semidistributive
	не is_join_semidistributive
	не is_meet_semidistributive
	не is_join_distributive
	не is_meet_distributive
	не is_vertically_decomposable
	не is_orthocomplemented
	не is_pseudocomplemented
	не is_join_pseudocomplemented
	не is_supersolvable
	не is_planar
	не is_dismantlable
	не is_simple
		но интересно
		на рандомных графах в 8 вершин для cographic очень часто даёт True
		для graphic почти всегда False
	не is_subdirectly_reducible
	не is_constructible_by_doublings('any')

	breadth бывает совсем разный

	is_complemented
	is_relatively_complemented
		всегда

	мб is_atomic
		это вроде не то же, что atomistic
	мб is_coatomic
	мб даже is_cosectionally complemented
	мб is_sectionally_complemented
	мб is_isoform
	мб is_uniform
	мб is_regular
		но все эти свойства
		и в graphic matroid'ах тоже работают
		а может и вообще на матроидах это всё ок

todo:
	функция мёбиуса на dual flat lattice
	принимает ли она в какой-нибудь точке значение 0?
		кажется что нет
		кажется что это верно для любого матроида (в котором пустое множество сидит в lattice?)

todo:
	hopf algebra of bridgeless graphs?
	Ландо придумал integrable polynomial инварианты
	для rooted maps
	а есть статья, которая говорит, что эти штуки (в bridgeless варианте)
	1-1 rooted connected chord diagrams
	может тут есть чего?

	мммм
	найс
	надо попробовать изучить

	As an example, we will apply Theorem 5.7.2 to the set of bridgeless graphs and show that this application can be interpreted as a Legendre transformation.
	In Example 5.5.1 the set of bridgeless graphs Pbl was introduced. This set of graphs is of importance as it will form the foundation for the Hopf algebra of Feynman diagrams in the next chapter.

TODO:
	The golden identity for the flow polynomial is conjectured to characterize planarity of cubic graphs, and we prove this conjecture for a certain infinite family of non-planar graphs

TODO:
	The Legendre transformation and bridgeless graphs
	https://edoc.hu-berlin.de/bitstream/handle/18452/19952/dissertation_borinsky_michael.pdf?sequence=5

TODO:
	давай поизучаем категорию
	cycle-continuous mappings для графов
	объекты - графы (или графы без мостов) (скорее всего мультиграфы)
	морфизмы - cycle-continuous mappings (или tension-continuous mappings)
	например поизучаем также, как изучают категорию матроидов

	например
	https://en.wikipedia.org/wiki/Limit_(category_theory)
	поискать tensor product, inverse limit and direct limit, kernel and cokernel, pullback, pushout and equalizer
	coproducts
	coequalizers
	initial morphism
	terminal morphism
	Tensor algebras
	Products
	Limits and colimits


databases:
	matroid zeta functions
		http://math.robinvanderveer.com
	Database of Matroids
		revlex notation
		http://www-imai.is.s.u-tokyo.ac.jp/~ymatsu/matroid/index.html

nah:
	cographic bridgeless matroid
	flat lattice
	наверняка у этой решётки есть какое-то специальное свойство
	вот вопрос - какое? что это за решётка?

TODO:
	deletion-contraction

nah:
	redei zeta function
	для матроидов - неинтересно вроде бы
	потому что там нужно ввести order function на flats
	и у них там у всех есть уровень фиксированный, rank
	и order кажется неинтересен получается

TODO:
	Combinatorial analogs of topological zeta functions

	Scheduling polynomials include:
		the chromatic polynomial of a graph,
		the zeta polynomial of a lattice,
		the order polynomial of a poset,
		the Billera-Jia-Reiner polynomial of a matroid
		то есть - у решёток есть zeta многочлен
		неплохо

DONE
	zero-sum flow conjecture - которая эквивалентна bouchet's bidirected nz6flow conjecture
	это как?
	она точно не слабее?
	не, вроде норм, одно в другое напрямую переделывается (рёбра, которые направлены - их надо на 2 разбить просто)
	правда появляются вершины степени 2
	поэтому в zero-sum явно мало проверять только снарки

TODO:
	Circuit covers of cubic signed graphs
	https://onlinelibrary.wiley.com/doi/pdf/10.1002/jgt.22238
	A 3-connected signed graph without a signed-circuit double cover (solid edges are positive and dashed edges are negative)
	поискать ещё примеры графов таких

!
зато вот тотальный :)
TODO:
	A k-total-coloring of G is an assignment of k colors to the edges and vertices of G, so that adjacent and incident elements have different colors
	It was proved by Rosenfeld that the total chromatic number of a cubic graph is either 4 or 5. Cubic graphswithχT =4aresaidtobeType1,andcubicgraphswithχT =5aresaidtobeType2.

	надо это поисследовать

nah, ну то есть
если TODO, то точно не на кубических графах:
	проект
	нетотальный
	беру граф, без мостов
	и смотрю, какие у него nz flow и zero-sum flow
	вот

	у графа есть zero-sum flow, если его можно накрыть циклами чётной длины и dumbell'ами (или barbell'ами)

	Let (G, Σ) be a signed cubic graph. Then the following holds:
	(G, Σ) has a nowhere-zero Z3-flow if and only if it is antibalanced
	(G, Σ) has a nowhere-zero Z4-flow if and only if it has an antibalanced 2-
factor
	(G, Σ) has a nowhere-zero Z2 × Z2-flow if and only if G is 3-edge-colourable

этсамое
если взять кубический граф
и глянуть zero-sum flow как nzk
то нам хватит 1 и -2
	потому что можно взять perfect matching
	и навесить на него -2, а на всё остальное 1
а если как Zk
	то можно вообще просто 1 поставить везде,
	и 1+1+1=0 (mod 3)
лол

TODO:
	flow spectrum

TODO:
	zero-sum flow на матроидах

TODO:
	zero-sum flow polynomial?
	известно, что это вроде бы quasi-polynomial

DONE (somewhat):
	есть ли дуальное понятие для zero-sum flow?
	не известно
	есть 3 понятия signed coloring, и ни один из них не дуален signed потокам

TODO:
	zero-sum flow в плане Zk и nzk
	это разные вещи?

	а ещё у signed graphs есть зависимость не от порядка группы, а от самой группы
	там прям семейство многочленов с одним параметром
		в зависимости от количества 2-кручений

	точнее так
	для nzk это 2 полинома
	number of the nowhere-zero k-flows in a signed graph is a quasi-polynomial of period two, that is, a pair of polynomials, one for odd values of k and the other for even k
	для групп Г - это многочлен f_d, где d: |Г| = 2^d * n и есть подгруппа изоморфная Z_2^d

TODO:
	изучить
	закодить
	zero-sum flow
	любопытная штука
	для K2,3, например, нужно Z3, при этом рёбра можно чисто из 1 использовать
	для K4 - Z4, а рёбра 1 и 2

	Interestingly, no other examples of signed graphs with flow number 6 appear to be known

WUT:
	до меня тут дошло
	что nz5 и cdc - можно сформулировать для матроидов
		ну точнее nz как понятие, а cdc как гипотезу даже
	а вот Берж-Фалкерсона на матроидах не ввести
	чё-т точнее не знаю как, и видимо никто не знает
	но может просто рискнуть?
	и ввести такое понятие?
	типа
	Berge-Fulkerson matroid
	который можно накрыть шестью наборами цепей, в одном наборе цепи не пересекаются по рёбрам

	и ещё
	введём такое понятие
	nowhere zero flow для произвольного матроида
	f : M -> G
	\sum f(x) = 0, сумма по любой коцепи (cocycle) в этом матроиде
	G - аддитивная группа, f(x) != 0 для любого x

	A union of circuits is sometimes called a cycle of M. A cycle is therefore the complement of a flat of the dual matroid. (This usage conflicts with the common meaning of "cycle" in graph theory.)

	cocycle (that is, cycle of the dual matroid)

	то есть
	cocycle - это dual для flat для matroid

TODO:
	можно ещё составить список объектов,
	о которых ничего не написано, ничего не сказано,
	ничего не построено, может быть ничего не подумано,
	но мне почему-то кажется весёлым такое помыслить,
	например

	matroid zeta function
		ну типа у графов есть дзета функция
		и даже гипотеза римана доказана для графов

		Ihara zeta function:
		product is taken over all prime walks p of the graph G=(V,E) – that is, closed cycles
			Backtrackless, то есть
			циклы могут быть бесконечны по длине
		ну на матроиды это напрямую не перенести, ок

		A rank-1 flat in a matroid is referred to as a point and a rank-2 flat is a line
		
		A path in M is a finite sequence P=(X1,...,Xk) of one or more points of M, not necessarily all distinct, such that any two consecutive terms are distinct points of M which are subsets of the same connected line.

	matroid l-function

TODO:
	как выглядит история nowhere zero flows
	для матроидов?
	там что-то типа 3 или 4 статьи было
	видимо первая статья, это
	Nowhere Zero Flow and Circuit Covering in Regular Matroids
		Michael Tarsi
	и там явно-неявно видно-предполагается-подразумевается, что
	есть матроиды со сколь угодно большим минимальным k, что имеется k-nowhere zero flow
		хотя явно конструкции я не увидел
		но может там очевидно?
		там матрицы есть
	и в этой статье выводится связь с коэффициентом для накрытия цепями
	...

TODO:
	смотрю на матроиды, у которых flow(2) != 0
	и пытаюсь на рёбра матроида навесить 1
	и понять - что это значит
	хоть мы и не знаем, что такое вершина у матроида
	но у данных матроидов - все степени вершин чётные
	а если flow(2) == 0, flow(3) != 0
	есть нечётной степени вершины, но хватает равенства 1+1=2

	может такие матроиды просто тупо разбиваются на circuits? где flow(2) != 0

DONE:
	глянуть flow polynomial для снарков
	что мне там интересно глянуть
	типа гипотеза, что полином имеет вид
	(x-1)(x-2)(x-3)(x-4)(...)
	вот это ...
	какие там корни?
	ответ
	We study the real roots of ΦG(Q) for a family of non-planar cubic graphs known as generalised Petersen graphs G (m, k). We show that the modified conjecture on real flow roots is also false, by exhibiting infinitely many real flow roots Q > 5 within the class G(nk,k). In particular, we compute explicitly the flow polynomial of G(119,7), showing that it has real roots at Q ≈ 5.0000197675 and Q ≈ 5.1653424423. We moreover prove that the graph families G(6n,6) and G(7n,7) possess real flow roots that accumulate at Q = 5 as n → ∞ (in the latter case from above and below); and that Qc(7)≈5.2352605291 is an accumulation point of real zeros of the flow polynomials for G(7n,7) as n→∞.

TODO:
	беру конструкцию ниже
	и типа
	пара точек на сфере s2 - у них есть образ в s3
	что это за образ?
	мб это окружности?

хрень:
	предположим, что треугольники-шестиугольники на сфере s2
	это или s3, или rp3
	тогда
	фиксируем точку на s2
	берём hopf bundle
		есть кажется некоторое пространство свободы
		в построении этого отображения
	получаю отображение этой точки в s3
	образ в s3 - это типа много всяких разных треугольников-шестиугольников
		которые содержат данную точку
		мне так хочется
	тогда я должен словить такое:
		беру любой треугольник-шестиугольник на s2
		смотрю на 3-6 окружностей в s3
		смотрю на пересечение
		утверждается, что я всегда получу ровно 1 точку (ну или ровно 2)
	тогда вопрос
		смогу ли я построить такой hopf bundle?

nah:
	graph -> cographic matroid -> flats -> chow ring -> понять связь с nowhere zero flows
	ситуация такая
	берём граф
	дальше берём в качестве множеств всевозможные unions of circuits
		теоретико-множественно
	дальше берём дополнения до этих множеств
	эти дополнения образуют lattice of flats в cographic матроиде
	и вот, характеристический многочлен на них - это nowhere-zero flow polynomiql

	закодить для графа петерсена
		ничего кодить не стал
		на самом деле всё что нужно есть в sage!
	как выглядят понятия
	из теории матроидов

	matroid
	graphic matroid = cyclic matroid
	cographic matroid = bond matroid

	что такое flats в graphic matroid - понятно

	In matroid theory, the dual of a matroid 
	M is another matroid 
	M∗ that has the same elements as 
	M, and in which a set is independent if and only if 
	M has a basis set disjoint from it.

	The flats of M are complementary to the cyclic sets (unions of circuits) of 
	M∗, and vice versa.[3]

	по идее будет
	a, abc, ad, abcde
	так что ли
	тогда вроде понимаю как строить, хз что это
	хз, потому что дополнения
	но похоже на flat
	в bridgeless графах будет пустое множество здесь, кстати

DONE:
	я немного неправильно подошёл к кольцу икосианов
	когда я их генерил - надо было проверять
	норму на 1
	если норма == 1 - оставлять
	но тогда их кажется совсем немного останется, какое-то конечное число
	возможно даже, что 120 и останется
	но нет! их 472, лол

nah:
	сейчас построю ring homomorphism
	icosian -> F5*
	и проверю точки на больших окружностях
	см. выше

nah:
	54points - это тройки из unit icosians
		что это за конфигурация?
		может правда я не ту точку проворачиваю?
		но вроде бы ту, что надо
		тут 2 графа петерсена

	у меня есть несколько конфигураций на сфере,
	в которых больше, чем 30 вершин
	но это всё не графы
	вопрос
	можно ли выкинуть несколько троек так, чтоб
	остался граф?
	который снарк

	например
	150points (что-то типа вершин 120-cell)
	тут ничего интересного - тут где-то 6 графов петерсена просто

assert(len(uniq_idx) == len(set(uniq_idx)))
упал
это как
	это проблема дискретизации
	как лечить?
	надо уметь понимать, что я очень рядом с вершиной икосаэдра
	или просто уметь пересекать икосаэдры и окружности,
		прям явно
		наверно это проще
		ну типа у меня есть явное выражение для окружности
		и у каждого икосаэдра есть грани, например
		720 граней, каждая грань - 2 икосаэдра
		кажется достаточно с каждой пересечь
можно попробовать заложиться на то, что
	число пересечений с икосаэдрами == 12, 16, 20, 24, 28
	шага в 5000 хватает
	в 1600 не хватает
	2000 - so-so
можно ли больше 28?

такое ощущение, на самом деле, что икосаэдры ходят четвёрками
	не, непонятно
	кажется лучше забить на изначальную раскраску-группировку на четвёрки, из графа Петерсена
	а смотреть так напрямую
	возможно потому что там специфическая группировка
а возможно это +4 - это просто логичное увеличение
	как на S2
	по-моему там сразу по +2 будет
да! они ходят четвёрками
	значит максимум 7 четвёрок наблюдалось
	а минимум = 3
ну значит можно 1 число выдать на четвёрку, раз они всегда вместе
значит у нас остаётся 30 икосаэдров

ну значит скорее всего ничего не прокатит, я смогу найти такие близкие тройки точек, где
	эти четвёрки то есть, то нет
	хотя 30 - это 2 раза граф петерсена всё-таки, а не 1
	но это потому что двойное накрытие

DONE, fail:
	делаю так
	рассматриваю теперь уравнения по модулю 5
	работаю в Z5
	на сфере S1 можно работать в Z3, тогда мы красим сферу на
		6 частей - 1, 2, 1, 2, 1, 2
	сумма противоположных точек == 0, сумма на треугольнике == 0
	как я поступлю:
		беру 120 икосаэдров
		один крашу в 1
		и накидываю соотношений ещё, в зависимости от того,
		как работает расслоение Хопфа
		и ищу решение
	но возможно придётся переписать на плюсы
	или же придётся считать в sage



The coset space Spin(3) / 2I = S3 / 2I is a spherical 3-manifold called the Poincaré homology sphere. It is an example of a homology sphere, i.e. a 3-manifold whose homology groups are identical to those of a 3-sphere. The fundamental group of the Poincaré sphere is isomorphic to the binary icosahedral group, as the Poincaré sphere is the quotient of a 3-sphere by the binary icosahedral group.
Alternatively, the Poincaré homology sphere can be constructed as the quotient space SO(3)/I where I is the icosahedral group (i.e. the rotational symmetry group of the regular icosahedron and dodecahedron, isomorphic to the alternating group A5). More intuitively, this means that the Poincaré homology sphere is the space of all geometrically distinguishable positions of an icosahedron (with fixed center and diameter) in Euclidean 3-space. One can also pass instead to the universal cover of SO(3) which can be realized as the group of unit quaternions and is homeomorphic to the 3-sphere. In this case, the Poincaré homology sphere is isomorphic to S3/Ĩ where Ĩ is the binary icosahedral group, the perfect double cover of I embedded in S3.
к чему я это
	возьмём SO(2)
	возьмём 6 точек, которые используются в раскраске nz3
	группа симметрий Z/6
	получим 6 отрезков - на которых значение постоянно
поэтому!
	идея в том, чтобы на вот этих 60 копиях I навесить разные числа
	каждая копия - это какое-то подмножество точек на сфере, по идее

идея
беру S^3
беру 120-cell, который его замощает
	120 dodecahedral cells
	в каждый cell пихаю число из nz5 flow
	каким образом:
		на сфере действует группа симметрий I
		эта группа действует на icosidodecahedron, например
		я могу явно каждую точку icosidodecahedron отправить в 2 элемента группы I или 4 элемента группы 2I
	With 120 elements in 2I, each element ends up identifying one of the dodecahedra in the 120 cell with our origin dodecahedron, including that little twist we had when we defined the space.
	So that’s it!  That’s how you go from the tessellation of the 120-cell to the Poincare homology sphere dodecahedral space
беру S^2
над каждой точкой есть fiber в виде окружности из S^3
и, например, интегрирую по окружности (суммирую, чё попало)

как вариант!
по-крайней мере я могу попробовать комбинаторно проверить, что я не получу гадостей
например
	перебираю несколько троек на 2-сфере
	смотрю на их окружности из Hopf bundle
	смотрю на что попадают эти окружности в 120-cell
	получаю зависимость явную
	смотрю, что эти зависимости непротиворечивы в плане nz5 раскраски чего-нибудь, чего не знаю


The 120-cell can be partitioned into 12 disjoint 10-cell great circle rings, forming a discrete/quantized Hopf fibration

так
формулы координат окружностей из hopf fibration у меня есть
координаты вершин для 120-cell у меня тоже есть
	координаты одной клетки - у меня их нет
	как действует группа - тоже не знаю

точка на 2-сфере
	x = sin(2\eta) cos \xi_1
	y = sin(2\eta) sin \xi_1
	z = cos(2\eta)
окружность на 3-сфере
	x1 = cos((\xi_1 + \xi_2)/2) sin \eta
	x2 = sin((\xi_1 + \xi_2)/2) sin \eta
	x3 = cos((\xi_2 - \xi_1)/2) cos \eta
	x4 = sin((\xi_2 - \xi_1)/2) cos \eta
\eta \in (0, \pi / 2)
\xi \in (0, 2 * \pi)
это неправильная параметризация
правильная такая
a, b \in c
|a|**2+|b|**2=1, S3
S3 -> S2,
h(a,b) = (|a|**2 - |b|**2, 2*a*b'), b' - сопряжённое
S2: R x C


как я поступлю?
например так
	беру все вершины 120-cell (600 штук)
	1200 рёбер, 720 пятиугольников, 120 икосаэдров
	выясняю - какая длина ребра
	имея рёбра - пытаюсь вычислить 1 икосаэдр явно
	имея икосаэдр - проверяю, что действие binary icosahedral group
		переставляет по 3-сфере
		у меня уже есть готовые кватернионы для действия этой группы
		хотя чё проверять, если её кватернионы - это центры (на 3-сфере) икосаэдров
	короче, всё проще тогда
	беру точку на S3
	и нахожу ближайший центр
	и всё

TODO:
тогда план
	выясняю для каждого из 120 икосаэдров - какое там число по идее
	беру тройку точек
	поворачиваю на рандомный угол на S2
	для каждой точки выясняю \eta и \xi_1
	а потом окружность в S^3, с дискретизацией, скажем, в 1000 точек
	и смотрю ближайшие из 120 икосаэдров для каждой дискретизованной точки
	и чего-нибудь считаю (среднее, типа интеграла)



======================================================
======================================================



A stronger version of the circular embedding conjecture that has also been considered is the conjecture that every biconnected graph has a circular embedding on an orientable manifold. In terms of the cycle double cover conjecture, this is equivalent to the conjecture that there exists a cycle double cover, and an orientation for each of the cycles in the cover, such that for every edge e the two cycles that cover e are oriented in opposite directions through e.[3]

Alternatively, strengthenings of the conjecture that involve colorings of the cycles in the cover have also been considered. The strongest of these is a conjecture that every bridgeless graph has a circular embedding on an orientable manifold in which the faces can be 5-colored. If true, this would imply a conjecture of W. T. Tutte that every bridgeless graph has a nowhere-zero 5-flow.[3]

A stronger type of embedding than a circular embedding is a polyhedral embedding, an embedding of a graph on a surface in such a way that every face is a simple cycle and every two faces that intersect do so in either a single vertex or a single edge. (In the case of a cubic graph, this can be simplified to a requirement that every two faces that intersect do so in a single edge.) Thus, in view of the reduction of the cycle double cover conjecture to snarks, it is of interest to investigate polyhedral embeddings of snarks. Unable to find such embeddings, Branko Grünbaum conjectured that they do not exist, but Kochol (2009a, 2009b) disproved Grünbaum's conjecture by finding a snark with a polyhedral embedding.

See also Petersen coloring conjecture.

See also [[Petersen_graph#Petersen_coloring_conjecture|Petersen coloring conjecture]].

[3]
<ref name="Jaeger"/>
Kochol
{{harvs|txt|last=Kochol|year=2009a|year2=2009b}}


==Stronger conjectures and related problems==
A stronger version of the circular embedding conjecture that has also been considered is the conjecture that every biconnected graph has a circular embedding on an [[orientability|orientable manifold]]. In terms of the cycle double cover conjecture, this is equivalent to the conjecture that there exists a cycle double cover, and an orientation for each of the cycles in the cover, such that for every edge ''e'' the two cycles that cover ''e'' are oriented in opposite directions through ''e''.<ref name="Jaeger"/>

Alternatively, strengthenings of the conjecture that involve [[graph coloring|colorings]] of the cycles in the cover have also been considered. The strongest of these is a conjecture that every bridgeless graph has a circular embedding on an orientable manifold in which the faces can be 5-colored. If true, this would imply a conjecture of [[W. T. Tutte]] that every bridgeless graph has a [[Nowhere-zero flow|nowhere-zero 5-flow]].<ref name="Jaeger"/>

A stronger type of embedding than a circular embedding is a ''polyhedral embedding'', an embedding of a graph on a surface in such a way that every face is a simple cycle and every two faces that intersect do so in either a single vertex or a single edge. (In the case of a cubic graph, this can be simplified to a requirement that every two faces that intersect do so in a single edge.) Thus, in view of the reduction of the cycle double cover conjecture to snarks, it is of interest to investigate polyhedral embeddings of snarks. Unable to find such embeddings, [[Branko Grünbaum]] conjectured that they do not exist, but {{harvs|txt|last=Kochol|year=2009a|year2=2009b}} disproved Grünbaum's conjecture by finding a snark with a polyhedral embedding.

See also [[Petersen_graph#Petersen_coloring_conjecture|Petersen coloring conjecture]].


======================================================
======================================================

todo:
	нашёл статью про связь petersen graph, icosahedron и projective plane
	надо написать теперь про это всё
	лол, тут другая конструкция

todo:
	в теории можно ускорить поиск троек точек на большой окружности
	но надо ли

todo:
	combinatorial geometries
	
	https://arxiv.org/abs/1606.09412
	Whitney numbers of arrangements via measure concentration of intrinsic volumes
	Karim A. Adiprasito, Raman Sanyal

	https://arxiv.org/abs/1401.7301
	Filtered geometric lattices and Lefschetz Section Theorems over the tropical semiring
	Karim Alexander Adiprasito, Anders Björner

	Hodge Theory in Combinatorics
	https://mattbaker.blog/2015/12/14/hodge-theory-in-combinatorics/

	Whitney Encounters of the Second Kind
	https://mattbaker.blog/2017/01/05/whitney-encounters-of-the-second-kind/

	Hard Lefschetz theorems and Hodge-Riemann relations
	http://matroidunion.org/?p=1664

	Whitney numbers via measure concentration in representation varieties - Karim Adiprasito
	IAS
	https://www.youtube.com/watch?v=6Uia_osiucw

	workshop
	http://people.math.gatech.edu/~jyu67/HodgeWorkshop/

	Hodge Theory of Matroids
	https://www.ams.org/journals/notices/201701/rnoti-p26.pdf

	Hodge theory in combinatorics
	Matthew Baker
	https://arxiv.org/abs/1705.07960

	Hodge Theory for Combinatorial Geometries
	Karim Adiprasito, June Huh, Eric Katz
	https://arxiv.org/abs/1511.02888

	Log-concavity of characteristic polynomials and the Bergman fan of matroids
	June Huh, Eric Katz
	https://arxiv.org/abs/1104.2519

	Matroid theory for algebraic geometers
	Eric Katz
	https://arxiv.org/abs/1409.3503v1

	Milnor numbers of projective hypersurfaces and the chromatic polynomial of graphs
	June Huh
	https://arxiv.org/abs/1008.4749

	Tropical geometry of matroids
	June Huh
	https://web.math.princeton.edu/~huh/TropicalMatroids.pdf

	Combinatorial applications of the Hodge-Riemann relations
	June Huh
	https://web.math.princeton.edu/~huh/ApplicationsHR.pdf
	https://arxiv.org/pdf/1711.11176.pdf

todo:
	matroid nowhere zero flow polynomial
	я так понимаю это вообще неизученная тема

	а так же - что там с modular flow? их изучали?
		их формулируют, по-крайней мере

	flow
	regular matroids
		речь только о них
	M - matroid, D_M - incidence matrix of circuits against elements

	Let M be a regular matroid. Then M admits a 4-NZF if and only if M has a 3-cycle 2-cover.

	The definition of flow has no natural extension to binary matroids, whereas cycle cover is defined for general matroids.

	matroids:
	graphic < regular (== unimodular) < binary < realizable (representable?)
	о, есть определение nzf для binary матроидов!
		в статье Cycle Covering of Binary Matroids 
	If a matroid is regular, so is its dual matroid,[1] and so is every one of its minors.[3] Every direct sum of regular matroids remains regular.[4]
	If a matroid is regular, it must clearly be realizable over the two fields GF(2) and GF(3). The converse is true: every matroid that is realizable over both of these two fields is regular
	Минимальный пример матроида, который не regular: uniform matroid U_4^2 (the four-point line)
	есть ещё nzflow для oriented matroids
	Tensions can be defined for any orientable matroid (circuits signed subject to a consistency condition)
	arithmetic matroids

todo:
	начать писать самообучающие посты-конспекты
	про те темы, которые я ещё не знаю,
	например,
	почему nowhere-zero flow polynomial - это многочлен
	inside-out polytopes тоже релевантно
		может это из-за них и прёт log concavity

	кстати,
todo:
	поизучать их надо для мелких графов
	какие там коэффициенты?

	вот такие
	nowhere-zero polynomial:
	petersen: 2400, 19080, 85080(, 278880)
		2400 = 2^5 * 3 * 5^2
		19080 = 2^3 * 3^2 * 5 * 53
		85080 = 2^3 * 3^2 * 5 * 709
		278880 = 2^5 * 3 * 5 * 7 * 83
		f(x) = 1/6 * (x - 1) * (x - 2) * (x - 3) * (x - 4) * (55 * x ** 2 - 251 * x + 480)
		reference: THEORETICAL AND COMPUTATIONAL METHODS FOR LATTICE POINT ENUMERATION IN INSIDE-OUT POLYTOPES
		p. 94
	f(x) = 1/6 * (55 x6 - 801 x5 + 4915 x4 - 16335 x3 + 30670 x2 - 30024 x + 11520)
	55 = mu0, 11520 = mu6
	есть ли log-concavity?
		да, есть, это напрямую следует из результата
		Adiprasito Huh Katz
		ну потому что flow polynomial считает как раз
		ненулевые потоки
		The flow polynomial C_G^*(u) of a planar graph G is related to the chromatic polynomial of its dual graph G^* by
		ну по-крайней мере для планарных графов точно следует

		In fact FC(λ) is the chromatic polynomial of the dual matroid
		ну значит для всех графов ок
		типа
		берём граф
		строим матроид
		переходим к двойственному (это как делается, кстати? это алгоритмично вообще?)
		и у него уже берём изучаем Chow ring
		вместо flats надо брать union of circuits

	mu_{i-1} * mu_{i+1} <= (mu_i)^2?
	да, есть!
	(x - 1) * (x - 2) * (x - 3) * (x - 4) * (x ** 2 - 5 * x + 10)
	это по модулю
	\bar f(x) = x6 - 15 x5 + 95 x4 - 325 x3 + 624 x2 - 620 x + 240
	тоже log-concave
	DONE: проверил все графы из Appendix A - для обоих полиномов
		выполняется log-concavity
	TODO: почему-то в Zk flow polynomial старший член всегда 1

	TODO: интересно ещё понять - насколько там большая степень в многочлене
		кажется, что у кубических графов она примерно одинаковая получится
		для данного числа вершин

	смотрю статью June Huh
	там он смотрит на chromatic polynomial для матроида
	можно ли такой полином определить для ненулевых потоков для матроидов?
	flow polynomial определяется как chromatic polynomial двойственного матроида

	в статье huh, katz такое:
	говорим, что
		realizable matroid - это arrangement of hyperplanes on an r-dimensional projective subspace
		дальше смотрят на closure of the graph of the Cremona transformation

todo:
	ладно, на самом деле нужно вот что:
		нужно придумать понятие dimension d (в данном случае это k из nowhere-zero k flows)
		дальше ввести graded vector space (типа Chow ring of a matroid), где есть
		Poincar ́e duality, hard Lefschetz theorem, Hodge-Riemann relations
		и тогда докажем log-concavity

todo:
	может nowhere zero flows как-то связаны с chip firing?
		там же тоже баланс есть в chip firing
	может есть chip firing polynomial?
	что-то есть:
	an idea conjectured by Biggs and proved by Merino Lo ́pes, that the generating function of the set of recurrent configurations of the Chip-firing game of an undirected graph is equal to the partial Tutte polynomial TG(1,y)

todo:
	добавить в produce_flow такой код
	берём вершину степени > 2
	и выкидываем её
	и смотрим - увеличилось число компонент или нет
	если не увеличилось - это интересный пример (типа графа Петерсена)

todo:
	допустим я хочу такое
	выбрать базис e8
	и клетки вейля
	и чтоб в каждой клетке было своё значение потока

	нумерация корней
	        2
	        |
	1 - 3 - 4 - 5 - 6 - 7 - 8

	матрица картана
	 2  0 -1  0  0  0  0  0
	 0  2  0 -1  0  0  0  0
	-1  0  2 -1  0  0  0  0
	 0 -1 -1  2 -1  0  0  0
	 0  0  0 -1  2 -1  0  0
	 0  0  0  0 -1  2 -1  0
	 0  0  0  0  0 -1  2 -1
	 0  0  0  0  0  0 -1  2

	у баеза вектора такие, например
	 1 -1 0 0 0 0 0 0
	 0 1 -1 0 0 0 0 0
	 0 0 1 -1 0 0 0 0
	 0 0 0 1 -1 0 0 0
	 0 0 0 0 1 -1 0 0
	 0 0 0 0 0 1 -1 0
	 0 0 0 0 0 1 1 0
	-0.5 ...
	порядок наверно другой

веса
      8
5 10 15 12 9 6 3

единицы:
 a  b  c  d  e  f  g  h
-a -b -c -d -e -f -g -h
-c -d  a  b  g  h -e -f
 c  d -a -b -g -h  e  f

e6 и e7 можно канонически отождествить с подсистемами в e8

идея:
	у меня 8 чисел - 1,2,3,4,-1,-2,-3,-4
	хочется на каждую клетку вейля накинуть своё конкретное число
		может ли это быть системой весов на самом деле?
	м. б. это как-то связано с 31 окружностью на сфере

todo:
	попробовать разукрасить сферу в mod5

todo:
	я пробовал пару разбиений сферы
	потом красил грани
	потом проверял тройки
	так вот,
	я на самом деле ищу разбиение сферы на грани, которое "нормально":
	если взять 2 тройки граней, то:
		- или они совпадают,
		- или в пересечении ровно 1,
		- или не пересекаются (но тогда там скорее всего есть какое-то подобие)

1,2,3,4
nz5 from o5cdc:
	1=2-1=3-2=4-3=5-4
	2=3-1=4-2=5-3
	3=4-1=5-2
	4=5-1
	это рёбра
	какие-то повторятся
а ещё есть вершины
1+1=2, 1+2=3, 1+3=4, 2+2=4, в 2 вариациях каждая
тоже какие-то повторятся, каких-то может не быть
и есть ещё соответствующий уникальный казалось бы mod5flow
	хоть там и нету o5cdc
	0=1+1+3=2+2+1=3+3+4=4+4+2
большое разнообразие, придётся перебрать всё
	хотя вроде бы все решения друг в друга переделываются

TODO:
	выписать статьи и результаты:
		про flow-continuous / tension
			a2002, 2006 - DeVos, Nesetril, Raspaud - On Edge-maps whose Inverse Preserves Flows or Tensions
			a2005 - Nesetril, Samal - Tension continuous maps — their structure and applications
			d2006 - Samal - On XY mappings Tension-continuous and related types of mappings
			2008 - Nesetril, Samal - On tension-continuous mappings
			a2012, 2014 - Samal - Cycle-Continuous Mappings — Order Structure
			a2013 - Beck - Enumerating Colorings, Tensions and Flows in Cell Complexes
			2014 - Nesetril, Samal - Flow-continuous mappings – influence of the group
			... tension-flow polynomial ...
		про antisymmetric flow
			the smallest order of an Abelian group M
			such that every orientation of a 3-edge-connected graph has an M-asf
			is between 16 and 2^3 · 3^9 = 157464
		про nowhere-zero mapping
			...
			Colorings and Nowhere-Zero Flows of Graphs in Terms of Berlekamp’s Switching Game
		...

q = a+bi+cj+dk
q^{-1} = 1 / q = (a-bi-cj-dk)/((a-bi-cj-dk) (a+bi+cj+dk))

(a-bi-cj-dk)(a+bi+cj+dk)
a**2+b**2+c**2+d**2
ij=k
jk=i
ki=j
ji=-k


todo:
	беру икосианы
	значит
	противоположные икосианы получают одинаковое значение
	и ещё какой-то поворот тоже
	(потому что 120 поворотов превращаются только в 30 точек)
	и ещё сортирую икосианы по норме
	а ещё проверяю, что новые точки, которые я потихоньку получаю
	с увеличением нормы икосианов
	что они участвуют в каких-то новых тройках
	тогда хорошо, тогда плотность точек - чем-то обоснована
	и тогда надо попробовать вывести несложную формулу
	икосиан -> -4, -3, -2, -1, 1, 2, 3, 4
	и наверно нулевой икосиан в 0


	идея
	из решётки e8 строятся икосианы
	и вроде как можно из них получить точки на сфере
	плотно
	не все, но плотно

	получил точки
	а теперь надо отсортировать по норме, например
	храню точки как восьмёрки
	что я хочу выяснить
	я хочу
		1) нагенерить кучу точек на сфере и глянуть - вылезают ли там тройки точек и в каких количествах
		2) изучить тройки точек - как они на решётке e8 расположены?
	так
	что я имею
	- кватернионов 120, а точек разных только 30
		если беру другую точку за основу - 20
		если рандомную - 
		ну логично, беру центр ребра - 30, беру вершину - по идее будет 12, если не центр ребра - хз - 60?, если центр грани - 20, на рандоме 60
		интересно, что approach == 1 может выдать для рандомных точек граф Петерсена

phi = (1 + sqrt(5)) / 2
1 / phi = 2 / (1 + sqrt(5)) = 2 (sqrt(5) - 1) / 4 = (sqrt(5) - 1) / 2
1 / (2 * phi) = (sqrt(5) - 1) / 4

study:
	nowhere-zero flow polynomial
	а давайте изучим коэффициент при x^5
	у графов без мостов
	этот коэффициент должен соответствовать какой-то алгеброгеометрической штуке
	по аналогии со статьёй Каца, Адипрасито и Хуха
	или не должен, если нет unimodularity

study:
	tension
	очень милая штука на самом деле

study:
	flow-continuous mappings
	TODO: а для матроидов тоже можно?
	TODO: если бы это были embedded graphs, можно было бы
		попробовать неабелевы группы, но чтоб суммы по кругу не менялись
		если рёбра обходить вокруг вершины в определённом порядке
	M - abelian group
	Z2, Z3, ..., Z
	Jaeger conjecture: G --Z2-> P10
	типа Petersen colouring
	окей
	Z? отсюда бы могло бы много чего следовать
	но неизвестно, например,
		Tietze snark не --Z-> P10, не --Z-> K4
		TODO: может P10 --Z-> Tietze? но это нереально вроде бы
	известно, что
		G --Z--> H => G --M-> H для любой абелевой M
		K2,3 --Z--> P10
	есть ещё G --cc-> H (это ровно то же, что --Z2->)
		если G --cc-> K2,3, то
			у графа есть 3-edge-coloring
	говорят для кубических графов релевантны только Z2, Z3 и Z
		для субкубических на самом деле

	Problem 2.8. Is >^f_M WQO for any group M?
	This problem is related to the global conjectures by means of the following:
	Theorem 2.9. If >^f_M is WQO then >^f_M has a single atom.
	вроде бы опровержения нету?
	есть
	well quasi-order (shortly WQO) if it is well founded and it does not contain an infinite antichain
	infinite antichain есть
	значит не wqo

todo:
	проверить, хм
	flow-continuous mapping
	для "снарка" на 12 вершинах и для 4 исключительных графов на 10
	да фигня будет

todo, nope?:
	Lemma 2.1 The following are equivalent properties of a graph G: cc3 3
	• G −→ K2 (here K2 is the graph with two vertices and three parallel edges).
	• G has a 4-NZF
	• (if G is cubic) G admits a 3-edge-coloring
	
	это потому что тут ровно 3-edge-coloring, а не более тонкое 3-nzf
		то есть cycle-continuous - это неправильно?

	хм
	а есть flow-continuous
	это про сохранение потока
	я это не изучал ведь?
	это было в препринте у DeVos, Nesetril,
	но в статье этого нет - нашли контрпример
	Tietze graph не сводится ни к K4, ни к Petersen graph

NAH:
	A distorted rhombicuboctahedron	
	является vertex transitive
	A hyper-truncated cube
	A shallow truncated cuboctahedron
	блин, их много будет!
	я так понимаю там прям можно будет непрерывно варьировать какие-нибудь параметры
	надо попробовать
	Snub dodecadodecahedron
	An isogonal polyhedron and 2D tiling has a single kind of vertex. An isogonal polyhedron with all regular faces is also a uniform polyhedron and can be represented by a vertex configuration notation sequencing the faces around each vertex. Geometrically distorted variations of uniform polyhedra and tilings can also be given the vertex configuration.
	Isogonal polyhedra and 2D tilings may be further classified:
		Regular if it is also isohedral (face-transitive) and isotoxal (edge-transitive); this implies that every face is the same kind of regular polygon.
		Quasi-regular if it is also isotoxal (edge-transitive) but not isohedral (face-transitive).
		Semi-regular if every face is a regular polygon but it is not isohedral (face-transitive) or isotoxal (edge-transitive). (Definition varies among authors; e.g. some exclude solids with dihedral symmetry, or nonconvex solids.)
		Uniform if every face is a regular polygon, i.e. it is regular, quasiregular or semi-regular.
		Semi-uniform if its elements are also isogonal.
		Scaliform if all the edges are the same length.
		Noble if it is also isohedral (face-transitive).


	а ещё есть face transitive!
	Isohedral figure
	The deltoidal icositetrahedron has with 1 type of face.
		но впрочем, я тут почти всё перебрал
		A polyhedron which is isohedral has a dual polyhedron that is vertex-transitive (isogonal). The Catalan solids, the bipyramids and the trapezohedra are all isohedral. They are the duals of the isogonal Archimedean solids, prisms and antiprisms, respectively. The Platonic solids, which are either self-dual or dual with another Platonic solid, are vertex, edge, and face-transitive (isogonal, isotoxal, and isohedral). A polyhedron which is isohedral and isogonal is said to be noble.

	а может мне надо noble polyhedra?
	There are four main classes of noble polyhedra:

	The nine regular polyhedra are also noble.
	Disphenoid tetrahedra. These and the Platonic solids are the only convex noble polyhedra.
	Crown polyhedra or Stephanoids. An infinite series of toroids.
	A variety of miscellaneous examples. It is not known whether there are finitely many, and if so how many might remain to be discovered.
	блин! они не все найдены
	а впрочем - они не convex, там вершины не на сфере
	ну ок


TODO:
	заценить test (gen_points44)
	надо глянуть, какие у снарков группы симметрий,
	потому что вряд ли там у кого ещё есть икосаэдральная симметрия

DONE:
	взять, например, deltoidal hexacontahedron
	взять его 30 вершин
	взять для каждой такой вершины 2 грани, наверно не соседних
	вписать туда нужное значение
	дальше рандомом нагенерить троек на сфере
	и проверить, что везде сумма в ноль
	нет, не везде
	лучшее, что я получил,
	это с rhombic_triacontahedron
	потому что он как диаграмма вороного для точек из графа Петерсена
	но там только 38% нулей

http://dmccooey.com/polyhedra/index.html
Visual Polyhedra

INTERESTING!
	бакминстер фуллер придумал какой-то набор 31 окружности
	комбинируется из 3 многогранников
	https://en.wikipedia.org/wiki/31_great_circles_of_the_spherical_icosahedron
	так вот
	каждый из многогранников задаёт вершины с nz4 потоком
	а в объединении кажется тоже nz4 (я получаю 62 точки, может у меня окружности правда не те)
	ну да, так и есть

EVEN MORE INTERESTING:
	о, найс
	граф Петерсена - это E8
		Binary icosahedral group
		TODO: как это понять? какое соответствие?
	а K4? это E7
	а что такое nz3? это E6 по идее
	E8 - Binary icosahedral group: order 120 = 8 * 15 = Petersen graph
	E7 - Binary octahedral group: order 48 = 8 * 6 = K4
	E6 - Binary tetrahedral group: order 24 = 8 * 3 = 2 точки с 3 рёбрами

	Bipartite density of cubic graphs: the case of equality
	тут показан спектральный анализ графов, изучается насколько подграфы кубического графа
	далеки от двудольности
	всплывают K4, Petersen graph и ещё 4 графа на 10 вершинах
	спектральная теория графов также возникает в E6, E7, E8
	они в статье тоже есть

It seems likely that a graph has an $S^1$-flow if and only if it has a nowhere-zero 3-flow. The "if" direction of this implication isn't hard to show and the "only if" direction looks quite possible.
	второе по-моему доказано?

There are a couple of easy partial results toward the first conjecture which follow from well-known flow/cycle-cover results. First, Tutte showed that every graph with a nowhere-zero 4-flow has a list of three 2-flows $f_1,f_2,f_3 : E(G) \to \{-1,0,1\}$ so that every edge is in the support of exactly two of these flows. Combining these flows and normalizing appropriately gives an $S^2$-flow.

DONE:
	для S^1 есть раскраска в 1, 2
		наверно надо просто на 6 частей разбить

TODO:
	nowhere-zero mappings - может их тоже на сферу отправить?


Двудольным двойным покрытием графа Петерсена является граф Дезарга — K2 × G(5,2)=G(10,3).


TODO:
	может построить какой-нибудь граф на сфере?
	побольше
	какой другой снарк
	надо 54 или 60 вершин

done:
	у Pentakis icosidodecahedron тоже нет nz4 потока
	а что это за снарк тогда?
	результат - тут всё ещё граф петерсена

nah:
	я тут узнал про гомоморфизмы
	SU(2, R) -> SO(3, R)
		не просто гомоморфизмы, а как конечные группы одной в конечные группы другой переходят
	а для C
	SL(2, C) -> SO(3, C)
	вопрос
	может есть какой гомоморфизм группы Петерсена в группу поворотов сферы?
	но это вряд ли
	да, вряд ли, на сфере so(3, r) мало конечных подгрупп

postponed:
	если сферу красить в 1,2,3,4
	будем получать какие-то, хм, гиперграфы?
		да!
	у них есть nowhere zero потоки, интересно?
		да, собственно

TODO:
	после того, как я увидел доказательство про диаграммы дынкина,
	стало реально интересно - типа
	давайте посчитаем число решений (graceful, sequential)
	для этих деревьев
	и для других деревьев с тем же числом вершин
	интересен такой вопрос - если отсортировать
	по числу решений - где окажутся диаграммы дынкина?
	понятно, что пути - самые популярные графы,
	и путь с хвостиком тоже
	мне скорее интересны графы E6, E7, E8

TODO:
	какие посты написать:
		про "взять семейства решений 6c4c" и понять, можно ли их превратить в  o6c4c
		про nz5 -> 5cdc

TODO:
	6c4c -> o6c4c
	treelike snarks
	Matching covers of cubic graphs
	надо попробовать ориентировать решения

TODO:
	может матроиды чем-то можно накрыть?
	In mathematics, the Tutte homotopy theorem, introduced by Tutte (1958), generalises the concept of "path" from graphs to matroids, and states roughly that closed paths can be written as compositions of elementary closed paths, so that in some sense they are homotopic to the trivial closed path.
	A matroid on a set Q is specified by a class of non-empty subsets M of Q, called circuits, such that no element of M contains another, and if X and Y are in M, a is in X and Y, b is in X but not in Y, then there is some Z in M containing b but not a and contained in X∪Y.
	The subsets of Q that are unions of circuits are called flats. The elements of M are called 0-flats, the minimal non-empty flats that are not 0-flats are called 1-flats, the minimal nonempty flats that are not 0-flats or 1-flats are called 2-flats, and so on.
	A path is a finite sequence of 0-flats such that any two consecutive elements of the path lie in some 1-flat.
	
	это очень странное понятие пути,
	типа если по-простому, то берём цепи, и берём множества вида "объединение 2 цепей"
	и путь - это, хм, по факту просто набор цепей
	не совсем, но почти

TODO:
	PPDC можно попробовать глянуть
	для "эйлеровых" графов
	если я это ещё не сделал
	типа в каждую вершину втекает столько же, сколько из неё вытекает рёбер
	там будут контрпримеры, да, типа тех же K3 и K5
	а у antiorientedPPDC вроде бы K4 был контрпримером?

	Update: Danny Calegary pointed out a bird-eye similarity between Keevash’s strategy and the strategy of the recent Kahn-Markovic proof of the Ehrenpreis conjecture http://arxiv.org/abs/1101.1330, a strategy used again by Danny and Alden Walker to show that random groups contain fundamental groups of closed surfaces http://arxiv.org/abs/1304.2188.

	а может мне стоит поизучать другие обобщения графов?
	типа steiner triple systems?
	или какие-нибудь матрицы?
	там ведь тоже полно дизайнов
	заодно может PPDC смогу обобщить?

	A Steiner system with parameters (n,q,r) is a set S of q-subsets of an n-set X
	|X|=n, |s|=q, s \in S
	such that every r-subset of X belongs to exactly one element of S
	так, ну здесь каждый элемент накрывается 1 раз
	мне надо 2
	или же надо понять, как вот эта 1 связана с ориентацией чего-либо

	More generally, we say that a set S of q-subsets of an n-set X
	is a design with parameters (n,q,r,λ)
	if every r-subset of X belongs to exactly λ elements of S
	так, ну вот здесь можно сделать двойное покрытие

	There are some obvious necessary ‘divisibility conditions’
	for the existence of such S

	It is not known who first advanced the ‘Existence Conjecture’ that the divisibility conditions are also sufficient, apart from a finite number of exceptional n given fixed q, r and λ

	может типа
	sets и subsets - это про F1? и можно как-то на другие поля перекинуть?


DONE: Ландо - Связаны ли матроиды с узлами?
	я уже смотрел!
а ещё начал и не закончил
Ardila - Hopf Algebras and Combinatorics
Ardila - Coxeter Groups
	Federico Ardila: Enumerative Combinatorics
	Federico Ardila: Hopf Algebras and Combinatorics
	Federico Ardila: Coxeter Groups
	Federico Ardila: Matroids
	Federico Ardila: Polytopes
	Federico Ardila: Combinatorial Commutative Algebra
	Matroids as a Theory of Independence by Federico Ardila
	

Incidentally, the f-vectors are also unimodal, but only up to dimension 19. There are non-unimodal f-vectors in dimension 20.
	Björner's Theorem (Theorem 1) shows that the f-vectors are increasing up to floor(d/2) and decreasing past floor((3d-1)/4). This gets you up to d = 10 since 3(10 - 1)/4 = 6.75. He managed to extend this to up to d = 15 by case by case checking (loc. cit.). A counter-example for d = 20 were discovered by Björner and Lee independently.
	https://projecteuclid.org/download/pdf_1/euclid.bams/1183547999
	Jürgen Eckhoff, in a paper titled Combinatorial properties of f-vectors of convex polytopes (Normat 54, 146–159 (2006)) extended Björner's unimodality result up to d = 19. I can't get my hands on that paper but this is all covered in Ziegler's book Lectures on Polytopes (section 8.6). A proof is sketched in Ziegler's book for d <= 10 (i.e. Björner's Theorem) and the counter-examples but Ziegler points the reader to Björner's and Eckhoff's articles for the d <= 15 and d <= 19 results respectively.
	The counter-example in dimension 20 has 4 203 045 807 626 vertices. Ziegler's book also mentions a counter-example on just 1320 vertices but for d = 30.

DONE:
	можно ли покрыть граф Петерсена чисто чётными циклами, 2 раза?
	если да, то можно ли на них накинуть ориентацию или антиориентацию?
	там 30 рёбер, циклы или длины 6, или 8, если циклов 5 или больше, то уже слишком много накрою
	так что нельзя даже без ориентации

план
d	1. поправляю код в o6c4c, чтоб по флажку он мог дублировать слои
	2. пишу код канонизации хордовой диаграммы
	3. пишу генератор всех связных хордовых диаграмм на нужном числе вершин, сверяясь с канонизатором, что я не нагенерировал лишнего
		есть быстрый алгоритм, и даже код, но я забью, там надо уметь в репрезентацию графа
		хотя мысль правильная
		по идее и репрезентация сама несложная
		там просто выписываются длины хорд
		да, пускай у нас n хорд, тогда имеем 2n вершин, n длин, которые по 2 раза указаны в дополненном виде
		идём против часовой стрелки и выписываем длины хорд
		8 хорд быстро генерит, это 16 вершин
		мне кажется хватит вполне
	4. написать код по генерации диаграмм из четырёхчленного соотношения
	4. дальше надо будет разобраться со всеми линейными уравнениями, которые возникнут по ходу дела.

TODO:
	HIST - это trivalent tree

It shouldn't be too hard to find some necessary conditions and some sufficient conditions, e.g., complex conjugation acts on dessins by reflection, so a dessin defined over Q should certainly have a mirror symmetry.


TODO:
	кстати, интересный вопрос
	существуют ли ocdc, которые не o5cdc?
	наверно да, но интересно глянуть пример

TODO: modular edge-graceful labeling
	1991 conjecture - all trees
	proven
	extended to all nontrivial connected graphs


core of Trop X is bridgeless


Let G be trivalent, 2-edge-connected, with no multiple edges (or returning edges). Write
S := Sym•H0(ω) =∼ Sym•H1(G, C)
S 􏰀→ 􏰂T := Sym•Cochains1(G, C)
R = H0(ωn)
удивительно
что это вообще


Theorem 23 ([CV11]). Let X1 and X2 be two stable curves with bridgeless dual graphs.
(1) Assume that Jac(X1) ∼= Jac(X2). Then
(a) (X1ν , ν−1(sing(X1))) ∼= (X2ν , ν−1(sing(X2)));
(b) GX1 ≡cyc GX2 .
(2) Assume GX1 and GX2 are 3-edge connected. Then Jac(X1) ∼=
Jac(X2) if and only if X1 ∼= X2.
Consequence. The restriction of τ to curves with bridgeless dual graph has finite fibers.

“p-adic Riemann surfaces” (for the experts: Berkovich curves)

Suppose S is a complete hyperbolic Riemann surface of finite area. S has a finite number of cusps (this follows from Gauss- Bonnet theorem or from Shimizu-Leutbecher theorem 2.2.2). We may build a conformal compactification of S as follows: We find pairwise disjoint neighbourhoods of the cusps, such that each neighbourhood is conformally equivalent to a punc- tured disk, and we fill in the missing point in each punctured disk. The conformal structure on the filled-in disk is unique, by the Uniformization Theorem (see appendix C). Thus, we get a compact Riemann surface in which S is conformally and densely embedded.

In other words, symmetries of the graph Γ are reflected in symmetries of SC(Γ).
прикольно

а, может и несложно
Theorem 2.4.1 (Uniformization Theorem). Every connected Riemann sur- face X is conformally equivalent to X/A, where X is the universal cover of
X and A is a subgroup of Aut(X) acting discontinuously on X. Moreover, if X is not the Riemann sphere, the plane, the punctured plane or a torus then X is the upper-half plane 1HI with A a subgroup of PSL(2, JR.).


интересный ещё вопрос висит в голове - переносится ли Риман-Рох в какую-либо из сторон?


The tropical plane trop(X) is the cone over the Petersen graph

тор с 10 проколами

A common conjecture is that there is no bound on the largest possible rank for an elliptic curve.
а может снарки могут помочь в этом?

TODO:
	хм
	embedded граф Петерсена,
	он же на торе живёт
	но не факт что коэффициенты будут рациональны
	то есть не факт, что это эллиптическая кривая с рациональными коэффициентами
	это же эллиптическая кривая получается?
	А какая?

	BROOKS, R. and MAKOVER, E. (2004). Random construction of Riemann surfaces.

	интересно ещё, что есть ведь и неориентируемые поверхности
	а функции Белого - они вроде как только про ориентируемое
	называются Klein surfaces

remarks:
	я всё пытаюсь понять, значит
	берём кубический граф
	склеиваем из него риманову поверхность, с каким-то числом каспов
	дальше конформно компактифицируем - получаем поверхность белого
	поверхность белого вроде как отвечает какому-то рандомному графу, не?
		например дереву
		надо тогда повычислять эти графы
	если граф не bridgeless - то одна из граней проходит по ребру дважды
		это даёт что-нибудь?

	в 3ей лекции ДрорБарНатана было интересное классическое рассуждение о том,
		как мы хотим строить инварианты узлов
		как алгебры, которые должны удовлетворять движениям рейдемейстера

riemann surfaces
vs
3-regular (cubic) graphs
как выясняется
там кажется нет совпадения по числам
но есть неравенства вроде как
или асимптотическое поведение

cx_vec eigval = eig_gen( X ) 

eig_gen( eigval, X ) 

eig_gen( eigval, eigvec, X )
Eigen decomposition of dense general (non-symmetric/non-hermitian) square matrix X

The eigenvalues and corresponding eigenvectors are stored in eigval and eigvec, respectively

Examples:
mat A = randu<mat>(10,10);

cx_vec eigval;
cx_mat eigvec;

eig_gen(eigval, eigvec, A);


vec eigval = eig_sym( X ) 

eig_sym( eigval, X ) 

eig_sym( eigval, eigvec, X ) 
eig_sym( eigval, eigvec, X, method )
Eigen decomposition of dense symmetric/hermitian matrix X

The eigenvalues and corresponding eigenvectors are stored in eigval and eigvec, respectively

The eigenvalues are in ascending order

Caveat: there is currently no check whether X is symmetric

Examples:
// for matrices with real elements

mat A = randu<mat>(50,50);
mat B = A.t()*A;  // generate a symmetric matrix

vec eigval;
mat eigvec;

eig_sym(eigval, eigvec, B);


// for matrices with complex elements

cx_mat C = randu<cx_mat>(50,50);
cx_mat D = C.t()*C;

   vec eigval2;
cx_mat eigvec2;

eig_sym(eigval2, eigvec2, D);


TODO:
	у римановой поверхности есть якобиан
	у графа тоже есть якобиан
	давай сравним их

Theorem 1.10.5. A Riemann surface can be constructed out of a 3-regular graph if and only if it is a Belyi surface.

так, вернусь к диаграммам
какой план
1. фиксирую число вершин, генерирую все возможные кубические графы

TODO:
	While studying the first eigenvalue of the Laplacian on hyperbolic Riemann surfaces, Brooks and Makover developped a model that takes as input an oriented cubic graph and outputs a compact, finite-area Belyi surface.
	o5cdc задаёт на каждой вершине какую-то из ориентаций
	давай по o5cdc строить riemann surfaces и изучать их свойства
	http://www-personal.umich.edu/~stevmatt/belyi_surfaces.pdf
	или наоборот - давай я гляну - какие из riemann surfaces - bridgeless, а какие нет

	TODO: в статье 10.1.1.7.1406 тоже строится соответствие
	3-regular graph - riemann surface

TODO:
	безумная идея
	o6c4c как аналог yang-baxter equation
	навряд ли, впрочем - в YBE какой-то порядок важен перемножения

TODO:
	а ещё есть STU-relations
	с их помощью можно было бы связать вообще все возможные виды циклов в кубических графах

TODO:
	all circle bundles on compact Riemann surfaces admit the structure of a closed Sasakian 3-manifold (converse is somewhat true also)
	In differential geometry, a Sasakian manifold (named after Shigeo Sasaki) is a contact manifold (M, \theta) equipped with a special kind of Riemannian metric g, called a Sasakian metric.
	ещё есть
	A Seifert fiber space is a 3-manifold together with a "nice" decomposition as a disjoint union of circles. In other words, it is a S^{1}-bundle (circle bundle) over a 2-dimensional orbifold. Most "small" 3-manifolds are Seifert fiber spaces, and they account for all compact oriented manifolds in 6 of the 8 Thurston geometries of the geometrization conjecture.


про плоскость и про гиперболическую плоскость
идея такая - берём просто все окружности единичного радиуса
	ориентированные одинаково
	это похоже на ocdc
или альтернативно - используем обе ориентации
	это уже похоже на o6c4c

Foliations of Three-manifolds which are Circle Bundles. Front Cover. William P. Thurston. University of California, Berkeley, 1972 - 134 pages.
[math/9712268] Three-manifolds, Foliations and Circles, I - arXiv
Foliations : What's next after Thurston - Cornell Math
On foliated circle bundles over closed orientable 3-manifolds
Danny Calegari 3, Taut foliations and universal circles
Universal circles for quasigeodesic flows
Foliations and connections
Taut foliations, left-orderability, and cyclic branched covers
Topology of the Generic Hamiltonian Foliations on the Riemann ...
Meromorphic quadratic differentials and measured foliations on a ...


значит так
возможно в непрерывном случае это просто
	берём все возможные геодезические
но с другой стороны это скучно
	чем
геодезические могут быть бесконечной длины, например
	я бы хотел ограничиться конечными циклами
	Measured geodesic laminations are a natural generalization of simple closed curves in surfaces, and they play a decisive role in various developments in two-and three-dimensional topology, geometry, and dynamical systems
	но замкнутых геодезических кажется маловато будет
подозреваю, что таким вопросом никто не интересовался ещё
	интересно, есть ли название для таких систем кривых
	и есть ли такая система на торе
	может это Hamiltonian Foliations?
	может как-то связано с integrability?
и есть ли непрерывный аналог деревьев на многообразиях
	train tracks?


There are several famous conjectures in graph theory, which deal with double covers:
- cycle double coverings
	5-cycle double cover for bridgeless graphs
	berge-fulkerson (double covering with matchings or 6-covering with full cycles) for bridgeless cubic graphs
- tree double coverings
	examples: graceful labeling, harmonious labeling, haggkvist, graham-haggkvist
And we also have a theorem: perfect path double cover for (connected) graphs

Now, when we orient these coverings, we get corresponding single coverings. They are single in the sense that we use every edge in each direction once:
- oriented 5-cycle double cover
- oriented 6-cycle 4-cover (okay, here we actually cover every edge twice in each direction, but originally here we covered every edge 4 times)
- beta+ labeling
- oriented graham-haggkvist
- oriented perfect path double cover (here it's a conjecture, not a theorem)

My question is, do you know other examples of oriented coverings? E. g., maybe there's an analog in Riemann surfaces, if we cover them with cycles (maybe closed simple loops) in every possible direction once?

Может для римановых поверхностей это не очень интересный вопрос?
Типа, берём евклидову плоскость, берём на ней все возможные прямые, и накрываем в обе стороны, каждая точка будет накрыта во все стороны
Берём сферу, берём все возможные большие окружности, и накрываем в обе стороны
Берём гиперболическую плоскость, и наверно тоже накрываем всеми возможными прямыми во все возможные стороны

Здесь прямые - это "циклы", значит плоскость не прокатывает, её надо компактифицировать, значит я рассматриваю только компактные примеры,
хм,
странно,
если компактифицировать гиперболическую плоскость, то мы вроде бы получим риманову сферу, и её умеем накрывать циклами

прямые/большие окружности - это ещё и геодезические

Правда ли, что меня интересует скорее что-то типа
foliation of sections in circle bundle?
не, мне нужен tangent bundle
foliations on tangent bundle наверно
	section of tangent bundle - это vector field
	мне нужен набор векторных полей, такой, что каждая точка каждым направлением покрыта ровно 1 раз
	хм, правда тут несостыковка со сферой
	потому что там я смотрю на большие окружности
	а в vector field'ах сферы всегда есть точки с нулевым вектором
ой лол, мне и правда нужен principal U(1)-bundle / circle bundle, а не tangent bundle, если уж на то пошло
	чтоб не было нулей
но всё равно, непонятно с аналогией немного
	если брать cdc - то там слои - это циклы, а не sections
	если брать 6c4c - то там слои - это и правда sections, вот только накрываю я дважды
	если брать деревья в graham-haggkvist - то в принципе это и правда sections вроде, только надо на дереве выделить какую-нибудь ещё вершину, а-то неудобно как-то
	ну и да - пример с двумерной сферой - она не раскладывается в секции, но раскладывается в большие окружности


возможно то что я ищу называется regular foliations on circle bundles
	мб with closed leaves
	или compact leaves


If G is a Lie group, and H is a Lie subgroup, then G is foliated by cosets of H. When H is closed in G, the quotient space G/H is a smooth (Hausdorff) manifold turning G into a fiber bundle with fiber H and base G/H. This fiber bundle is actually principal, with structure group H.


Вообще такая ремарка - если я ищу непрерывный аналог этих накрытий, скажем, для римановых поверхностей, то я в теории должен накрывать циклами, и накрывать в каждом направлении 1 раз
	не является ли это собственно circle bundle'ом?
и заодно мы получаем, что аналогия с теорией чисел и с теорией групп не очень работает, так как там нет ориентации никакой



TODO:
	короче
	страничка про диковинные снарки

	done:
		правда же, что не любое идеальное паросочетание
		можно заюзать в o6c4c? в 6c4c?
		правда

	TODO:
		по каждой гипотезе написать минимальный контрпример

	DONE:
		есть ли снарки среди графов с повторяющимися рёбрами?
		или же конструкция вида >d-a=b-c< можно заменить на что-то другое без потери общности?
		пока что неочевидно, но
			в 5cdc, o5cdc, 6c4c, o6c4c будет использоваться цикл из 2 рёбер обязательно
		>d-a-b-c<
		    \|
             e
        хм, получается есть ещё одна вершина что ли, с таким удвоением
        весело
        а может так переделать?
             f
            /|\
        >d-a | b-c<
		    \|/
             e
        я пришёл к выводу, что можно такие графы не рассматривать особо,
        или же считать их графами с меньшим числом вершин,
        потому что этот цикл длины 2 легко выкидывается,
        и тогда у нас уменьшается степень вершин a и b на 1,
        и их можно выкинуть
        >d-a=b-c< => >d-c<

    TODO:
    	изучать примеры bridgeless class 2 графов вообще, не только кубические

TODO:
	вопрос
	если взять граф, который красится в 3 цвета, рёберно
	то вообще я могу по одному слою o6c4c и знанию о раскраске восстановить остальные 5 слоёв
	могу ли я что-то подобное проделать, имея 1 слой o6c4c и nz5?

TODO:
	рассматриваю графы с гамильтовым циклом
	типа подход
	перебираю не графы, как я сейчас делаю
	а сами диаграммы хордовые
	но не суть
	по диаграмме можно однозначно восстановить граф
	по диаграмме сразу получаю раскраску графа в 3 цвета
	по раскраске - o6c4c и ещё 2 диаграммы, которые смежны с данной
	так, и?

TODO:
	надо глобально выписать ещё раз
	список всех задач которые я хочу глянуть
	например
	ppdc (закодить)
	cayley graphs (хочется примеров)
	4-term relation (изучаю)
	tree packing (gyarfas-lehel conjecture)
	edge-graceful (нужен write up)
	история про graham-haggkvist conjecture (альтернированные по цвету цепочки рёбер для k=3)
	spectral graph theory? (типа есть связь между 2-edge-connectedness и вторым спектральным числом; точнее не совсем; там может быть есть связь, может нет; по-крайней мере, если выполняется условие на второе число, то граф автоматически без мостов, не понятно, верно ли это в обратную сторону)
	изучить bridgeless графы с повторяющимися рёбрами
	поискать примеры, где одни классы объектов накрываются другими классами объектов
		в теории чисел - это разложение на простые числа
			здесь правда число накрывается 1 раз ровно
		в группах - это разложение на cosets
			здесь правда группа накрывается 1 раз

		это же история не только про designs?
		мне кажется, например, что довольно актуальным здесь будет Hopf fibration
		circle bundles / principal U(1)-bundles?
			только здесь накрывается в 1 слой всё, а мне обычно интересны накрытия в 2 слоя
		или это foliations?


TODO reading:
	кстати
	вот оно
	вот как эта штука называется
	In [4] Papadimitriou proposed to study the complexity of search problems for total functions, in which the existence of a solution is guaranteed via simple combinatorial arguments, but no efficient algorithmic solutions are known. See also [3, 5, 1] for other related works.
	про complexity для nz5, cdc, graceful labeling и прочее
	в перспективе
	если будет утвердительный ответ
	4. C. Papadimitriou, On graph-theoretic lemmata and complexity classes, in ``Proc. 31st Annual Symposium on Foundations of Computer Science, 1995,'' pp. 794􏰈801.
	3. C. H. Papadimitriou, On inefficient proofs of existence and complexity classes, in ``Proceedings of the 4th Czechoslovak Symposium on Combinatorics'' (M. Fiedler and J. Nesestril, Eds.), Soc. Czech. Math. and Phys., 1991. [Ann. Discrete Math., to appear]
	5. C. Papadimitriou, On the complexity of the parity argument and other inefficient proofs of existence, J. Comput. System Sci. 48 (1994), 498􏰈532.
	1. P. Beame, S. Cook, J. Edmonds, R. Impagliazzo, and T. Pitasi, The relative complexity of NP search problems, in ``Proc. 27th Annual ACM Symposium on the Theory of Computing, 1995,'' pp. 303􏰈314.

	то есть
	известно существование для всего подкласса объектов (графов)
	но неизвестен алгоритм построения решения


TODO:
	n=14
	известно, что 0 как функция (или любая другая константа)
	удовлетворяет 4-term relation и o6c4c
	но хочется большего, понятное дело
	вопрос такой - как много нулей я могу зафорсить по диаграммам?
	например - беру 20 разных графов и всячески изучаю все получаемые циклы и соотношения на них

TODO:
	беру граф
	беру цикл
	перебираю 2 соседние хорды
	перестраиваю их 5 разными способами, получаю ещё 5 диаграмм
	кручу каждую из них и ищу их среди тех, что есть
	если нахожу 3 совместимых - объявляю, что нашёл 4-term relation
	и изучаю его


TODO:
	10 + 12 + 15 + 15 + 10 + 12 = 74
	cycles:  883151 1005403 1097595 1549239 1826476 2026740
	10 + 12 + 12 + 12 + 13 + 12 = 71
	cycles:  883151 1005403 1162159 1546039 1765112 2026740
	10 + 13 + 12 + 12 + 13 + 10 = 70
	cycles:  883151 1008603 1359223 1546039 1765112 1826476
	12 + 13 + 12 + 12 + 10 + 12 = 71
	cycles: 1005403 1008603 1162159 1359223 1826476 2026740
	rel0: 1097595 1549239
	rel0: 1162159 1162159 (лол)
	rel0: 1008603 1765112

almost DONE (надо нарисовать циклы на бумажке):
	n=14
	изучить граф
	full cycles: 16
	o6c4c count: 2
	rel0: 26; rel2: 0
	intersections:
	10 + 14 + 10 + 14 + 10 + 10 = 68
	cycles: 906995 977788  1343219 1559869 1784719 1816014
	10 + 17 + 10 + 17 + 10 + 10 = 74
	cycles: 906995 1035069 1343219 1502588 1784719 1816014
	кажется здесь будет то же, что и в примере ниже
	rel0: 977788 1559869
	rel0: 906995 1343219
	да, та же ситуация


almost DONE (надо нарисовать циклы на бумажке):
	n=14
	изучить граф

	full cycles: 14
	o6c4c count: 2
	rel0: 14; rel2: 20
	intersections:
	16 + 11 + 16 + 11 + 11 + 11 = 76
	cycles: 478205 949867 1545150 1699285 1815767 1900330
	15 + 11 + 15 + 11 + 11 + 11 = 74
	cycles: 494590 949867 1528765 1699285 1815767 1900330
	разница в первом и третьем циклах
	478205
	rel0: 478205 1545150
	rel0: 478205 478205
	rel2: 478205 1528765
	rel2: 478205 494590
		прикольно, эти циклы в 16 и 15 связаны через 4-term походу
		цикл в 16 совпадает сам с собой ещё
	rel2: 494590 1545150
	rel0: 494590 1528765

	получаем
		c1+c2+v=k
		c3+c4+v=k
		c1=c2, c3=c4
		c1=c3 тоже
		4-term relation здесь не вылезет
	но по-крайней мере вылезло равенство,
	которое явно говорит, что число пересечений хорд - это не инвариант
	а других интересных соотношений в этом графе нет (хотя я не расмматриваю o6c4c с повторяющимися слоями, возможно зря)
		

TODO:
	или во,
	можно поизучать в таком виде
	беру o6c4c решения на гамильтоновых циклах
	и требую совпадения по графам
	а дальше смотрю, какие соотношения можно вытащить на самих диаграммах
	помимо 4-term relation

	идея даже такая
	беру просто граф один,
	где куча разных решений,
	и куча значений инварианта
	строю матрицу линейных зависимостей попарных
		а перед этим проверю, что решения вообще хоть как-то связаны через 4-term relation'ы
		а-то неинтересно будет
	и проверяю совместимость матрицы

	а ещё интересно глянуть - когда циклов немного, и есть куча комбинаций в 6 циклов

DONE:
	как понять, что 2 слоя близки друг к другу? (1 перестановка нужна всего)
		нужно одно из решений проворачивать всячески
		и нужно типа сравнить пары рёбер
		в теории в обоих решениях останется 2 пары рёбер, с одинаковыми 4 числами
		и 2 числа из этих 4 - соседи
		и кажется это достаточное условие
		ура, такое несложно закодить
	готово
	кажется 4-term вообще не встречается
	а вот совпадающих диаграмм дофига, как так

TODO:
	ну или попробовать
	построить инвариант
	просто по тому,
	как выглядят o6c4c
	вдруг получится

TODO:
	в книге указан ещё инвариант
	\chi(t)
	хроматический многочлен intersection графа для данной диаграммы
	в принципе я могу и его глянуть
	и заодно flow(t)
	и вообще всякие tutte polynomial тоже
	хотя intersection graph наверно с большой вероятностью будет планарным,
		а там вычисление в P

	я правда не представляю как это кодить вообще

DONE:
	посчитал intersection число
	для графов с гамильтоновыми o6c4c решениями
	нашёл вроде бы граф на 14 вершинах с разными инвариантами
	n=14
	full cycles: 18
	o6c4c count: 9
	intersections:
	13 + 13 + 11 + 12 + 13 + 13 = 75
	13 + 11 + 11 + 14 + 13 + 14 = 76
	13 + 11 + 12 + 13 + 13 + 13 = 75
	13 + 11 + 11 + 14 + 13 + 14 = 76
	13 + 13 + 11 + 13 + 13 + 12 = 75
	13 + 11 + 12 + 11 + 12 + 13 = 72
	13 + 13 + 11 + 11 + 12 + 12 = 72
	14 + 14 + 11 + 11 + 13 + 13 = 76
	11 + 13 + 11 + 12 + 12 + 13 = 72

	full cycles: 13
	o6c4c count: 4
	rel0 count: 3; rel2 count: 0
	intersections:
	13 + 12 + 12 + 12 + 10 + 12 = 71
	13 + 10 + 12 + 12 + 13 + 10 = 70
	12 + 10 + 15 + 15 + 10 + 12 = 74
	12 + 10 + 12 + 12 + 13 + 12 = 71

	full cycles: 14
	o6c4c count: 2
	intersections:
	11 + 11 + 16 + 16 + 11 + 11 = 76
	11 + 11 + 15 + 15 + 11 + 11 = 74

	full cycles: 16
	o6c4c count: 2
	intersections:
	10 + 10 + 17 + 10 + 10 + 17 = 74
	10 + 10 + 10 + 14 + 14 + 10 = 68

	но вообще очень часто это одно и то же число

	лол, я не все o6c4c рассматриваю
		я не дублирую слои
		то есть тут ещё и все 6 циклов разные
		с таким ограничением кажется меньше 14 вершин не получится

TODO:
	тут классная штука вылезла
	есть алгебра для
	multiloop chord diagrams
	это в точности слои для o6c4c решений
	хочется понять, что я буду получать в этих решениях при
	вычислении этих алгебр

Let ν be number of intersections of chords in a chord diagram (or, if you like, the number of edges in its intersection graph).
мило
можно попробовать глянуть что получится
хотя постой
как эта штука считается для разъединённых циклов?

TODO:
	берём граф
	берём его решения dominating circuits,
	где есть ориентация на вершинах (как её ввести?)

	A map from the Jacobi diagrams to the positive integers is called a weight system. The map extended to the space A(X) is also called the weight system. They have the following properties:

	смотрим на веса этих диаграмм

TODO:
	берём граф
	берём o6c4c решение
	A multiloop chord diagram is a cubic graph C in which a collection of disjoint oriented cycles is specified that cover all vertices. These cycles are called the Wilson loops, and the remaining edges (that form a perfect matching on the vertex set of C) are called the chords.
	берём weight system
	Let C denote the collection of multiloop chord diagrams. Basic for Vassiliev knot invariants (cf. [4]) is functions f on C that satisfy certain linear relations, called the 4-term (4T) relations.
	считаем сумму для каждого o6c4c решения

	а чё - для графа петерсена это разве не будет просто что-нибудь умноженное на 6?

TODO:
	oriented berge-fulkerson
	для кого доказано существование bf решений и как?


TODO:
	кажется намечается небольшой research проект
	с одной стороны имеем
		connected chord diagrams and bridgeless maps
	а с другой стороны имеем
		Delta-matroids were introduced by A. Bouchet [4] for the purpose of studying embedded graphs, whence their relationship with (multiloop) chord diagrams is by no means unexpected
		one can define both the first and the second Vassiliev moves for binary delta-matroids and introduce a 4-term relation for them in such a way that the mapping taking a chord diagram to its delta-matroid respects the corresponding 4-term relations
	и ещё имеем
		Some evidence for the existence of such a relationship can be found, for example, in [2], where the Tutte polynomial for embedded graphs has been introduced. The authors show that this polynomial depends on the delta-matroid of the embedded graph rather than the graph itself and satisfies the Vassilev 4-term relation.

TODO: мб bridgeless map vs двойные покрытия на графе без мостов?
	когда у нас настоящее двойное покрытие
	получаем bridgeless map
	обладает ли chord diagram каким-нибудь интересным свойством при этом?

TODO: bridgeless map <-> connected chord diagram
	чему соответствует поток на map'е или двойное покрытие циклами?


кстати мило
In this paper, we introduce the Jones polynomial of a graph G = (V, E) with k components as the following specialization of the Tutte polynomial
We first study its basic properties and determine certain extreme coefficients. Then we prove that (−∞,0] is a zero-free interval of Jones polynomials of connected bridgeless graphs

TODO:
	если немного расширить понимание
	oriented cycle double cover
	включить туда не только cycles, но и euler tours
	хотя это может плохо кончиться
	но тогда STU relation перекидывается на такое
	и получаем алгебру
	для графа петерсена правда ок

DONE:
	Сhinese characted diagram - это почти что "кубический граф с выделенной dominating цепью", там ещё добавляется порядок на рёбрах вокруг вершин которые вне цепи
	что про них известно?
	там есть STU relation (и 4-term relation тоже)
	кажется он переносится напрямую на oriented cycle double covers (с dominating circuit)
	прикольно

	это какая-то алгебра намечается? на таких решениях?
	algebra of oriented cycle double covers with dominating circuits

	не, не переносится
	там в U проблема - там перестраиваются циклы,
		и в теории может возникнуть цикл через одно и то же ребро

	но забавно

DONE:
	внезапно
	Topology of Two-Connected Graphs and Homology of Spaces of Knots
	Victor Vassiliev
	но тут правда судя по определению могут иметься висячие вершины
	(то есть это не 2-edge-connected, а 2-vertex-connected)

	PROBLEM 1.To establish a direct corespondence between
	the calculus of two-connected graphs and 
	that of Chinese Character Diagrams, see [BN2].
	Perhaps this corespondence will give us the most natural proof of Theorem 2. The starting point of our construction was the space of all smooth maps M^1 -> R^n. Is there some analog of it behind the Chinese Character Diagrams?
	[BN2] Dror Bar-Natan, On the Vasiliev knot invariants

	хотя понятно, что это не должно помочь с гипотезами
	про покрытия циклами
	потому что в этой всей технологии про узлы
	ребята могут спокойно избавляться от вот этих вершин вне цикла
	а я так не могу


а может быть на самом деле для меня сейчас главный вопрос такой
стоит ли вообще пытаться продолжать заниматься математикой?
цельной картины я всё равно не вижу и не увижу,
а не занимаясь её профессионально, я всё равно вроде бы ни за чем не успею
и ничего не придумаю
> профессионально
в том смысле, что в основном ведь там большие всякие
сложные работы
которые я всё равно читать не буду
а без них вроде бы как часто никак и никуда

то есть
хочется поставить какую-то цель на самом деле относительно математики


ну и придумать кейс
для своей визуализации
например, хочу, например, чётко понимать, как устроен
kontsevich integral
что мне для этого надо узнать?
вообще хрен знает что бы я хотел узнать
quantum field theory?
	почему там часто возникают комбинаторные объекты в виде решений,
	и мне это очень импонирует
или вот, отличный кейс
David Cimasoni - Coverings and Spanning trees
	там звучат слова про монодромию, connection,
	а я ничего не понимаю
или например - Riemann-Roch theorem for graphs
	я примерно понимаю формулировку и не знаю идеи док-ва


Remark 1.2. Note that any concrete method of specifying a modular subgroup can easily be converted to permutation form. For instance, one way in which a modular subgroup Γ might be specified is by a list of generators. Such a list can be converted into permutations as follows: First, use the Euclidean algorithm to express each generator matrix as a product of L’s and R’s, where L and R are the elements in (1.4). Then enumerate the cosets of Γ in terms of these generators and presentation (1.3). This coset enumeration is easily converted into appropriate permutations L and R. Similarly, any reasonable membership test for Γ can be used to enumerate the cosets of Γ, with the same results as before.
L, R = S, T


G2 = PermutationGroup(['(1,3,5), (4,7,9), (10,11,13), (15,14,17), (6,16,19), (2,21,23), (8,27,25), (12,29,24), (18,22,28), (20, 30, 26)', '(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23, 24), (25, 26), (27, 28), (29, 30)'])
G2.order()
214277011200
https://oeis.org/A032031
wreath product of the symmetric group S_n and the elementary Abelian group (C_3)^n
(3n)!!! = 3^n*n!
For positive n, a(n) equals the permanent of the n X n matrix consisting entirely of 3's
это разложение на циклы 9-6-5-5-5

G5 = PermutationGroup(['(1,3,5), (6,7,9), (10,11,13), (12,17,15), (16,19,4), (14,21,23), (2,25,22), (20,27,24), (8,29,28), (18,26,30)', '(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23, 24), (25, 26), (27, 28), (29, 30)'])
G5.order()
265252859812191058636308480000000
30!
это разложение на 8-6-6-5-5
на бутылке клейна
получилась вся группа перестановок, наверно из-за неориентируемости бутылки


G6 = PermutationGroup(['(1,3,5), (2,7,9), (10,15,17), (12,18,19), (4,11,13), (6,29,28), (14,24,25), (20,27,22) (8,21,23), (16,26,30)', '(1,2), (3,4), (5,6), (7,8), (9,10), (11,12), (13,14), (15,16), (17,18), (19,20), (21,22), (23, 24), (25, 26), (27, 28), (29, 30)'])
G6.order()
75000
это в проективной плоскости
4! * 5^5


Theorem 1.8 (Classification Principle).
• The subgroup described by a pointed trivalent diagram is the isotropy subgroup of the distinguished edge, and this correspondence is biunivoque.
• As the basepoint is moved, the isotropy subgroup gets conjugated. This way, to any unpointed trivalent diagram one associate a conjuguacy classe of subgroups. This correspondence is again biunivoque.
Demonstration. See [22].
S. A. Vidal. Sur la classification et le d ́enombrement des sous-groupes du groupe modu-
laire et de leurs classes de conjugaison. Pub. IRMA, Lille, 66(II):1–35, 2006. Preprint :
http://arxiv.org/abs/math.CO/0702223.

tetrahedron, belyi function:
f(z) = -64 (z^3 + 1)^3 / (z^3 - 8)^3 / z^3

Indeed, if we quotient the graph by action of the subgroup, we arrive at the so-called Schreier-Cayley coset graph, which remains to be trivalent, but is now finite. In fact, the coset graph is finite if and only if the subgroup stabilizing a node is of finite index; indeed, all connected finite trivalent graphs can be realized in this way. Thus, we can translate the investigation of these graphs - also known as cubic graphs - to that of finite index subgroups of the modular group, a well studied subject in number theory.

In particular, every rooted trivalent map uniquely determines a subgroup of the modular group T ∼= PSL(2, Z)

TODO:
	вот у нас есть набор перестановок
	допустим мы нашли дерево, совместимое с этим набором
	что будет, если я одну из перестановок слегка поменяю,
	чтоб она всё ещё осталась совместимой с остальными?

TODO:
	gyarfas-lehel conjecture
	perfect path double cover

TODO:
	вот думаю
	может имеет смысл объединить весь проект про графы в один единый репозиторий в github'е?
	код будет лежать в ветке master
	блог будет в ветке gh-pages
	дока будет лежать в папке /docs

смотрел видео Звонкина про формулу ELSV
там он приводит алгебро-геометрическое доказательство
формулы Кэли
примерно такое
есть комплексная плоскость
есть многочлен P
в образе этого многочлена имеем k критических точек
возьмём рандомную точку и соединим её с этими критическими точками
получаем звезду
смотрим на прообраз
в прообразе получим k+1, насколько я понял, звёздочек
они будут соединены в виде какого-то дерева
причём пометки сидят на рёбрах
но ок, при этом в прообразе там не k-k регулярный граф совсем, окей
но всё равно интересная конструкция

кстати
number of edge-labeled trees is (k + 1) ^ (k - 2), k edges
	number of vertex-labeled trees of size n is n+1 times larger
	than the number of edge-labeled ones
интересно, сколько edge-labeled (k,k)-регулярных графов

манифест тщетности
в общем
всё тщетно, кажется
ничего нового я вытащить не могу
то есть это было полезное упражнение
но я никуда не продвинулся
предлагаю остановиться

TODO:
	доказательство гипотезы где-то здесь будет
	значит
	будем действовать по аналогии с ppdc
	начинаем с базы
	и дальше нам нужна какая-то индукция
	в качестве исправления графа - мы используем чётные чередующиеся цепочки рёбер
	что нужно - что мы можем провести какую-то последовательность таких исправлений,
	что мы остановимся, а не зациклимся
	нужно какое-то свойство ввести, которое должно уменьшаться со временем

	или же!
	нужно найти такую 2-факторизацию, что какую цепочку ни возьми - ничего хорошего не получится

	что приятно - в дереве число путей - n^2
	то есть если я научусь исправлять пути поменьше, потом побольше - то число итераций будет полиномиально вполне

TODO:
	изучить, чем может помочь операция
	перечередуй рёбра в двух 2-факторах
	по цепочке чётной длины

	причём для пути длины 3 надо попробовать прочередовать
	крайние рёбра этого пути
	а может чуть сложнее, типа надо делать 3 преобразования, возможно

TODO:
	берём путь длины 3
	берём граф с плохой 2-факторизацией для этого пути
	где есть все 6 треугольников
	и ищем 2-факторизацию наиболее близкую к данной, где одна из конфигураций прокатывает,
		где она хороша для данного пути
	близкий - например, один из 2-факторов совпадает, скажем, и там и там
	например: на 4 вершинах - плохая 2-факторизация с 3 несвязными 2-факторами,
		её можно исправить с сохранением любого одного из 2-факторов
	на самом деле кажется, что это будет очень похоже на доказательство из статьи про
	пути длины 3

	что происходит, если мы фиксируем один из 2-факторов:
		мы его можем выкинуть тогда на самом деле
		и рассмотреть граф 2-2-регулярный
	такое ощущение, что это делается за полином, исправление 2-факторов

	такое ощущение тогда, что можно вообще рандомно зафиксировать раскраску дерева
	а 2-факторы на графе потихоньку исправлять,
	чтоб они соответствовали дереву

	хмхм, на бумажке есть контрпример вполне себе

	но в любом случае,
	кажется есть прям явная операция - возьми 2 2-фактора,
		поменяй 2 ребра местами рядом с вершиной,
		а дальше исправь их по цепочке, пока это работает
		и это типа реально цепочка чётной длины, рёбра чередуются как надо по направлению
	а если есть - это клёво, надо это поюзать

DONE (by hand):
	надо вот что проверить
	что есть граф (есть!)
	где в любой 2-факторизации
	есть всегда хотя бы 1 треугольник
	если же всегда найдётся факторизация без треугольников, то это лол
	на 4 вершинах: если есть несвязный 2-фактор, то он же и мешает,
		если же там 3 гамильтоновых цикла, то так не бывает, нет таких декомпозиций
	ну тогда вот

	тогда да, надо научиться именно что расчистить поляну для одной или двух конфигураций,
	чтоб они не образовывали треугольников
	и кажется, что это можно сделать с сохранением одного из 2-факторов

TODO:
	изучить 2 статьи:
		первая - сравнивает разные определения coset graph'ов
		вторая - рассказывает, почему много двоек в разложении в количестве 2-факторизаций
	и мб попробовать заменить группу перестановок на какие-нибудь канонические абелевы группы
	например на циклические группы (хотя сложно, там простота чисел сразу вылезает, неудобно чё-т)

TODO:
	попробую что-нибудь придумать
	для путей длины 3
	типа
	допустим у нас в графе есть 6 треугольников
	ab^-1c(i) = i
	ac^-1b(j) = j
	ba^-1c(k) = k
	bc^-1a(l) = l
	ca^-1b(m) = m
	cb^-1a(n) = n
	хочется перестроить 2-факторизацию


DONE:
	тогда так
	посчитаю число 2-факторизаций

	в общем не очень понятно, но кажется, что двоек достаточно много
	если n == m + 1:
	Number of reduced Latin squares of order n; also number of labeled loops (quasigroups with an identity element) with a fixed identity element. 
	число двоек там растёт так
	3, 6, 10, 17, 21, 28, 35
	в oeis такой последовательности нет

	так, вот это уже интересней
	m=5, n=8:
	[2, 2, 2, 2, 2, 2, 2, 2, 5, 241]
	[2, 2, 2, 2, 2, 2, 2, 2437]
	[2, 2, 2, 2, 2, 2, 13, 13, 29]
	[2, 2, 2, 2, 2, 2, 4903]
	[2, 2, 2, 2, 2, 2, 3, 31, 53]
	[2, 2, 2, 2, 2, 2, 2, 2467]
	[2, 2, 2, 2, 2, 2, 3, 13, 127]
	[2, 2, 2, 2, 2, 2, 5, 991]
	[2, 2, 2, 2, 2, 2, 2, 5, 499]
	[2, 2, 2, 2, 2, 2, 7, 23, 31]
	[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 13]
	[2, 2, 2, 2, 2, 2, 2, 41, 61]
	[2, 2, 2, 2, 2, 2, 2, 2, 7, 179]
	[2, 2, 2, 2, 2, 2, 2, 2, 5, 251]
	[2, 2, 2, 2, 2, 2, 2, 2, 3, 419]
	[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 5, 7]
	[2, 2, 2, 2, 2, 2, 2, 2521]
	[2, 2, 2, 2, 2, 2, 2, 3, 29, 29]
	[2, 2, 2, 2, 2, 2, 2, 2, 2, 631]
	[2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 211]
	[2, 2, 2, 2, 2, 2, 11, 461]
	[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 53]
	[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 17, 19]
	минимум m+1 двойка в разложении есть
	m=4, n=8:
	[2, 2, 2, 2, 73]
	[2, 2, 2, 2, 2, 37]
	[2, 2, 2, 149]
	[2, 2, 2, 2, 3, 5, 5]
	[2, 2, 2, 151]
	[2, 2, 2, 2, 2, 2, 19]
	[2, 2, 2, 3, 3, 17]
	[2, 2, 2, 2, 7, 11]
	[2, 2, 2, 5, 31]
	[2, 2, 2, 2, 2, 3, 13]
	[2, 2, 2, 157]
	[2, 2, 2, 2, 79]
	[2, 2, 2, 3, 53]
	[2, 2, 2, 2, 2, 2, 2, 2, 5]
	[2, 2, 2, 7, 23]
	[2, 2, 2, 2, 3, 3, 3, 3]
	[2, 2, 2, 2, 83]
	[2, 2, 2, 167]
	[2, 2, 2, 2, 2, 2, 3, 7]
	[2, 2, 2, 2, 2, 43]
	[2, 2, 2, 2, 3, 29]
	[2, 2, 2, 2, 89]
	[2, 2, 2, 2, 2, 2, 23]
	[2, 2, 2, 2, 2, 2, 5, 5]
	минимум скатился до m-1
	3, 5: 4, 6
	3, 7: 8 10 12 14 16 22
	5, 7:
	[2, 2, 2, 2, 2, 2, 2, 2, 3, 71]
	[2, 2, 2, 2, 2, 2, 3, 3, 5, 19]
	[2, 2, 2, 2, 2, 2, 2, 2, 5, 43]
	[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3]

DONE:
	кстати, число 2-факторов не факт что чётно
	m=5, n=9
	2687 2688 2689 2690 2691 2692 2693 2694 2695 2696 2697 2698 2699 2700 2701 2702 2703 2704 2705 2706
	бывают даже простые числа


DONE:
	давай так
	беру граф
	и считаю, сколько в нём разных всяких 2-факторов
	идея такая, что если для каждого 2m-графа есть какая-то алгебра,
	то число 2-факторов не должно быть простым числом и вообще
	должно разлагаться в произведение кучи мелких простых чисел

	m=6, n=9
	12006 12012 12014 12016 12020 12022 12024 12028 12030 12032 12036 12038 12040 12044 12046 12048 12052 12054 12056 12060 12062 12064 12068 12070 12072 12076 12080 12088 12096 12102
	12012 = 2*2*3*7*11*13
	12014 = 2*6007
	12016 = 2*2*2*2*751
	12020 = 2*2*5*601

	в общем, такое
	см. манифест тщетности


TODO:
	ладно,
	вот имеем граф
	имеем нумерацию на нём
	можно попробовать описать пространство 2-факторов, например
	это куча-куча всяких разных перестановок
	что это подмножество образует собой?
	каждая из этих перестановок - это derangement, кстати
	так, а если это полный граф, на m+1 вершине, то мы просто получим все возможные derangement'ы

	а, возможно это какой-то типа политоп/polytope
	потому что это похоже на кубический случай, где мы ищем максимальное паросочетание

TODO:
	надо вот что попробовать сделать
	возьмём свободную группу на m элементах
	и попробуем с её помощью описать конкретное дерево
	алгебраически
	например, путь длины 3

The free groupoid on a directed graph is the groupoid whose objects are the vertices of the graph and whose morphisms are finite concatenations of the edges in the graph and formal inverses to them.

This construction is the left adjoint free construction to the forgetful functor that sends a groupoid to its underlying directed graph.


Any group G is the homomorphic image of some free group F(S). Let S be a set of generators of G. The natural map f: F(S) → G is an epimorphism, which proves the claim. Equivalently, G is isomorphic to a quotient group of some free group F(S). The kernel of φ is a set of relations in the presentation of G. If S can be chosen to be finite here, then G is called finitely generated.



считаю сумму длин путей
---: 3
-<: 6

----: 4
--<: 8
><: 12

-----: 5
---<: 10
----: 10
  \

>-<: 16

  /
---: 15
  \

S5: 20

вообще подозрительно похоже как задачка на nullstellensatz
может нет
то есть мысль такая
беру дерево
в нём сколько-то путей есть (максимум n^2)

TODO:
	во, вопрос
	формулируется ли эта штука как-нибудь, скажем, как линейное программирование?
	или как гомологии какие
	типа
	имеем пачку генераторов
	и например
	смотрим на цепочку g1 g2^(-1) g3 ...

	ладно, давай с простого начну
	путь длины 3
	g1 g2^(-1) g3
	как добиться того, чтоб он не схлопывался в треугольник?
	типа мы следим за передвижением единицы

	вот что интересно: я же просто смотрю на 2-фактор как на перестановку
	значит g1 g2^(-1) g3 - это тоже какая-то перестановка
	я хочу, чтоб она оказалась derangement

	It is NP-complete to determine whether a given permutation group (described by a given set of permutations that generate it) contains any derangements.[7]
	забавно, хотя мне это и не нужно вовсе (потому что я всегда получаю всю группу перестановок)

TODO:
	изучить Sabidussi double coset graph'ы

TODO:
	задача
	видимо алгебро-топологическая
	дана группа перестановок G на k элементах
	дана подгруппа H, которая сохраняет 1
	даны m генераторов, которые не сохраняют 1
	получаем 2m регулярный граф (m входящих, m выходящих рёбер)
	вопрос такой - какие деревья возможны, а какие нет?
	что значит возможны
		что не возникнет цикла
	что это значит
		что мы идём по цепочке g1 g2^(-1) g3 ...
		получили цикл
	что это значит
		что стартуем с какой-то вершины H(1n) и мы в неё вернулись
	почему это могло произойти?
		проще всего понять по loop'ам
	а, давай лучше я такой вопрос задам
		могу ли я по форме дерева
		попробовать понять, какие ограничения на генераторы я должен попросить?
		помимо очевидного требования, что они все не сохраняют 1

G: 123, 132, 213, 231, 312, 321
H    : 123, 132
H(12): 213, 231 (будем считать, что мы сначала сделали 12, а потом H)
H(13): 312, 321
не, кажется я не могу так считать:
	короче будем считать, что каждая из вершин отвечает за перестановки, начинающиеся на какое-то определённое число
H    : 123, 132
H(12): 213, 312
H(13): 321, 231
в данном случае я должен считать, что единица сидит в какой-то i'ой позиции

пусть g: (23)
тогда
H -> H
H(12) -> H(13)
ну да, то есть мы должны следить за тем, куда перебегает 1
и нужно почекать n вариантов - как путешествует 1

NOPE:
	можно ещё попробовать попросить такое свойство, что длины всех цепей в каждом из 2-факторов совпадают
	правда получается, что в графе с простым числом вершин я требую наличие кучи гамильтоновых циклов,
	что наверно неправда


In the area of mathematics called combinatorial group theory, the Schreier coset graph is a graph associated to a group G, a generating set {x_i : i in I}, and a subgroup H ≤ G.

The vertices of the graph are the right cosets Hg = { hg : h in H } for g in G.
The edges of the graph are of the form (Hg, Hgx_i).

The Cayley graph of the group G with { x_i : i in I } is the Schreier coset graph for H = { 1_G },(Gross & Tucker 1987, p. 73).

The book "Categories and Groupoids" listed below relates this to the theory of covering morphisms of groupoids. A subgroup H of a group G determines a covering morphism of groupoids p: K → G and if X is a generating set for G then its inverse image under p is the Schreier graph of (G, X).

Every vertex-transitive graph is a coset graph.

есть ещё
Sabidussi double coset graph
Next, we describe another group-theoretic construction, for a special class of vertex- transitive graphs. Let G be a group, let H be a subgroup of G, and let a be an element of G such that a^2 ∈ H. Now define a graph Γ = Γ(G,H,a) by setting
V(Γ)={Hg: g∈G} and E(Γ)={{Hx,Hy}:x,y∈G|xy−1 ∈HaH}

A bouquet af n circles is a graph with one vertex and n edges.

THEOREM 3. A connected regular p vertex graph of degree 2r is a p-sheeted covering space of the bouquet of r circles.

TODO:
	идея
	беру 2m-граф
	смотрю на несколько совместимых с ним Schreier coset graph'ов

	о
	лол
	в статье Gross'а они строются из группы перестановок
	Let G be the group of permutations on the symbols 1,...,p
	generated by the permutations \pi_1, ..., \pi_r
	corresponding to the 2-factors F1,..., Fr.
	Let H be the subgroup of G which fixes the symbol 1.
	Then the graph K is isomorphic to the Schreier coset graph
	for the group G, subgroup H, and generators \pi_1, ..., \pi_r.

	так, это я понял
	зафиксирую порядок вершин
	G известно, H известно,
	вершины в графе - это H, H(12), H(13), ..., H(1k)
	перестановки могут быть всякими, но ограничены структурой графа (здесь никакой новой информации, кажется)
	вопрос такой
	можно ли 2 решения как-то перемножить друг на друга?
	или плавно одно решение переделать в другое
	или быстро понять, по решению, какие деревья возможны, а какие нет?

TODO:
	Graham-Haggkvist-Schreier-Sabidussi conjecture
	GHSS

	каждое решение даёт какой-то группоид (набор 2-факторов)
	можно попробовать наложить каких-нибудь ограничений на эти группоиды,
	например,
	на число элементов в группоиде,
	или на связность группоида
		хотя наверняка он связный всегда будет, потому что у меня граф связный
	или чтоб группа в основе группоида была какой-нибудь особенной
	а может можно посчитать гомологию какую, скажем

Definition 20. (Sabidussi Graph) Given a group G, a subgroup H, and a set D ⊆ G, the Sabidussi graph, Sab(G, H, D), is the directed graph with vertex set cosG(H) and arc set {(Hx, Hy) : xy−1 ∈ D}
A Sabidussi graph will contain no loops provided that D ∩ H = ∅. A Sabidussi Graph is simple if and only if D is closed under taking inverses and connected if and only if D ∪ H generates G. The vertices of the Sabidussi graph are the cosets of the subgroup H in G, and the action of G on the vertices is (G,cos(H)).
Proposition 15 (Sabidussi). Sabidussi Graphs are vertex transitive. Every vertex transitive graph is isomorphic to a Sabidussi Graph.

то есть у нас не просто регулярные графы, а:
  - vertex-transitive graph
  - no loops: D ∩ H = ∅
  - connected: D ∪ H generates G
  - simple: D is closed under taking inverses

FAIL:
	кажется, что
	если взять любое поддерево,
	то copy_count можно сделать равномерным
	но я не знаю, как это закодить в варианте GenByTreeByEdge
	а вариант GenByEdgeByTree всё-таки медленнее

	другое дело, что когда я прошёл по половине (может 3/4) копий, уже можно точно сказать, чему должен равняться copy_count
	на момент проставления всех рёбер данной итерации для всех деревьев
	это типа задачи поиска самого популярного числа в потоке

	можно ещё первые пару ребёр, скажем, генерить через GenByEdgeByTree, а оставшиеся рёбра через GenByTreeByEdge

	хотя постой, кажется это лишние проверки

	да, действительно, то что у нас 2-факторы
	уже гарантирует это всё

TODO:
	поиск доказательства для regular oriented 2-factored graham-haggkvist-schreier conjecture
	а действительно, если б я не был тщеславным, очень разумно назвать гипотезу как
	graham-haggkvist-schreier conjecture

	мотивация для поиска доказательства: есть ощущение, что
	должна существовать какая-то алгебра,
	из-за которой всё так tightly fits together
	вот например,
	ты такой изучаешь узлы,
	строишь диаграммы якоби, а они оказывается
	A Jacobi diagram can be viewed as abstraction of representations of the tensor algebra generated by Lie algebras, which allows us to define some operations analogous to coproducts, counits and antipodes of Hopf algebras.
	впрочем в узлах далеко не надо ходить за примерами какой-либо алгебры
	там и так есть, скажем, движения радемейстера

	в общем
TODO:
	надо поискать какие-нибудь операции теперь
	с этими факторами и прочим
	как минимум есть такое наблюдение:
	если мы построили какое-нибудь одно решение,
	то мы можем взять любое(!) крайнее ребро в дереве и соответствующий 2-фактор в графе
	и удалить их оба
	так мы получим дерево на 1 ребро меньше и граф, снова регулярный

	ура, для начала уже хорошо, что если какой-то вид индукции между решениями

	ещё можно заметить, что такой индукции нет в области graceful labeling

	с другой стороны - в graceful labeling'е есть пара операций:
		- \delta, \delta+1
		- transfer
	можно ли их обобщить для graham-haggkvist-schreier conjecture?
	неочевидно,
	потому что у нас тут очень сильное требование, чтоб дерево не склеилось в графе,
	при смене рёбер,
	инвариант такой, что мы вычисляем 2-факторы по вершинам дерева
TODO:
	проверить graham-haggkvist-schreier conjecture на графах Кэли
	хотя вопрос, что именно я хочу проверить - что можно сделать 2-факторы универсальными?


DONE:
	я наверно забью
	не знаю какая тут может быть правильная формулировка, если честно

	я тут вспомнил
	что у меня был план
	закодить
	Graham-Haggkvist for arbitrary set of m-trees and any 2m-regular graph (where every edge is singleton)
		oriented 2-factor (regular?) arbitrary set of trees haggkvist conjecture
		да и не arbitrary тоже ещё раз поглядеть что получилось
	не  могу найти этот план
	придётся заново его написать

	во-первых что я хочу получить в итоге?
	типа генерирую рандомный набор деревьев,
	кладу их на граф,
	у каждого дерева рёбра покрашены в m цветов,
	каждый из m цветов образует собой цикл в графе,
	вроде бы на ориентацию рёбер рассчитывать не приходится (?)

вроде бы код был такой
что когда я делал декомпозицию графа на одинаковые деревья
я делаю перебор в порядке
t1e1 - t2e1 - ... - tke1 - t1e2 - t2e2 - ... - t1em - t2em - ... - tkem
и для рандомного набора деревьев в данной схеме есть одна проблема:
нужен дополнительный перебор для каждого дерева - что такое e1, что такое e2 и т. д.
потому что когда все деревья совпадают - у них и e1, e2 совпадают

кажется,
что цвета на этих деревьях можно просто попробовать нарандомить
без полного перебора
можно даже так: берём граф, рандомим в нём сколько разных вариантов разбиения на 2-факторы,
берём эти деревья, генерим сколько-то раз раскраски рёбер в них
дальше пытаемся засунуть эти деревья в граф с учётом ограничений (хотя с другой стороны, тут уже и перебора нет)
хм
надо передумать
хм
хм
что-то странно
как я формулирую гипотезу? лол
то есть - в какой момент я выбираю раскраску рёбер?
в данную секунду кажется, что я должен рандомить и все наборы деревьев,
и все возможные способы раскрасить эти деревья
а уже после этого искать декомпозицию на 2-факторы с этими деревьями
там ещё ориентация была у рёбер

если все деревья совпадают, то я беру одну одинаковую схему раскраски для всех копий деревьев
вопрос такой - что, если это был набор из путей, и теперь я заменяю одну из копий пути на звезду?
по-моему там не получится сохранить единую схему для всех путей тогда, но это неточно

в любом случае, вот я порассуждал, теперь надо закодить какую-то общую схему для этого всего того, что выше


так, дошло
идея такая
кажется
есть 2m-регулярный граф
есть набор m-деревьев
допустим я их упаковал
тогда
кажется, что я могу попросить регулярность
в том плане, что у каждой вершины в графе степень 2m, по 2 ребра каждого цвета,
рёбра ориентированы, одно входит, другое выходит
типа хочется, чтоб в каждой вершине касалось k деревьев? UPD: кажется надо m + 1 просить
и в каждом дереве была антиориентация рёбер, а сами рёбра всех возможных цветов

DONE: я кстати не помню, чтоб я проверял в regular_digraph_decomposition
чтоб в каждой вершине было k деревьев
хотя это неправда, постой
k вершин степени 2m,
замощаю звёздами, в звезде m рёбер,
в среднем на вершину приходится m + 1 дерево
если говорить про пути - там тоже вроде m + 1 дерево

2 -> 1
3 -> 2


ой
я тут вспомнил
я же хитрый жук
я же разрешил юзать рёбра по два раза
просто в разных направлениях
вот это весело, вот это жара
и кстати, судя по коду, я таки перебираю по рёбрам сначала одного дерева, потом следующего,
t1e1 - t1e2 - ... - t1em - t2e1 - t2e2 - ... - tke1 - tke2 - ... - tkem

Так,
у меня снова есть временная память того, как код устроен и работает
можно приступать к рандомным вариациям

забавно, что у меня в файле написано
And about possible combination with 2-factorization (but now without orientation)


так
попробовал просто нарандомить деревьев, с рандомным выбором антиориентаций по ним,
порядок рёбер я не шафлю

хм
хм
как-то хитро
если взять 4 звезды
ими можно накрыть дважды полный граф на 4 вершинах
если взять 3 звезды и 1 путь
то ими нельзя накрыть такой граф

кажется граф должен быть простым, как минимум
или же число вершин должно быть больше чем m + 1, но на ориентацию рёбер рассчитывать точно не приходится

я вспомнил, что за обобщение гипотез хаггквиста и грэма-хаггквиста
речь про то, что я использую графы, где рёбра могут дублироваться (но в разных направлениях)
проблема в том, что особо не потестируешь графы, где рёбра не повторяются, они слишком крупные


так
задокументирую каждую переменную
и логику программы:
- сначала происходит генерация регулярного графа
	pii_edges
		сюда кладу все возможные пары (i, j)
		шаффлю
		беру по очереди, в надежде получить регулярный граф
	gr[2][n]
		это списки смежности
		0 - прямое направление по ребру,
		1 - обратное
	edge_deg[n][n] - 0 или 1, (v1, v2)
когда происходит перебор рёбер, я заранее знаю, какие из m рёбер мне надо вытащить - прямые или обратные (выходящие или входящие)

в рандомном наборе деревьев, можно, конечно, отказаться от этого перебора
но тогда рёбер перебирать надо будет очень много

да, походу реально придётся отказаться от антиориентированности
но наверно можно сохранить 2-факторы

надо код чуть переделать в переборе про 2-факторы

is_n
neib

iter отвечает за цвет

так, кажется начало доходить, что такое
neib[v]
и почему
is_bad = (u == neib[v][j]);
типа у меня все графы совпадают, я хочу одну(!) консистентную(!) раскраску на дерево(!)
типа я так гарантирую, что в разных 2-факторах - в параллельных рёбрах - разные рёбра на дереве исходном
вроде бы
а не, хз
там есть
v - это номер текущего дерева кажется, лол
v_in_cur_tree
cur_v
так, тогда возможно я так гарантирую, хм
что образ дерева в графе - останется деревом
точняк
а для 2-фактора вроде как всё же is_n есть

во, вот это уже интересно
iter=31; n=5: trees: 0 1 0 1 1
Found combination without solution!
iter#=31
trees: 0 1 0 1 1
trees:
#0: -1 0 1 0
#1: -1 0 0 0
#2: -1 0 1 0
#3: -1 0 0 0
#4: -1 0 0 0
graph:
0: 1 3 4
1: 0 2 3
2: 1 3 4
3: 0 2 4
4: 0 1 2

iter=50; n=6: trees: 1 1 0 1 1 1
Found combination without solution!
iter#=50
trees: 1 1 0 1 1 1
trees:
#0: -1 0 0 0
#1: -1 0 0 0
#2: -1 0 1 0
#3: -1 0 0 0
#4: -1 0 0 0
#5: -1 0 0 0
graph:
0: 1 3 5
1: 0 2 5
2: 1 3 4
3: 0 2 4
4: 1 2 5
5: 0 3 4

iter=159; n=7: trees: 1 1 0 1 1 1 1
Found combination without solution!
iter#=159
trees: 1 1 0 1 1 1 1
trees:
#0: -1 0 0 0
#1: -1 0 0 0
#2: -1 0 1 0
#3: -1 0 0 0
#4: -1 0 0 0
#5: -1 0 0 0
#6: -1 0 0 0
graph:
0: 4 5 6
1: 0 2 3
2: 1 4 6
3: 0 1 4
4: 2 3 5
5: 1 3 6
6: 0 2 5

ладно, буду смотреть на графы, где рёбра не параллельны
если попросить регулярное число графов, которые касаются каждой из вершин, то
iter=2; n=7: trees: 0 0 0 0 1 1 0
Found combination without solution!
iter#=2
trees: 0 0 0 0 1 1 0
trees:
#0: -1 0 1 0
#1: -1 0 1 0
#2: -1 0 1 0
#3: -1 0 1 0
#4: -1 0 0 0
#5: -1 0 0 0
#6: -1 0 1 0
graph:
0: 1 3 6
1: 2 4 5
2: 0 3 6
3: 1 5 6
4: 0 2 3
5: 0 2 4
6: 1 4 5

iter=1; n=7: trees: 1 0 1 1 1 1 0
Found combination without solution!
iter#=1
trees: 1 0 1 1 1 1 0
trees:
#0: -1 0 0 0
#1: -1 0 1 0
#2: -1 0 0 0
#3: -1 0 0 0
#4: -1 0 0 0
#5: -1 0 0 0
#6: -1 0 1 0
graph:
0: 1 5 6
1: 2 5 6
2: 0 3 4
3: 0 1 4
4: 0 1 6
5: 2 3 4
6: 2 3 5

а, блин, постой

все 5 комбинаций выше - это не контрпримеры пока что
потому что я забыл
что мне нужно добавить ещё один перебор
вроде бы
хм
мне казалось так
ну типа
про 2-факторы
я в каждом отдельном дереве заранее оговариваю, про каждое ребро, в каком из 2-факторов оно сидит
из-за чего перебор большой, но неполный
то есть если дерево звезда, то конечно пофиг в каком 2-факторе сидит какое ребро, они все равнозначны
а вот в пути не так, хм
а хотя лол
в примере
iter=20; n=5: trees: 1 1 1 0 1
Found combination without solution!
iter#=20
trees: 1 1 1 0 1
trees:
#0: -1 0 0 0
#1: -1 0 0 0
#2: -1 0 0 0
#3: -1 0 1 0
#4: -1 0 0 0
graph:
0: 1 2 3
1: 2 3 4
2: 0 1 4
3: 0 1 4
4: 0 2 3
пофиг, действительно, перебор действительно полный тут
тут всего 1 путь и 4 звезды
0-4-1-0 2-3
и 2-факторы определяются только этим путём, потому что пофиг на звёзды


================================================================
================================================================



задачка LISTREE
попробуем динамику
берём поддерево
допустим я знаю для каждого сына табличку LIS
табличка - для такой-то длины - такое-то минимальное число, если идти от листа
(на самом деле надо 2 таблички - идём каждый раз от листа, в одном случае растём по числам, в другом - падаем)
дальше - по каждому ребру могу его быстро добавить к обеим табличкам
дальше
есть поддерево, ещё раз
и куча таких пар табличек
как теперь их помёржить?
ну так-то ничего сложного, если путь не проходит через эту вершину - просто делаем новую пару табличек
в одной по каждой длине находим минимумы, в другой максимумы
а ещё нужно проверить кейс, когда я прихожу снизу с одного пути, попадаю в эту вершину, а дальше иду в другой путь
интуитивно кажется, что это можно сделать быстро, за линию (мб ещё логарифм) от числа сыновей
типа вот у нас есть эта пара табличек
если мы не паримся, что пойдём дважды по одному пути, то просто могли бы, скажем,
берём наилучший путь длины 1 в первой табличке, смотрим что за число, ищем ему хорошую пару во второй табличке, вот
кажется, что можно хранить 2 числа в табличках, типа, лучший путь для данной длины, и second best


0479
0389
256 11
236 10
147 10
158 11

22 g8

так
добавить кеширование, кстати
и в triples, и в tree_double_covers
код для перебора троек готов
можно теперь закодить использование двух троек


так
кажется я не прав
и можно не продолжать
я напортачил в коде
ошибся
вроде бы есть деревья, которые не расширяются, но при этом вполне себе сидят
в tree double cover'ах
да, увы

problem TODO:
	следующий шаг
	беру все двойные накрытия деревьями для треугольника
	и увеличиваю их по индукции
	надеясь, что я всегда могу расширить любое решение
	делаю вот как

	убираю tree_deg из структуры
	вообще наверно структуру TTreeMatching убираю

	вместо этого храню set масок деревьев с матчингами
	и отдельно храню сет троек (с посорченными масками)

	беру очередную тройку
	смотрю на каждое из деревьев
	если я уже рассматривал это дерево - то не перебираю для него маски заново, их тоже где-то надо временно хранить

	дальше из увеличенных деревьев пытаюсь построить хоть одну тройку

	если не смогли - изучаю этот пример


	отдельно ещё надо будет попробовать навесить ограничение, что к особой вершине рёбра накрыты 1 раз

а какая база?
  tms.push_back(TTreeMatching(extra.tc3s[0].g, {0, 1, 2, 3}));
  tms.push_back(TTreeMatching(extra.tc3s[0].g, {1, 0, 2, 3}));
  tms.push_back(TTreeMatching(extra.tc3s[0].g, {0, 2, 1, 3}));
  tms.push_back(TTreeMatching(extra.tc3s[0].g, {2, 0, 1, 3}));
  tms.push_back(TTreeMatching(extra.tc3s[0].g, {1, 2, 0, 3}));
  tms.push_back(TTreeMatching(extra.tc3s[0].g, {2, 1, 0, 3}));

0: {0, 1, 2, 3}, {1, 0, 2, 3}, {0, 2, 1, 3}
1: {0, 1, 2, 3}, {1, 0, 2, 3}, {1, 2, 0, 3}
2: {0, 1, 2, 3}, {0, 2, 1, 3}, {2, 0, 1, 3}
3: {0, 1, 2, 3}, {2, 0, 1, 3}, {1, 2, 0, 3}
должно получиться 8 решений
(и 2 решения, если накрывать special_edges по одному разу)

найс
проверил для обоих снарков на 18 вершинах
нерасширяемые деревья не сидят в семействах решений с двойным покрытием для TC3
это очень внушает позитивное настроение
в том плане
что я могу по индукции увеличивать решения с двойным покрытием
с сохранением свойства, что у них есть максимальные паросочетания
и не факт, что это приведёт к успеху, но это приятный факт тем не менее


6 -> 56 -> 376 -> 1580
так, что в итоге
решений с деревьями кажется немного получается, хотя до 10 вершин это нормально
DONE: нужно ускорить перебор деревьев - не перебирать третье дерево, а строить его автоматически

DONE:
	во
	можно вот чё по-быстрому проверить

	берём нерасширяющееся решение
	перебираем второе решение, любое
	строим или перебираем третье

	и ищем такие тройки с двойным покрытием графа

	да стопудов найду такое, да прям чтоб все 3 были нерасширяющиеся

	сделал вручную просто, глянул
	ну то есть я не проверил, что их нельзя расширить,
	но там симметричный граф по-крайней мере и все 3 пути аналогичны
	о, лол, они ещё и 3cdc (6c4c) образуют

	ну вот

	проблемка!

	хм

	смотрю на картинку глазами
	вроде бы можно расширить этот путь без проблем вообще до большего дерева и паросочетания

probably found nonextendable tree
edge: 0 3
edge: 0 2
edge: 3 4
edge: 1 4
edge: 1 5
2 0 3 4 1 5
с такими деревьями действительно будет сложновато

TODO:
	так,
	теперь ещё новая задача появилась
	нужно 6c4c решения уметь собирать в две тройки решений на деревьях
	и в 6c4c покрытие паросочетаниями, собственно
	может можно начать и с полного перебора, кто знает

так
я всё порефакторил
всё ок
теперь у меня есть 4 и 7 рёбер
готово!
вроде бы всё ещё есть нерасширяемые деревья
теперь их точно надо глянуть
а вообще такие деревья определённо будут мне мешать в рекурсии
потому что они наверняка найдутся в каком-нибудь 6c4c решении
и что с ними делать - хз - перестраивать что ли?
	но мб спасёт смена special вершины ещё, кстати
	хотя сомнительно
а ещё правда возможно, что такие деревья нельзя получить в тройках деревьев, которые накрывают граф 2 раза, но хз

так
идея была такая
беру граф (Петерсена)
каждую вершину перебираю по одной
объявляю её special_vertex, делаю на неё offed, соседним уменьшаю degs, mat не трогаю
дальше из такого состояния запускаю is_joinable



графы
эксперимент tc3_joining
мне нужна иллюстрация
конкретного примера
чтоб заценить - как я заполняю структуру TExtra

done: снова словил segfault
починить

done:
для начала надо починить is_joinable
и походу он был сломан и когда я проверял гипотезу про joining снарков,
надо бы перетестить
как снарки собираются по вершине
конкретно надо починить поведение функции add_edge
починил
todo: проверить is_joinable для снарков

допустим
берём граф петерсена
special_vertex сидит в less графе
тогда
extra
0: треугольник
не, на самом деле тут полный граф на 4 вершинах
#vertices = 3
special_vertex: не определён
1:
#vertices = 5
2:
#vertices = 7
3:
#vertices = 9

int graph_number = (vertices_left - 3) / 2 - 1;


extra:
  vector<TGraph> graphs;
  int special_vertex[MAX_GRAPH_COUNT];
  int cur2more[MAX_GRAPH_COUNT][MAX_VERTEX];
  int more2cur[MAX_GRAPH_COUNT][MAX_VERTEX];

глобальные массивы
  bool offed[MAX_VERTEX];
  int degs[MAX_VERTEX];
  bool mat[MAX_VERTEX][MAX_VERTEX];
TODO: переделать в неглобальные
которые нельзя использовать в build_tree_matchings



Theorem 6.10. The Jones polynomial of a link is delta-matroidal, in the sense that it is be determined
by a delta-matroid associated with a link diagram.


7. It would be a big breakthrough to find a cohomological proof of the Riemann-Roch Theorem for Graphs. Another major open problem is to formulate a higher-dimensional generalization analogous to the Hirzebruch-Riemann-Roch theorem in algebraic geometry.

2. (Combinatorics) In this recent paper written with Yang An (a Chinese undergraduate from Xi’an who spent Fall 2012 visiting Georgia Tech as part of a visiting student program), Farbod Shokrieh (my former student, now a postdoc at Cornell), and Greg Kuperberg, we use many of the ideas behind Riemann-Roch for Graphs to give a volume proof (which, as Greg Kuperberg says, is even better than a bijective proof) of a famous result in combinatorics, Kirchhoff’s Matrix-Tree Theorem. Specifically, associated to a graph G there is a g-dimensional real torus J(G) called the tropical Jacobian of G, which is completely analogous to the Jacobian of a compact Riemann surface. We prove that there is a (canonical up to translation) polyhedral decomposition of J(G) into \kappa_G parallelepipeds each of volume 1/{\rm vol}(J(G)), where \kappa_G is the number of spanning trees in G. On the other hand, the volume {\rm vol}(J(G)) can be computed as the square root of the absolute value of the determinant of any cofactor of the Laplacian matrix of G. Therefore this determinant is equal to the number of spanning trees in G, which is Kirchhoff’s theorem. The polyhedral decomposition of J(G) which we introduce contains a lot more interesting information that just the volumes of its pieces, so this should not be viewed as “just another proof” of Kirchhoff’s result. I will write another blog post at some point explaining the details of this decomposition and what it encodes.
http://arxiv.org/abs/1304.4259


Is there a graph analog of regulator, Stark Conjectures, class field theory for abelian graph coverings? Or more simply a quadratic reciprocity law, fundamental units? The ideal class group is the Jacobian of a graph and has order = number of spanning trees (paper of Roland Bacher, Pierre de la Harpe and Tatiana Nagnibeda). See also Riemann-Roch & Abel-Jacobi theory on a finite graph, by Matthew Baker & S. Norine. There is an analog of Brauer-Siegel theory (see H.S. and A.T., Part III, Advances in Math., 2007). Lorenzini has another kind of graph zeta

It is known that a (q + 1 )-regular undirected graph X is the quotient 
graph of the tree associated to PGL_2(L) by the fundamental group of X, 
where L is a nonarchimedean local field with q elements in its residue field 
(cf. [Serre - Trees]).
